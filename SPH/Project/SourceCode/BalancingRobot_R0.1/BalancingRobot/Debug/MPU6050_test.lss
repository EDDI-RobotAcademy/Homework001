
MPU6050_test.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000112  00800100  00001cde  00001d72  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001cde  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000003a  00800212  00800212  00001e84  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001e84  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001ee0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000130  00000000  00000000  00001f20  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000169f  00000000  00000000  00002050  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000c60  00000000  00000000  000036ef  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000ab5  00000000  00000000  0000434f  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000003b8  00000000  00000000  00004e04  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000006be  00000000  00000000  000051bc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000f52  00000000  00000000  0000587a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000f0  00000000  00000000  000067cc  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 cc 00 	jmp	0x198	; 0x198 <__ctors_end>
       4:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
       8:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
       c:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      10:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      14:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      18:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      1c:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      20:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      24:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      28:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      2c:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      30:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      34:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      38:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      3c:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      40:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      44:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      48:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      4c:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      50:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      54:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      58:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      5c:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      60:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      64:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      68:	08 4a       	sbci	r16, 0xA8	; 168
      6a:	d7 3b       	cpi	r29, 0xB7	; 183
      6c:	3b ce       	rjmp	.-906    	; 0xfffffce4 <__eeprom_end+0xff7efce4>
      6e:	01 6e       	ori	r16, 0xE1	; 225
      70:	84 bc       	out	0x24, r8	; 36
      72:	bf fd       	.word	0xfdbf	; ????
      74:	c1 2f       	mov	r28, r17
      76:	3d 6c       	ori	r19, 0xCD	; 205
      78:	74 31       	cpi	r23, 0x14	; 20
      7a:	9a bd       	out	0x2a, r25	; 42
      7c:	56 83       	std	Z+6, r21	; 0x06
      7e:	3d da       	rcall	.-2950   	; 0xfffff4fa <__eeprom_end+0xff7ef4fa>
      80:	3d 00       	.word	0x003d	; ????
      82:	c7 7f       	andi	r28, 0xF7	; 247
      84:	11 be       	out	0x31, r1	; 49
      86:	d9 e4       	ldi	r29, 0x49	; 73
      88:	bb 4c       	sbci	r27, 0xCB	; 203
      8a:	3e 91       	ld	r19, -X
      8c:	6b aa       	std	Y+51, r6	; 0x33
      8e:	aa be       	out	0x3a, r10	; 58
      90:	00 00       	nop
      92:	00 80       	ld	r0, Z
      94:	3f 00       	.word	0x003f	; ????

00000096 <__trampolines_end>:
      96:	6e 61       	ori	r22, 0x1E	; 30
      98:	6e 00       	.word	0x006e	; ????

0000009a <__c.2332>:
      9a:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      aa:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      ba:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      ca:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      da:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      ea:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
      fa:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     10a:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     11a:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     12a:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     13a:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     14a:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     15a:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     16a:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     17a:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     18a:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

00000198 <__ctors_end>:
     198:	11 24       	eor	r1, r1
     19a:	1f be       	out	0x3f, r1	; 63
     19c:	cf ef       	ldi	r28, 0xFF	; 255
     19e:	d8 e0       	ldi	r29, 0x08	; 8
     1a0:	de bf       	out	0x3e, r29	; 62
     1a2:	cd bf       	out	0x3d, r28	; 61

000001a4 <__do_copy_data>:
     1a4:	12 e0       	ldi	r17, 0x02	; 2
     1a6:	a0 e0       	ldi	r26, 0x00	; 0
     1a8:	b1 e0       	ldi	r27, 0x01	; 1
     1aa:	ee ed       	ldi	r30, 0xDE	; 222
     1ac:	fc e1       	ldi	r31, 0x1C	; 28
     1ae:	02 c0       	rjmp	.+4      	; 0x1b4 <__do_copy_data+0x10>
     1b0:	05 90       	lpm	r0, Z+
     1b2:	0d 92       	st	X+, r0
     1b4:	a2 31       	cpi	r26, 0x12	; 18
     1b6:	b1 07       	cpc	r27, r17
     1b8:	d9 f7       	brne	.-10     	; 0x1b0 <__do_copy_data+0xc>

000001ba <__do_clear_bss>:
     1ba:	22 e0       	ldi	r18, 0x02	; 2
     1bc:	a2 e1       	ldi	r26, 0x12	; 18
     1be:	b2 e0       	ldi	r27, 0x02	; 2
     1c0:	01 c0       	rjmp	.+2      	; 0x1c4 <.do_clear_bss_start>

000001c2 <.do_clear_bss_loop>:
     1c2:	1d 92       	st	X+, r1

000001c4 <.do_clear_bss_start>:
     1c4:	ac 34       	cpi	r26, 0x4C	; 76
     1c6:	b2 07       	cpc	r27, r18
     1c8:	e1 f7       	brne	.-8      	; 0x1c2 <.do_clear_bss_loop>
     1ca:	0e 94 cf 03 	call	0x79e	; 0x79e <main>
     1ce:	0c 94 6d 0e 	jmp	0x1cda	; 0x1cda <_exit>

000001d2 <__bad_interrupt>:
     1d2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001d6 <MPU6050_ReadBytes>:
Angle_3Dim Accel_Angle_Offset;
Angle_3Dim Gyro_Angle_Offset;


uint8_t MPU6050_ReadBytes(uint8_t reg_addr, uint8_t len, uint8_t* pData)
{
     1d6:	af 92       	push	r10
     1d8:	bf 92       	push	r11
     1da:	df 92       	push	r13
     1dc:	ef 92       	push	r14
     1de:	ff 92       	push	r15
     1e0:	0f 93       	push	r16
     1e2:	1f 93       	push	r17
     1e4:	cf 93       	push	r28
     1e6:	df 93       	push	r29
     1e8:	c8 2f       	mov	r28, r24
     1ea:	d6 2e       	mov	r13, r22
     1ec:	b4 2e       	mov	r11, r20
     1ee:	d5 2f       	mov	r29, r21
	uint8_t cnt = 0;
	if(len > 0)
     1f0:	66 23       	and	r22, r22
     1f2:	49 f1       	breq	.+82     	; 0x246 <MPU6050_ReadBytes+0x70>
	{
		i2c_start((MPU6050_ADD0 << 1) | I2C_WRITE);
     1f4:	80 ed       	ldi	r24, 0xD0	; 208
     1f6:	0e 94 60 04 	call	0x8c0	; 0x8c0 <i2c_start>
		i2c_write(reg_addr);
     1fa:	8c 2f       	mov	r24, r28
     1fc:	0e 94 93 04 	call	0x926	; 0x926 <i2c_write>
		i2c_rep_start((MPU6050_ADD0 << 1) | I2C_READ);
     200:	81 ed       	ldi	r24, 0xD1	; 209
     202:	0e 94 87 04 	call	0x90e	; 0x90e <i2c_rep_start>
		
		for(int i = 0; i < len; i++)
     206:	ed 2c       	mov	r14, r13
     208:	f1 2c       	mov	r15, r1
     20a:	1e 14       	cp	r1, r14
     20c:	1f 04       	cpc	r1, r15
     20e:	ec f4       	brge	.+58     	; 0x24a <MPU6050_ReadBytes+0x74>
     210:	0b 2d       	mov	r16, r11
     212:	1d 2f       	mov	r17, r29
     214:	c0 e0       	ldi	r28, 0x00	; 0
     216:	d0 e0       	ldi	r29, 0x00	; 0
		{
			cnt++;
			if(i == len-1) 
     218:	57 01       	movw	r10, r14
     21a:	81 e0       	ldi	r24, 0x01	; 1
     21c:	a8 1a       	sub	r10, r24
     21e:	b1 08       	sbc	r11, r1
     220:	ac 16       	cp	r10, r28
     222:	bd 06       	cpc	r11, r29
     224:	29 f4       	brne	.+10     	; 0x230 <MPU6050_ReadBytes+0x5a>
				pData[i] = i2c_readNak();
     226:	0e 94 b0 04 	call	0x960	; 0x960 <i2c_readNak>
     22a:	f8 01       	movw	r30, r16
     22c:	80 83       	st	Z, r24
     22e:	04 c0       	rjmp	.+8      	; 0x238 <MPU6050_ReadBytes+0x62>
			else 
				pData[i] = i2c_readAck();
     230:	0e 94 a5 04 	call	0x94a	; 0x94a <i2c_readAck>
     234:	f8 01       	movw	r30, r16
     236:	80 83       	st	Z, r24
	{
		i2c_start((MPU6050_ADD0 << 1) | I2C_WRITE);
		i2c_write(reg_addr);
		i2c_rep_start((MPU6050_ADD0 << 1) | I2C_READ);
		
		for(int i = 0; i < len; i++)
     238:	21 96       	adiw	r28, 0x01	; 1
     23a:	0f 5f       	subi	r16, 0xFF	; 255
     23c:	1f 4f       	sbci	r17, 0xFF	; 255
     23e:	ce 15       	cp	r28, r14
     240:	df 05       	cpc	r29, r15
     242:	71 f7       	brne	.-36     	; 0x220 <MPU6050_ReadBytes+0x4a>
     244:	03 c0       	rjmp	.+6      	; 0x24c <MPU6050_ReadBytes+0x76>
Angle_3Dim Gyro_Angle_Offset;


uint8_t MPU6050_ReadBytes(uint8_t reg_addr, uint8_t len, uint8_t* pData)
{
	uint8_t cnt = 0;
     246:	d1 2c       	mov	r13, r1
     248:	01 c0       	rjmp	.+2      	; 0x24c <MPU6050_ReadBytes+0x76>
     24a:	d1 2c       	mov	r13, r1
				pData[i] = i2c_readNak();
			else 
				pData[i] = i2c_readAck();
		}
	}	
	i2c_stop();
     24c:	0e 94 8a 04 	call	0x914	; 0x914 <i2c_stop>
	return cnt;
}
     250:	8d 2d       	mov	r24, r13
     252:	df 91       	pop	r29
     254:	cf 91       	pop	r28
     256:	1f 91       	pop	r17
     258:	0f 91       	pop	r16
     25a:	ff 90       	pop	r15
     25c:	ef 90       	pop	r14
     25e:	df 90       	pop	r13
     260:	bf 90       	pop	r11
     262:	af 90       	pop	r10
     264:	08 95       	ret

00000266 <MPU6050_ReadByte>:

uint8_t MPU6050_ReadByte(uint8_t reg_addr, uint8_t* pData)
{
     266:	ab 01       	movw	r20, r22
	return MPU6050_ReadBytes(reg_addr, 1, pData);
     268:	61 e0       	ldi	r22, 0x01	; 1
     26a:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <MPU6050_ReadBytes>
}
     26e:	08 95       	ret

00000270 <MPU6050_WriteBytes>:

void MPU6050_WriteBytes(uint8_t reg_addr, uint8_t len, uint8_t* pData)
{
     270:	ff 92       	push	r15
     272:	0f 93       	push	r16
     274:	1f 93       	push	r17
     276:	cf 93       	push	r28
     278:	df 93       	push	r29
     27a:	c8 2f       	mov	r28, r24
     27c:	f6 2e       	mov	r15, r22
     27e:	8a 01       	movw	r16, r20
	if(len > 0)
     280:	66 23       	and	r22, r22
     282:	89 f0       	breq	.+34     	; 0x2a6 <MPU6050_WriteBytes+0x36>
	{
		i2c_start((MPU6050_ADD0 << 1) | I2C_WRITE);
     284:	80 ed       	ldi	r24, 0xD0	; 208
     286:	0e 94 60 04 	call	0x8c0	; 0x8c0 <i2c_start>
		i2c_write(reg_addr);
     28a:	8c 2f       	mov	r24, r28
     28c:	0e 94 93 04 	call	0x926	; 0x926 <i2c_write>
		for(int i = 0; i < len; i++)
     290:	ff 20       	and	r15, r15
     292:	49 f0       	breq	.+18     	; 0x2a6 <MPU6050_WriteBytes+0x36>
     294:	e8 01       	movw	r28, r16
     296:	0f 0d       	add	r16, r15
     298:	11 1d       	adc	r17, r1
		i2c_write((uint8_t)pData[i]);
     29a:	89 91       	ld	r24, Y+
     29c:	0e 94 93 04 	call	0x926	; 0x926 <i2c_write>
{
	if(len > 0)
	{
		i2c_start((MPU6050_ADD0 << 1) | I2C_WRITE);
		i2c_write(reg_addr);
		for(int i = 0; i < len; i++)
     2a0:	c0 17       	cp	r28, r16
     2a2:	d1 07       	cpc	r29, r17
     2a4:	d1 f7       	brne	.-12     	; 0x29a <MPU6050_WriteBytes+0x2a>
		i2c_write((uint8_t)pData[i]);
	}
	
	i2c_stop();
     2a6:	0e 94 8a 04 	call	0x914	; 0x914 <i2c_stop>
}
     2aa:	df 91       	pop	r29
     2ac:	cf 91       	pop	r28
     2ae:	1f 91       	pop	r17
     2b0:	0f 91       	pop	r16
     2b2:	ff 90       	pop	r15
     2b4:	08 95       	ret

000002b6 <MPU6050_WriteByte>:

void MPU6050_WriteByte(uint8_t reg_addr, uint8_t data)
{
     2b6:	cf 93       	push	r28
     2b8:	df 93       	push	r29
     2ba:	1f 92       	push	r1
     2bc:	cd b7       	in	r28, 0x3d	; 61
     2be:	de b7       	in	r29, 0x3e	; 62
     2c0:	69 83       	std	Y+1, r22	; 0x01
	MPU6050_WriteBytes(reg_addr, 1, &data);
     2c2:	ae 01       	movw	r20, r28
     2c4:	4f 5f       	subi	r20, 0xFF	; 255
     2c6:	5f 4f       	sbci	r21, 0xFF	; 255
     2c8:	61 e0       	ldi	r22, 0x01	; 1
     2ca:	0e 94 38 01 	call	0x270	; 0x270 <MPU6050_WriteBytes>
}
     2ce:	0f 90       	pop	r0
     2d0:	df 91       	pop	r29
     2d2:	cf 91       	pop	r28
     2d4:	08 95       	ret

000002d6 <MPU6050_WriteBits>:

void MPU6050_WriteBits(uint8_t reg_addr, uint8_t bit, uint8_t len, uint8_t data)
{
     2d6:	ef 92       	push	r14
     2d8:	ff 92       	push	r15
     2da:	0f 93       	push	r16
     2dc:	1f 93       	push	r17
     2de:	cf 93       	push	r28
     2e0:	df 93       	push	r29
     2e2:	1f 92       	push	r1
     2e4:	cd b7       	in	r28, 0x3d	; 61
     2e6:	de b7       	in	r29, 0x3e	; 62
	if(len > 0)
     2e8:	44 23       	and	r20, r20
     2ea:	91 f1       	breq	.+100    	; 0x350 <MPU6050_WriteBits+0x7a>
     2ec:	f2 2e       	mov	r15, r18
     2ee:	04 2f       	mov	r16, r20
     2f0:	16 2f       	mov	r17, r22
     2f2:	e8 2e       	mov	r14, r24
	{
		uint8_t tmp = 0;
     2f4:	19 82       	std	Y+1, r1	; 0x01
		if(MPU6050_ReadByte(reg_addr, &tmp) != 0)
     2f6:	be 01       	movw	r22, r28
     2f8:	6f 5f       	subi	r22, 0xFF	; 255
     2fa:	7f 4f       	sbci	r23, 0xFF	; 255
     2fc:	0e 94 33 01 	call	0x266	; 0x266 <MPU6050_ReadByte>
     300:	88 23       	and	r24, r24
     302:	11 f1       	breq	.+68     	; 0x348 <MPU6050_WriteBits+0x72>
		{
			uint8_t mask = ((1 << len) - 1) << (bit - len + 1);
     304:	61 2f       	mov	r22, r17
     306:	70 e0       	ldi	r23, 0x00	; 0
     308:	60 1b       	sub	r22, r16
     30a:	71 09       	sbc	r23, r1
     30c:	6f 5f       	subi	r22, 0xFF	; 255
     30e:	7f 4f       	sbci	r23, 0xFF	; 255
     310:	81 e0       	ldi	r24, 0x01	; 1
     312:	90 e0       	ldi	r25, 0x00	; 0
     314:	02 c0       	rjmp	.+4      	; 0x31a <MPU6050_WriteBits+0x44>
     316:	88 0f       	add	r24, r24
     318:	99 1f       	adc	r25, r25
     31a:	0a 95       	dec	r16
     31c:	e2 f7       	brpl	.-8      	; 0x316 <MPU6050_WriteBits+0x40>
     31e:	01 97       	sbiw	r24, 0x01	; 1
     320:	06 2e       	mov	r0, r22
     322:	02 c0       	rjmp	.+4      	; 0x328 <MPU6050_WriteBits+0x52>
     324:	88 0f       	add	r24, r24
     326:	99 1f       	adc	r25, r25
     328:	0a 94       	dec	r0
     32a:	e2 f7       	brpl	.-8      	; 0x324 <MPU6050_WriteBits+0x4e>
			data <<= (bit - len + 1);
     32c:	2f 2d       	mov	r18, r15
     32e:	30 e0       	ldi	r19, 0x00	; 0
     330:	02 c0       	rjmp	.+4      	; 0x336 <MPU6050_WriteBits+0x60>
     332:	22 0f       	add	r18, r18
     334:	33 1f       	adc	r19, r19
     336:	6a 95       	dec	r22
     338:	e2 f7       	brpl	.-8      	; 0x332 <MPU6050_WriteBits+0x5c>
			data &= mask;
			tmp &= ~mask;
			tmp |= data;
     33a:	f8 2e       	mov	r15, r24
     33c:	f0 94       	com	r15
     33e:	99 81       	ldd	r25, Y+1	; 0x01
     340:	f9 22       	and	r15, r25
     342:	82 23       	and	r24, r18
     344:	8f 29       	or	r24, r15
     346:	89 83       	std	Y+1, r24	; 0x01
		}
		MPU6050_WriteByte(reg_addr, tmp);
     348:	69 81       	ldd	r22, Y+1	; 0x01
     34a:	8e 2d       	mov	r24, r14
     34c:	0e 94 5b 01 	call	0x2b6	; 0x2b6 <MPU6050_WriteByte>
	}
}
     350:	0f 90       	pop	r0
     352:	df 91       	pop	r29
     354:	cf 91       	pop	r28
     356:	1f 91       	pop	r17
     358:	0f 91       	pop	r16
     35a:	ff 90       	pop	r15
     35c:	ef 90       	pop	r14
     35e:	08 95       	ret

00000360 <InitMPU6050>:
{
	Axis_Data_Struct Accel_Offset;
	Axis_Data_Struct Gyro_Offset;
	
	//Register : PWR management1, Set Bit : SLEEP MODE, Set SLEEP MODE Bit length : 1, Disable SLEEP MODE
	MPU6050_WriteBits(PWR_MGMT_1, SLEEP_MODE_BIT, SLEEP_MODE_LEN, DISABLE);
     360:	20 e0       	ldi	r18, 0x00	; 0
     362:	41 e0       	ldi	r20, 0x01	; 1
     364:	66 e0       	ldi	r22, 0x06	; 6
     366:	8b e6       	ldi	r24, 0x6B	; 107
     368:	0e 94 6b 01 	call	0x2d6	; 0x2d6 <MPU6050_WriteBits>
	
	//Register : PWR management1, Set Bit : CLK Select, Set CLK Select length : 3, Set CLK source : PLL with X axis gyroscope reference
	MPU6050_WriteBits(PWR_MGMT_1, CLKSEL_BIT, CLKSEL_LEN, CLKSEL1);
     36c:	21 e0       	ldi	r18, 0x01	; 1
     36e:	43 e0       	ldi	r20, 0x03	; 3
     370:	62 e0       	ldi	r22, 0x02	; 2
     372:	8b e6       	ldi	r24, 0x6B	; 107
     374:	0e 94 6b 01 	call	0x2d6	; 0x2d6 <MPU6050_WriteBits>
	//MPU6050_WriteBits(INT_ENABLE, DATA_RDY_INT_EN, DATA_RDY_INT_EN_LEN, ENABLE);
	
	//Register : Configuration, Set Bit : Digital LowPassFilter Config, Set DLPF Bit length : 3, 
	//Set DLPF config3 : Accele = 44Hz(Bandwidth), 4.9ms(Delay), Fs = 1KHz / Gyro = 42Hz(Bandwidth), 4.8ms(Delay), Fs = 1KHz -> 2020.12.07
	//Set DLPF config0 : Accele = 260Hz(Bandwidth), 0ms(Delay), Fs = 1KHz / Gyro = 256Hz(Bandwidth), 0.98ms(Delay), Fs = 8KHz -> 2020.12.28
	MPU6050_WriteBits(CONFIG, DLPF_CFG_BIT, DLPF_CFG_LEN, DLPF_CFG0);
     378:	20 e0       	ldi	r18, 0x00	; 0
     37a:	43 e0       	ldi	r20, 0x03	; 3
     37c:	62 e0       	ldi	r22, 0x02	; 2
     37e:	8a e1       	ldi	r24, 0x1A	; 26
     380:	0e 94 6b 01 	call	0x2d6	; 0x2d6 <MPU6050_WriteBits>
	
	//Register : Sample Rate, Writes 0x04 : Sample Rate = Gyroscope Output Rate / (1 + SMPLRT_DIV(=4))
	//where Gyroscope Output Rate = 8kHz when the DLPF is disabled (DLPF_CFG = 0 or 7), and 1kHz
	//when the DLPF is enabled
	MPU6050_WriteByte(SMPLRT_DIV, 4);
     384:	64 e0       	ldi	r22, 0x04	; 4
     386:	89 e1       	ldi	r24, 0x19	; 25
     388:	0e 94 5b 01 	call	0x2b6	; 0x2b6 <MPU6050_WriteByte>
	
	//Register : Gyro Configuration, Set Bit : Gyro Full Scale, Set Bit length : 2, Set Gyro Full Scale : +,-2000 degree/s
	MPU6050_WriteBits(GYRO_CONFIG, GYRO_FS_SEL_BIT, GYRO_FS_SEL_LEN, GYRO_FS_SEL2000);
     38c:	23 e0       	ldi	r18, 0x03	; 3
     38e:	42 e0       	ldi	r20, 0x02	; 2
     390:	64 e0       	ldi	r22, 0x04	; 4
     392:	8b e1       	ldi	r24, 0x1B	; 27
     394:	0e 94 6b 01 	call	0x2d6	; 0x2d6 <MPU6050_WriteBits>
	
	//Register : Accelerometer Configuration, Set Bit : Accelerometer Full Scale, Set Bit length : 2, Set Accel Full Scale : +,-16g
	MPU6050_WriteBits(ACCEL_CONFIG, ACCEL_AFS_SEL_BIT, ACCEL_AFS_SEL_LEN, ACCEL_AFS_SEL16G);
     398:	23 e0       	ldi	r18, 0x03	; 3
     39a:	42 e0       	ldi	r20, 0x02	; 2
     39c:	64 e0       	ldi	r22, 0x04	; 4
     39e:	8c e1       	ldi	r24, 0x1C	; 28
     3a0:	0e 94 6b 01 	call	0x2d6	; 0x2d6 <MPU6050_WriteBits>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     3a4:	2f ef       	ldi	r18, 0xFF	; 255
     3a6:	86 e7       	ldi	r24, 0x76	; 118
     3a8:	91 e0       	ldi	r25, 0x01	; 1
     3aa:	21 50       	subi	r18, 0x01	; 1
     3ac:	80 40       	sbci	r24, 0x00	; 0
     3ae:	90 40       	sbci	r25, 0x00	; 0
     3b0:	e1 f7       	brne	.-8      	; 0x3aa <InitMPU6050+0x4a>
     3b2:	00 c0       	rjmp	.+0      	; 0x3b4 <InitMPU6050+0x54>
     3b4:	00 00       	nop
     3b6:	08 95       	ret

000003b8 <get_MPU6050_RawData>:
	_delay_ms(30);
}

//Get MPU6050 Accelerometer & Gyro RawData
void get_MPU6050_RawData(pAxis_Data Accel_Data, pAxis_Data Gyro_Data)
{	
     3b8:	ef 92       	push	r14
     3ba:	ff 92       	push	r15
     3bc:	0f 93       	push	r16
     3be:	1f 93       	push	r17
     3c0:	cf 93       	push	r28
     3c2:	df 93       	push	r29
     3c4:	cd b7       	in	r28, 0x3d	; 61
     3c6:	de b7       	in	r29, 0x3e	; 62
     3c8:	2e 97       	sbiw	r28, 0x0e	; 14
     3ca:	0f b6       	in	r0, 0x3f	; 63
     3cc:	f8 94       	cli
     3ce:	de bf       	out	0x3e, r29	; 62
     3d0:	0f be       	out	0x3f, r0	; 63
     3d2:	cd bf       	out	0x3d, r28	; 61
     3d4:	7c 01       	movw	r14, r24
     3d6:	8b 01       	movw	r16, r22
	uint8_t buffer[14] = {0,};
     3d8:	ae 01       	movw	r20, r28
     3da:	4f 5f       	subi	r20, 0xFF	; 255
     3dc:	5f 4f       	sbci	r21, 0xFF	; 255
     3de:	8e e0       	ldi	r24, 0x0E	; 14
     3e0:	fa 01       	movw	r30, r20
     3e2:	11 92       	st	Z+, r1
     3e4:	8a 95       	dec	r24
     3e6:	e9 f7       	brne	.-6      	; 0x3e2 <get_MPU6050_RawData+0x2a>
	MPU6050_ReadBytes(ACCEL_XOUT_H, 14, buffer);
     3e8:	6e e0       	ldi	r22, 0x0E	; 14
     3ea:	8b e3       	ldi	r24, 0x3B	; 59
     3ec:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <MPU6050_ReadBytes>
	
	Accel_Data->Xaxis = (uint16_t)buffer[0] << 8 | buffer[1];
     3f0:	89 81       	ldd	r24, Y+1	; 0x01
     3f2:	90 e0       	ldi	r25, 0x00	; 0
     3f4:	98 2f       	mov	r25, r24
     3f6:	88 27       	eor	r24, r24
     3f8:	2a 81       	ldd	r18, Y+2	; 0x02
     3fa:	82 2b       	or	r24, r18
     3fc:	f7 01       	movw	r30, r14
     3fe:	91 83       	std	Z+1, r25	; 0x01
     400:	80 83       	st	Z, r24
	Accel_Data->Yaxis = (uint16_t)buffer[2] << 8 | buffer[3];
     402:	8b 81       	ldd	r24, Y+3	; 0x03
     404:	90 e0       	ldi	r25, 0x00	; 0
     406:	98 2f       	mov	r25, r24
     408:	88 27       	eor	r24, r24
     40a:	2c 81       	ldd	r18, Y+4	; 0x04
     40c:	82 2b       	or	r24, r18
     40e:	93 83       	std	Z+3, r25	; 0x03
     410:	82 83       	std	Z+2, r24	; 0x02
	Accel_Data->Zaxis = (uint16_t)buffer[4] << 8 | buffer[5];
     412:	8d 81       	ldd	r24, Y+5	; 0x05
     414:	90 e0       	ldi	r25, 0x00	; 0
     416:	98 2f       	mov	r25, r24
     418:	88 27       	eor	r24, r24
     41a:	2e 81       	ldd	r18, Y+6	; 0x06
     41c:	82 2b       	or	r24, r18
     41e:	95 83       	std	Z+5, r25	; 0x05
     420:	84 83       	std	Z+4, r24	; 0x04
	
	Gyro_Data->Xaxis = (uint16_t)buffer[8] << 8 | buffer[9];
     422:	89 85       	ldd	r24, Y+9	; 0x09
     424:	90 e0       	ldi	r25, 0x00	; 0
     426:	98 2f       	mov	r25, r24
     428:	88 27       	eor	r24, r24
     42a:	2a 85       	ldd	r18, Y+10	; 0x0a
     42c:	82 2b       	or	r24, r18
     42e:	f8 01       	movw	r30, r16
     430:	91 83       	std	Z+1, r25	; 0x01
     432:	80 83       	st	Z, r24
	Gyro_Data->Yaxis = (uint16_t)buffer[10] << 8 | buffer[11];
     434:	8b 85       	ldd	r24, Y+11	; 0x0b
     436:	90 e0       	ldi	r25, 0x00	; 0
     438:	98 2f       	mov	r25, r24
     43a:	88 27       	eor	r24, r24
     43c:	2c 85       	ldd	r18, Y+12	; 0x0c
     43e:	82 2b       	or	r24, r18
     440:	93 83       	std	Z+3, r25	; 0x03
     442:	82 83       	std	Z+2, r24	; 0x02
	Gyro_Data->Zaxis = (uint16_t)buffer[12] << 8 | buffer[13];
     444:	8d 85       	ldd	r24, Y+13	; 0x0d
     446:	90 e0       	ldi	r25, 0x00	; 0
     448:	98 2f       	mov	r25, r24
     44a:	88 27       	eor	r24, r24
     44c:	2e 85       	ldd	r18, Y+14	; 0x0e
     44e:	82 2b       	or	r24, r18
     450:	95 83       	std	Z+5, r25	; 0x05
     452:	84 83       	std	Z+4, r24	; 0x04
}
     454:	2e 96       	adiw	r28, 0x0e	; 14
     456:	0f b6       	in	r0, 0x3f	; 63
     458:	f8 94       	cli
     45a:	de bf       	out	0x3e, r29	; 62
     45c:	0f be       	out	0x3f, r0	; 63
     45e:	cd bf       	out	0x3d, r28	; 61
     460:	df 91       	pop	r29
     462:	cf 91       	pop	r28
     464:	1f 91       	pop	r17
     466:	0f 91       	pop	r16
     468:	ff 90       	pop	r15
     46a:	ef 90       	pop	r14
     46c:	08 95       	ret

0000046e <Calc_Accel_RollPitch>:

//
void Calc_Accel_RollPitch(pAxis_Data AccelData, pAngle_3Dim Accel_Angle)
{
     46e:	8f 92       	push	r8
     470:	9f 92       	push	r9
     472:	af 92       	push	r10
     474:	bf 92       	push	r11
     476:	cf 92       	push	r12
     478:	df 92       	push	r13
     47a:	ef 92       	push	r14
     47c:	ff 92       	push	r15
     47e:	0f 93       	push	r16
     480:	1f 93       	push	r17
     482:	cf 93       	push	r28
     484:	df 93       	push	r29
     486:	ec 01       	movw	r28, r24
     488:	8b 01       	movw	r16, r22
	Angle_3Dim Angle_Tmp;
	
	Angle_Tmp.Roll = (double)AccelData -> Xaxis / (double)ACCEL_LSB_FS16G;
     48a:	68 81       	ld	r22, Y
     48c:	79 81       	ldd	r23, Y+1	; 0x01
     48e:	07 2e       	mov	r0, r23
     490:	00 0c       	add	r0, r0
     492:	88 0b       	sbc	r24, r24
     494:	99 0b       	sbc	r25, r25
     496:	0e 94 30 06 	call	0xc60	; 0xc60 <__floatsisf>
     49a:	20 e0       	ldi	r18, 0x00	; 0
     49c:	30 e0       	ldi	r19, 0x00	; 0
     49e:	40 e0       	ldi	r20, 0x00	; 0
     4a0:	5a e3       	ldi	r21, 0x3A	; 58
     4a2:	0e 94 eb 06 	call	0xdd6	; 0xdd6 <__mulsf3>
     4a6:	4b 01       	movw	r8, r22
     4a8:	5c 01       	movw	r10, r24
	Angle_Tmp.Pitch = (double)AccelData -> Yaxis / (double)ACCEL_LSB_FS16G;
	Angle_Tmp.Yaw = (double)AccelData -> Zaxis / (double)ACCEL_LSB_FS16G;
     4aa:	6c 81       	ldd	r22, Y+4	; 0x04
     4ac:	7d 81       	ldd	r23, Y+5	; 0x05
     4ae:	07 2e       	mov	r0, r23
     4b0:	00 0c       	add	r0, r0
     4b2:	88 0b       	sbc	r24, r24
     4b4:	99 0b       	sbc	r25, r25
     4b6:	0e 94 30 06 	call	0xc60	; 0xc60 <__floatsisf>
     4ba:	20 e0       	ldi	r18, 0x00	; 0
     4bc:	30 e0       	ldi	r19, 0x00	; 0
     4be:	40 e0       	ldi	r20, 0x00	; 0
     4c0:	5a e3       	ldi	r21, 0x3A	; 58
     4c2:	0e 94 eb 06 	call	0xdd6	; 0xdd6 <__mulsf3>
     4c6:	6b 01       	movw	r12, r22
     4c8:	7c 01       	movw	r14, r24
	
	Accel_Angle->Roll = atan2(Angle_Tmp.Pitch, Angle_Tmp.Yaw) * 180.0F / (double)PI;
     4ca:	6a 81       	ldd	r22, Y+2	; 0x02
     4cc:	7b 81       	ldd	r23, Y+3	; 0x03
     4ce:	07 2e       	mov	r0, r23
     4d0:	00 0c       	add	r0, r0
     4d2:	88 0b       	sbc	r24, r24
     4d4:	99 0b       	sbc	r25, r25
     4d6:	0e 94 30 06 	call	0xc60	; 0xc60 <__floatsisf>
     4da:	20 e0       	ldi	r18, 0x00	; 0
     4dc:	30 e0       	ldi	r19, 0x00	; 0
     4de:	40 e0       	ldi	r20, 0x00	; 0
     4e0:	5a e3       	ldi	r21, 0x3A	; 58
     4e2:	0e 94 eb 06 	call	0xdd6	; 0xdd6 <__mulsf3>
     4e6:	a7 01       	movw	r20, r14
     4e8:	96 01       	movw	r18, r12
     4ea:	0e 94 5d 05 	call	0xaba	; 0xaba <atan2>
     4ee:	20 e0       	ldi	r18, 0x00	; 0
     4f0:	30 e0       	ldi	r19, 0x00	; 0
     4f2:	44 e3       	ldi	r20, 0x34	; 52
     4f4:	53 e4       	ldi	r21, 0x43	; 67
     4f6:	0e 94 eb 06 	call	0xdd6	; 0xdd6 <__mulsf3>
     4fa:	2b ed       	ldi	r18, 0xDB	; 219
     4fc:	3f e0       	ldi	r19, 0x0F	; 15
     4fe:	49 e4       	ldi	r20, 0x49	; 73
     500:	50 e4       	ldi	r21, 0x40	; 64
     502:	0e 94 bc 05 	call	0xb78	; 0xb78 <__divsf3>
     506:	f8 01       	movw	r30, r16
     508:	60 83       	st	Z, r22
     50a:	71 83       	std	Z+1, r23	; 0x01
     50c:	82 83       	std	Z+2, r24	; 0x02
     50e:	93 83       	std	Z+3, r25	; 0x03
	Accel_Angle->Pitch = atan2(Angle_Tmp.Roll, Angle_Tmp.Yaw) * 180.0F / (double)PI;
     510:	a7 01       	movw	r20, r14
     512:	96 01       	movw	r18, r12
     514:	c5 01       	movw	r24, r10
     516:	b4 01       	movw	r22, r8
     518:	0e 94 5d 05 	call	0xaba	; 0xaba <atan2>
     51c:	20 e0       	ldi	r18, 0x00	; 0
     51e:	30 e0       	ldi	r19, 0x00	; 0
     520:	44 e3       	ldi	r20, 0x34	; 52
     522:	53 e4       	ldi	r21, 0x43	; 67
     524:	0e 94 eb 06 	call	0xdd6	; 0xdd6 <__mulsf3>
     528:	2b ed       	ldi	r18, 0xDB	; 219
     52a:	3f e0       	ldi	r19, 0x0F	; 15
     52c:	49 e4       	ldi	r20, 0x49	; 73
     52e:	50 e4       	ldi	r21, 0x40	; 64
     530:	0e 94 bc 05 	call	0xb78	; 0xb78 <__divsf3>
     534:	f8 01       	movw	r30, r16
     536:	64 83       	std	Z+4, r22	; 0x04
     538:	75 83       	std	Z+5, r23	; 0x05
     53a:	86 83       	std	Z+6, r24	; 0x06
     53c:	97 83       	std	Z+7, r25	; 0x07
}
     53e:	df 91       	pop	r29
     540:	cf 91       	pop	r28
     542:	1f 91       	pop	r17
     544:	0f 91       	pop	r16
     546:	ff 90       	pop	r15
     548:	ef 90       	pop	r14
     54a:	df 90       	pop	r13
     54c:	cf 90       	pop	r12
     54e:	bf 90       	pop	r11
     550:	af 90       	pop	r10
     552:	9f 90       	pop	r9
     554:	8f 90       	pop	r8
     556:	08 95       	ret

00000558 <Integral_GyroData>:

void Integral_GyroData(pAxis_Data GyroData, pAngle_3Dim Gyro_Angle)
{
     558:	8f 92       	push	r8
     55a:	9f 92       	push	r9
     55c:	af 92       	push	r10
     55e:	bf 92       	push	r11
     560:	cf 92       	push	r12
     562:	df 92       	push	r13
     564:	ef 92       	push	r14
     566:	ff 92       	push	r15
     568:	0f 93       	push	r16
     56a:	1f 93       	push	r17
     56c:	cf 93       	push	r28
     56e:	df 93       	push	r29
     570:	8c 01       	movw	r16, r24
     572:	eb 01       	movw	r28, r22
	Angle_Tmp.Roll = 0;
	Angle_Tmp.Pitch = 0;
	Angle_Tmp.Yaw = 0;
		
	Angle_Tmp.Roll = (double)GyroData->Xaxis / (double)GYRO_LSB_FS2000;
	Angle_Tmp.Pitch = (double)GyroData->Yaxis / (double)GYRO_LSB_FS2000;
     574:	fc 01       	movw	r30, r24
     576:	62 81       	ldd	r22, Z+2	; 0x02
     578:	73 81       	ldd	r23, Z+3	; 0x03
     57a:	07 2e       	mov	r0, r23
     57c:	00 0c       	add	r0, r0
     57e:	88 0b       	sbc	r24, r24
     580:	99 0b       	sbc	r25, r25
     582:	0e 94 30 06 	call	0xc60	; 0xc60 <__floatsisf>
     586:	23 e3       	ldi	r18, 0x33	; 51
     588:	33 e3       	ldi	r19, 0x33	; 51
     58a:	43 e8       	ldi	r20, 0x83	; 131
     58c:	51 e4       	ldi	r21, 0x41	; 65
     58e:	0e 94 bc 05 	call	0xb78	; 0xb78 <__divsf3>
     592:	4b 01       	movw	r8, r22
     594:	5c 01       	movw	r10, r24
	Angle_Tmp.Yaw = (double)GyroData->Zaxis  / (double)GYRO_LSB_FS2000;
     596:	f8 01       	movw	r30, r16
     598:	64 81       	ldd	r22, Z+4	; 0x04
     59a:	75 81       	ldd	r23, Z+5	; 0x05
     59c:	07 2e       	mov	r0, r23
     59e:	00 0c       	add	r0, r0
     5a0:	88 0b       	sbc	r24, r24
     5a2:	99 0b       	sbc	r25, r25
     5a4:	0e 94 30 06 	call	0xc60	; 0xc60 <__floatsisf>
     5a8:	23 e3       	ldi	r18, 0x33	; 51
     5aa:	33 e3       	ldi	r19, 0x33	; 51
     5ac:	43 e8       	ldi	r20, 0x83	; 131
     5ae:	51 e4       	ldi	r21, 0x41	; 65
     5b0:	0e 94 bc 05 	call	0xb78	; 0xb78 <__divsf3>
     5b4:	6b 01       	movw	r12, r22
     5b6:	7c 01       	movw	r14, r24
	
	Gyro_Angle->Roll = Angle_Tmp.Roll*dt + Gyro_Angle->Roll;
     5b8:	f8 01       	movw	r30, r16
     5ba:	60 81       	ld	r22, Z
     5bc:	71 81       	ldd	r23, Z+1	; 0x01
     5be:	07 2e       	mov	r0, r23
     5c0:	00 0c       	add	r0, r0
     5c2:	88 0b       	sbc	r24, r24
     5c4:	99 0b       	sbc	r25, r25
     5c6:	0e 94 30 06 	call	0xc60	; 0xc60 <__floatsisf>
     5ca:	23 e3       	ldi	r18, 0x33	; 51
     5cc:	33 e3       	ldi	r19, 0x33	; 51
     5ce:	43 e8       	ldi	r20, 0x83	; 131
     5d0:	51 e4       	ldi	r21, 0x41	; 65
     5d2:	0e 94 bc 05 	call	0xb78	; 0xb78 <__divsf3>
     5d6:	20 e0       	ldi	r18, 0x00	; 0
     5d8:	30 e0       	ldi	r19, 0x00	; 0
     5da:	40 e0       	ldi	r20, 0x00	; 0
     5dc:	5f e3       	ldi	r21, 0x3F	; 63
     5de:	0e 94 eb 06 	call	0xdd6	; 0xdd6 <__mulsf3>
     5e2:	9b 01       	movw	r18, r22
     5e4:	ac 01       	movw	r20, r24
     5e6:	68 81       	ld	r22, Y
     5e8:	79 81       	ldd	r23, Y+1	; 0x01
     5ea:	8a 81       	ldd	r24, Y+2	; 0x02
     5ec:	9b 81       	ldd	r25, Y+3	; 0x03
     5ee:	0e 94 de 04 	call	0x9bc	; 0x9bc <__addsf3>
     5f2:	68 83       	st	Y, r22
     5f4:	79 83       	std	Y+1, r23	; 0x01
     5f6:	8a 83       	std	Y+2, r24	; 0x02
     5f8:	9b 83       	std	Y+3, r25	; 0x03
	Gyro_Angle->Pitch = Angle_Tmp.Pitch*dt + Gyro_Angle->Pitch;
     5fa:	20 e0       	ldi	r18, 0x00	; 0
     5fc:	30 e0       	ldi	r19, 0x00	; 0
     5fe:	40 e0       	ldi	r20, 0x00	; 0
     600:	5f e3       	ldi	r21, 0x3F	; 63
     602:	c5 01       	movw	r24, r10
     604:	b4 01       	movw	r22, r8
     606:	0e 94 eb 06 	call	0xdd6	; 0xdd6 <__mulsf3>
     60a:	9b 01       	movw	r18, r22
     60c:	ac 01       	movw	r20, r24
     60e:	6c 81       	ldd	r22, Y+4	; 0x04
     610:	7d 81       	ldd	r23, Y+5	; 0x05
     612:	8e 81       	ldd	r24, Y+6	; 0x06
     614:	9f 81       	ldd	r25, Y+7	; 0x07
     616:	0e 94 de 04 	call	0x9bc	; 0x9bc <__addsf3>
     61a:	6c 83       	std	Y+4, r22	; 0x04
     61c:	7d 83       	std	Y+5, r23	; 0x05
     61e:	8e 83       	std	Y+6, r24	; 0x06
     620:	9f 83       	std	Y+7, r25	; 0x07
	Gyro_Angle->Yaw = Angle_Tmp.Yaw*dt + Gyro_Angle->Yaw;
     622:	20 e0       	ldi	r18, 0x00	; 0
     624:	30 e0       	ldi	r19, 0x00	; 0
     626:	40 e0       	ldi	r20, 0x00	; 0
     628:	5f e3       	ldi	r21, 0x3F	; 63
     62a:	c7 01       	movw	r24, r14
     62c:	b6 01       	movw	r22, r12
     62e:	0e 94 eb 06 	call	0xdd6	; 0xdd6 <__mulsf3>
     632:	9b 01       	movw	r18, r22
     634:	ac 01       	movw	r20, r24
     636:	68 85       	ldd	r22, Y+8	; 0x08
     638:	79 85       	ldd	r23, Y+9	; 0x09
     63a:	8a 85       	ldd	r24, Y+10	; 0x0a
     63c:	9b 85       	ldd	r25, Y+11	; 0x0b
     63e:	0e 94 de 04 	call	0x9bc	; 0x9bc <__addsf3>
     642:	68 87       	std	Y+8, r22	; 0x08
     644:	79 87       	std	Y+9, r23	; 0x09
     646:	8a 87       	std	Y+10, r24	; 0x0a
     648:	9b 87       	std	Y+11, r25	; 0x0b
}
     64a:	df 91       	pop	r29
     64c:	cf 91       	pop	r28
     64e:	1f 91       	pop	r17
     650:	0f 91       	pop	r16
     652:	ff 90       	pop	r15
     654:	ef 90       	pop	r14
     656:	df 90       	pop	r13
     658:	cf 90       	pop	r12
     65a:	bf 90       	pop	r11
     65c:	af 90       	pop	r10
     65e:	9f 90       	pop	r9
     660:	8f 90       	pop	r8
     662:	08 95       	ret

00000664 <RunMPU6050>:

void RunMPU6050(void)
{
     664:	cf 93       	push	r28
     666:	df 93       	push	r29
     668:	cd b7       	in	r28, 0x3d	; 61
     66a:	de b7       	in	r29, 0x3e	; 62
     66c:	2c 97       	sbiw	r28, 0x0c	; 12
     66e:	0f b6       	in	r0, 0x3f	; 63
     670:	f8 94       	cli
     672:	de bf       	out	0x3e, r29	; 62
     674:	0f be       	out	0x3f, r0	; 63
     676:	cd bf       	out	0x3d, r28	; 61
	Axis_Data_Struct Accel_Data;	
	Axis_Data_Struct Gyro_Data;
	
	get_MPU6050_RawData(&Accel_Data, &Gyro_Data);
     678:	be 01       	movw	r22, r28
     67a:	69 5f       	subi	r22, 0xF9	; 249
     67c:	7f 4f       	sbci	r23, 0xFF	; 255
     67e:	ce 01       	movw	r24, r28
     680:	01 96       	adiw	r24, 0x01	; 1
     682:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <get_MPU6050_RawData>
	
	#ifdef Test_Result
	printf("Accel X-axis RawData = %f\n", (double)Accel_Data.Xaxis);
     686:	69 81       	ldd	r22, Y+1	; 0x01
     688:	7a 81       	ldd	r23, Y+2	; 0x02
     68a:	07 2e       	mov	r0, r23
     68c:	00 0c       	add	r0, r0
     68e:	88 0b       	sbc	r24, r24
     690:	99 0b       	sbc	r25, r25
     692:	0e 94 30 06 	call	0xc60	; 0xc60 <__floatsisf>
     696:	9f 93       	push	r25
     698:	8f 93       	push	r24
     69a:	7f 93       	push	r23
     69c:	6f 93       	push	r22
     69e:	86 e0       	ldi	r24, 0x06	; 6
     6a0:	91 e0       	ldi	r25, 0x01	; 1
     6a2:	9f 93       	push	r25
     6a4:	8f 93       	push	r24
     6a6:	0e 94 85 0c 	call	0x190a	; 0x190a <printf>
	printf("Accel Y-axis RawData = %f\n", (double)Accel_Data.Yaxis);
     6aa:	6b 81       	ldd	r22, Y+3	; 0x03
     6ac:	7c 81       	ldd	r23, Y+4	; 0x04
     6ae:	07 2e       	mov	r0, r23
     6b0:	00 0c       	add	r0, r0
     6b2:	88 0b       	sbc	r24, r24
     6b4:	99 0b       	sbc	r25, r25
     6b6:	0e 94 30 06 	call	0xc60	; 0xc60 <__floatsisf>
     6ba:	9f 93       	push	r25
     6bc:	8f 93       	push	r24
     6be:	7f 93       	push	r23
     6c0:	6f 93       	push	r22
     6c2:	81 e2       	ldi	r24, 0x21	; 33
     6c4:	91 e0       	ldi	r25, 0x01	; 1
     6c6:	9f 93       	push	r25
     6c8:	8f 93       	push	r24
     6ca:	0e 94 85 0c 	call	0x190a	; 0x190a <printf>
	printf("Accel Z-axis RawData = %f\n\n", (double)Accel_Data.Zaxis);
     6ce:	6d 81       	ldd	r22, Y+5	; 0x05
     6d0:	7e 81       	ldd	r23, Y+6	; 0x06
     6d2:	07 2e       	mov	r0, r23
     6d4:	00 0c       	add	r0, r0
     6d6:	88 0b       	sbc	r24, r24
     6d8:	99 0b       	sbc	r25, r25
     6da:	0e 94 30 06 	call	0xc60	; 0xc60 <__floatsisf>
     6de:	9f 93       	push	r25
     6e0:	8f 93       	push	r24
     6e2:	7f 93       	push	r23
     6e4:	6f 93       	push	r22
     6e6:	8c e3       	ldi	r24, 0x3C	; 60
     6e8:	91 e0       	ldi	r25, 0x01	; 1
     6ea:	9f 93       	push	r25
     6ec:	8f 93       	push	r24
     6ee:	0e 94 85 0c 	call	0x190a	; 0x190a <printf>
	
	printf("Gyro X-axis RawData = %f\n", (double)Gyro_Data.Xaxis);
     6f2:	6f 81       	ldd	r22, Y+7	; 0x07
     6f4:	78 85       	ldd	r23, Y+8	; 0x08
     6f6:	07 2e       	mov	r0, r23
     6f8:	00 0c       	add	r0, r0
     6fa:	88 0b       	sbc	r24, r24
     6fc:	99 0b       	sbc	r25, r25
     6fe:	0e 94 30 06 	call	0xc60	; 0xc60 <__floatsisf>
     702:	9f 93       	push	r25
     704:	8f 93       	push	r24
     706:	7f 93       	push	r23
     708:	6f 93       	push	r22
     70a:	88 e5       	ldi	r24, 0x58	; 88
     70c:	91 e0       	ldi	r25, 0x01	; 1
     70e:	9f 93       	push	r25
     710:	8f 93       	push	r24
     712:	0e 94 85 0c 	call	0x190a	; 0x190a <printf>
	printf("Gyro Y-axis RawData = %f\n", (double)Gyro_Data.Yaxis);
     716:	69 85       	ldd	r22, Y+9	; 0x09
     718:	7a 85       	ldd	r23, Y+10	; 0x0a
     71a:	07 2e       	mov	r0, r23
     71c:	00 0c       	add	r0, r0
     71e:	88 0b       	sbc	r24, r24
     720:	99 0b       	sbc	r25, r25
     722:	0e 94 30 06 	call	0xc60	; 0xc60 <__floatsisf>
     726:	9f 93       	push	r25
     728:	8f 93       	push	r24
     72a:	7f 93       	push	r23
     72c:	6f 93       	push	r22
     72e:	82 e7       	ldi	r24, 0x72	; 114
     730:	91 e0       	ldi	r25, 0x01	; 1
     732:	9f 93       	push	r25
     734:	8f 93       	push	r24
     736:	0e 94 85 0c 	call	0x190a	; 0x190a <printf>
	printf("Gyro Z-axis RawData = %f\n\n", (double)Gyro_Data.Zaxis);
     73a:	6b 85       	ldd	r22, Y+11	; 0x0b
     73c:	7c 85       	ldd	r23, Y+12	; 0x0c
     73e:	07 2e       	mov	r0, r23
     740:	00 0c       	add	r0, r0
     742:	88 0b       	sbc	r24, r24
     744:	99 0b       	sbc	r25, r25
     746:	0e 94 30 06 	call	0xc60	; 0xc60 <__floatsisf>
     74a:	9f 93       	push	r25
     74c:	8f 93       	push	r24
     74e:	7f 93       	push	r23
     750:	6f 93       	push	r22
     752:	8c e8       	ldi	r24, 0x8C	; 140
     754:	91 e0       	ldi	r25, 0x01	; 1
     756:	9f 93       	push	r25
     758:	8f 93       	push	r24
     75a:	0e 94 85 0c 	call	0x190a	; 0x190a <printf>
	#endif
	
	Calc_Accel_RollPitch(&Accel_Data, &Accel_Angle);
     75e:	0f b6       	in	r0, 0x3f	; 63
     760:	f8 94       	cli
     762:	de bf       	out	0x3e, r29	; 62
     764:	0f be       	out	0x3f, r0	; 63
     766:	cd bf       	out	0x3d, r28	; 61
     768:	6e e1       	ldi	r22, 0x1E	; 30
     76a:	72 e0       	ldi	r23, 0x02	; 2
     76c:	ce 01       	movw	r24, r28
     76e:	01 96       	adiw	r24, 0x01	; 1
     770:	0e 94 37 02 	call	0x46e	; 0x46e <Calc_Accel_RollPitch>
	Integral_GyroData(&Gyro_Data, &Gyro_Angle);
     774:	62 e1       	ldi	r22, 0x12	; 18
     776:	72 e0       	ldi	r23, 0x02	; 2
     778:	ce 01       	movw	r24, r28
     77a:	07 96       	adiw	r24, 0x07	; 7
     77c:	0e 94 ac 02 	call	0x558	; 0x558 <Integral_GyroData>
}
     780:	2c 96       	adiw	r28, 0x0c	; 12
     782:	0f b6       	in	r0, 0x3f	; 63
     784:	f8 94       	cli
     786:	de bf       	out	0x3e, r29	; 62
     788:	0f be       	out	0x3f, r0	; 63
     78a:	cd bf       	out	0x3d, r28	; 61
     78c:	df 91       	pop	r29
     78e:	cf 91       	pop	r28
     790:	08 95       	ret

00000792 <getAcceleroData>:

pAngle_3Dim getAcceleroData(void)
{
	pAngle_3Dim pTmp = &Accel_Angle;
	return pTmp;
}
     792:	8e e1       	ldi	r24, 0x1E	; 30
     794:	92 e0       	ldi	r25, 0x02	; 2
     796:	08 95       	ret

00000798 <getGyroData>:

pAngle_3Dim getGyroData(void)
{
	pAngle_3Dim pTmp = &Gyro_Angle;
	return pTmp;
     798:	82 e1       	ldi	r24, 0x12	; 18
     79a:	92 e0       	ldi	r25, 0x02	; 2
     79c:	08 95       	ret

0000079e <main>:
#include "MPU6050.h"

int main(void)
{
    /* Replace with your application code */
	FILE *fstdio = fdevopen(usartTxChar, NULL);
     79e:	60 e0       	ldi	r22, 0x00	; 0
     7a0:	70 e0       	ldi	r23, 0x00	; 0
     7a2:	83 ed       	ldi	r24, 0xD3	; 211
     7a4:	94 e0       	ldi	r25, 0x04	; 4
     7a6:	0e 94 fe 0b 	call	0x17fc	; 0x17fc <fdevopen>
	UART_INIT();
     7aa:	0e 94 bb 04 	call	0x976	; 0x976 <UART_INIT>
	printf("Initiate UART Done\n");
     7ae:	87 ea       	ldi	r24, 0xA7	; 167
     7b0:	91 e0       	ldi	r25, 0x01	; 1
     7b2:	0e 94 9b 0c 	call	0x1936	; 0x1936 <puts>
	i2c_init();
     7b6:	0e 94 5a 04 	call	0x8b4	; 0x8b4 <i2c_init>
	printf("Initiate I2C Done\n");	
     7ba:	8a eb       	ldi	r24, 0xBA	; 186
     7bc:	91 e0       	ldi	r25, 0x01	; 1
     7be:	0e 94 9b 0c 	call	0x1936	; 0x1936 <puts>
	InitMPU6050();
     7c2:	0e 94 b0 01 	call	0x360	; 0x360 <InitMPU6050>
	printf("Initiate MPU6050 Done\n");
     7c6:	8c ec       	ldi	r24, 0xCC	; 204
     7c8:	91 e0       	ldi	r25, 0x01	; 1
     7ca:	0e 94 9b 0c 	call	0x1936	; 0x1936 <puts>
     7ce:	2f ef       	ldi	r18, 0xFF	; 255
     7d0:	81 ee       	ldi	r24, 0xE1	; 225
     7d2:	94 e0       	ldi	r25, 0x04	; 4
     7d4:	21 50       	subi	r18, 0x01	; 1
     7d6:	80 40       	sbci	r24, 0x00	; 0
     7d8:	90 40       	sbci	r25, 0x00	; 0
     7da:	e1 f7       	brne	.-8      	; 0x7d4 <main+0x36>
     7dc:	00 c0       	rjmp	.+0      	; 0x7de <main+0x40>
     7de:	00 00       	nop
    while (1) 
    {
		RunMPU6050();
		
		Accelero_Angle = getAcceleroData();
		printf("Roll = %f\n", Accelero_Angle->Roll);
     7e0:	02 ee       	ldi	r16, 0xE2	; 226
     7e2:	11 e0       	ldi	r17, 0x01	; 1
		printf("Pitch = %f\n\n", Accelero_Angle->Pitch);
     7e4:	0f 2e       	mov	r0, r31
     7e6:	fd ee       	ldi	r31, 0xED	; 237
     7e8:	af 2e       	mov	r10, r31
     7ea:	f1 e0       	ldi	r31, 0x01	; 1
     7ec:	bf 2e       	mov	r11, r31
     7ee:	f0 2d       	mov	r31, r0
		
		Gyro_Angle = getGyroData();
		printf("Roll = %f\n", Gyro_Angle->Roll);
		printf("Pitch = %f\n", Gyro_Angle->Pitch);
     7f0:	0f 2e       	mov	r0, r31
     7f2:	fa ef       	ldi	r31, 0xFA	; 250
     7f4:	cf 2e       	mov	r12, r31
     7f6:	f1 e0       	ldi	r31, 0x01	; 1
     7f8:	df 2e       	mov	r13, r31
     7fa:	f0 2d       	mov	r31, r0
		printf("Yaw = %f\n\n", Gyro_Angle->Yaw);		
     7fc:	0f 2e       	mov	r0, r31
     7fe:	f6 e0       	ldi	r31, 0x06	; 6
     800:	ef 2e       	mov	r14, r31
     802:	f2 e0       	ldi	r31, 0x02	; 2
     804:	ff 2e       	mov	r15, r31
     806:	f0 2d       	mov	r31, r0
	pAngle_3Dim Accelero_Angle;
	pAngle_3Dim Gyro_Angle;
	
    while (1) 
    {
		RunMPU6050();
     808:	0e 94 32 03 	call	0x664	; 0x664 <RunMPU6050>
		
		Accelero_Angle = getAcceleroData();
     80c:	0e 94 c9 03 	call	0x792	; 0x792 <getAcceleroData>
     810:	ec 01       	movw	r28, r24
		printf("Roll = %f\n", Accelero_Angle->Roll);
     812:	8b 81       	ldd	r24, Y+3	; 0x03
     814:	8f 93       	push	r24
     816:	8a 81       	ldd	r24, Y+2	; 0x02
     818:	8f 93       	push	r24
     81a:	89 81       	ldd	r24, Y+1	; 0x01
     81c:	8f 93       	push	r24
     81e:	88 81       	ld	r24, Y
     820:	8f 93       	push	r24
     822:	1f 93       	push	r17
     824:	0f 93       	push	r16
     826:	0e 94 85 0c 	call	0x190a	; 0x190a <printf>
		printf("Pitch = %f\n\n", Accelero_Angle->Pitch);
     82a:	8f 81       	ldd	r24, Y+7	; 0x07
     82c:	8f 93       	push	r24
     82e:	8e 81       	ldd	r24, Y+6	; 0x06
     830:	8f 93       	push	r24
     832:	8d 81       	ldd	r24, Y+5	; 0x05
     834:	8f 93       	push	r24
     836:	8c 81       	ldd	r24, Y+4	; 0x04
     838:	8f 93       	push	r24
     83a:	bf 92       	push	r11
     83c:	af 92       	push	r10
     83e:	0e 94 85 0c 	call	0x190a	; 0x190a <printf>
		
		Gyro_Angle = getGyroData();
     842:	0e 94 cc 03 	call	0x798	; 0x798 <getGyroData>
     846:	ec 01       	movw	r28, r24
		printf("Roll = %f\n", Gyro_Angle->Roll);
     848:	8b 81       	ldd	r24, Y+3	; 0x03
     84a:	8f 93       	push	r24
     84c:	8a 81       	ldd	r24, Y+2	; 0x02
     84e:	8f 93       	push	r24
     850:	89 81       	ldd	r24, Y+1	; 0x01
     852:	8f 93       	push	r24
     854:	88 81       	ld	r24, Y
     856:	8f 93       	push	r24
     858:	1f 93       	push	r17
     85a:	0f 93       	push	r16
     85c:	0e 94 85 0c 	call	0x190a	; 0x190a <printf>
		printf("Pitch = %f\n", Gyro_Angle->Pitch);
     860:	8f 81       	ldd	r24, Y+7	; 0x07
     862:	8f 93       	push	r24
     864:	8e 81       	ldd	r24, Y+6	; 0x06
     866:	8f 93       	push	r24
     868:	8d 81       	ldd	r24, Y+5	; 0x05
     86a:	8f 93       	push	r24
     86c:	8c 81       	ldd	r24, Y+4	; 0x04
     86e:	8f 93       	push	r24
     870:	df 92       	push	r13
     872:	cf 92       	push	r12
     874:	0e 94 85 0c 	call	0x190a	; 0x190a <printf>
		printf("Yaw = %f\n\n", Gyro_Angle->Yaw);		
     878:	8b 85       	ldd	r24, Y+11	; 0x0b
     87a:	8f 93       	push	r24
     87c:	8a 85       	ldd	r24, Y+10	; 0x0a
     87e:	8f 93       	push	r24
     880:	89 85       	ldd	r24, Y+9	; 0x09
     882:	8f 93       	push	r24
     884:	88 85       	ldd	r24, Y+8	; 0x08
     886:	8f 93       	push	r24
     888:	ff 92       	push	r15
     88a:	ef 92       	push	r14
     88c:	0e 94 85 0c 	call	0x190a	; 0x190a <printf>
     890:	2f ef       	ldi	r18, 0xFF	; 255
     892:	83 ed       	ldi	r24, 0xD3	; 211
     894:	90 e3       	ldi	r25, 0x30	; 48
     896:	21 50       	subi	r18, 0x01	; 1
     898:	80 40       	sbci	r24, 0x00	; 0
     89a:	90 40       	sbci	r25, 0x00	; 0
     89c:	e1 f7       	brne	.-8      	; 0x896 <main+0xf8>
     89e:	00 c0       	rjmp	.+0      	; 0x8a0 <main+0x102>
     8a0:	00 00       	nop
     8a2:	8d b7       	in	r24, 0x3d	; 61
     8a4:	9e b7       	in	r25, 0x3e	; 62
     8a6:	4e 96       	adiw	r24, 0x1e	; 30
     8a8:	0f b6       	in	r0, 0x3f	; 63
     8aa:	f8 94       	cli
     8ac:	9e bf       	out	0x3e, r25	; 62
     8ae:	0f be       	out	0x3f, r0	; 63
     8b0:	8d bf       	out	0x3d, r24	; 61
     8b2:	aa cf       	rjmp	.-172    	; 0x808 <main+0x6a>

000008b4 <i2c_init>:
#define TWI_MR_DATA_ACK      0x50
#define TWI_MR_DATA_NACK   0x58

void i2c_init(void)
{
	TWSR = 0x00;
     8b4:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
	TWBR = 12;
     8b8:	8c e0       	ldi	r24, 0x0C	; 12
     8ba:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__DATA_REGION_ORIGIN__+0x58>
     8be:	08 95       	ret

000008c0 <i2c_start>:

unsigned char i2c_start(unsigned char address)
{
	uint8_t twst;
	
	TWCR = (1<<TWINT) | (1<<TWSTA) | (1<<TWEN);
     8c0:	94 ea       	ldi	r25, 0xA4	; 164
     8c2:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
	
	while(!(TWCR & (1<<TWINT)));
     8c6:	ec eb       	ldi	r30, 0xBC	; 188
     8c8:	f0 e0       	ldi	r31, 0x00	; 0
     8ca:	90 81       	ld	r25, Z
     8cc:	99 23       	and	r25, r25
     8ce:	ec f7       	brge	.-6      	; 0x8ca <i2c_start+0xa>
	
	twst = TWSR & 0xF8;
     8d0:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
     8d4:	98 7f       	andi	r25, 0xF8	; 248
	
	if((twst != TWI_START) && (twst != TWI_RESTART)) return 1;
     8d6:	98 30       	cpi	r25, 0x08	; 8
     8d8:	11 f0       	breq	.+4      	; 0x8de <i2c_start+0x1e>
     8da:	90 31       	cpi	r25, 0x10	; 16
     8dc:	a1 f4       	brne	.+40     	; 0x906 <__stack+0x7>
	
	TWDR = address;
     8de:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
	TWCR = (1<<TWINT) | (1<<TWEN);
     8e2:	84 e8       	ldi	r24, 0x84	; 132
     8e4:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
	
	while(!(TWCR & (1<<TWINT)));
     8e8:	ec eb       	ldi	r30, 0xBC	; 188
     8ea:	f0 e0       	ldi	r31, 0x00	; 0
     8ec:	80 81       	ld	r24, Z
     8ee:	88 23       	and	r24, r24
     8f0:	ec f7       	brge	.-6      	; 0x8ec <i2c_start+0x2c>
	
	twst = TWSR & 0xF8;
     8f2:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
     8f6:	98 7f       	andi	r25, 0xF8	; 248
	if((twst != TWI_MT_SLA_ACK) && (twst != TWI_MR_SLA_NACK)) return 1;
     8f8:	98 31       	cpi	r25, 0x18	; 24
     8fa:	39 f0       	breq	.+14     	; 0x90a <__stack+0xb>
	
	while(!(TWCR & (1<<TWINT)));
	
	twst = TWSR & 0xF8;
	
	if((twst != TWI_START) && (twst != TWI_RESTART)) return 1;
     8fc:	81 e0       	ldi	r24, 0x01	; 1
     8fe:	98 34       	cpi	r25, 0x48	; 72
     900:	29 f4       	brne	.+10     	; 0x90c <__stack+0xd>
     902:	80 e0       	ldi	r24, 0x00	; 0
     904:	08 95       	ret
     906:	81 e0       	ldi	r24, 0x01	; 1
     908:	08 95       	ret
	while(!(TWCR & (1<<TWINT)));
	
	twst = TWSR & 0xF8;
	if((twst != TWI_MT_SLA_ACK) && (twst != TWI_MR_SLA_NACK)) return 1;
	
	return 0;
     90a:	80 e0       	ldi	r24, 0x00	; 0
}//i2c_start
     90c:	08 95       	ret

0000090e <i2c_rep_start>:

unsigned char i2c_rep_start(unsigned char address)
{
	return  i2c_start(address);
     90e:	0e 94 60 04 	call	0x8c0	; 0x8c0 <i2c_start>
}//i2c_rep_start
     912:	08 95       	ret

00000914 <i2c_stop>:

void i2c_stop(void)
{
	TWCR = (1<<TWINT)|(1<<TWEN)|(1<<TWSTO);
     914:	84 e9       	ldi	r24, 0x94	; 148
     916:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
	
	while(TWCR & (1<<TWSTO));
     91a:	ec eb       	ldi	r30, 0xBC	; 188
     91c:	f0 e0       	ldi	r31, 0x00	; 0
     91e:	80 81       	ld	r24, Z
     920:	84 fd       	sbrc	r24, 4
     922:	fd cf       	rjmp	.-6      	; 0x91e <i2c_stop+0xa>
}//i2c_stopm-
     924:	08 95       	ret

00000926 <i2c_write>:

unsigned char i2c_write(unsigned char data)
{
	uint8_t twst;
	
	TWDR = data;
     926:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
	TWCR = (1<<TWINT) | (1<<TWEN);
     92a:	84 e8       	ldi	r24, 0x84	; 132
     92c:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
	
	while(!(TWCR & (1<<TWINT)));
     930:	ec eb       	ldi	r30, 0xBC	; 188
     932:	f0 e0       	ldi	r31, 0x00	; 0
     934:	80 81       	ld	r24, Z
     936:	88 23       	and	r24, r24
     938:	ec f7       	brge	.-6      	; 0x934 <i2c_write+0xe>
	
	twst = TWSR & 0xF8;
     93a:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
     93e:	98 7f       	andi	r25, 0xF8	; 248
     940:	81 e0       	ldi	r24, 0x01	; 1
     942:	98 32       	cpi	r25, 0x28	; 40
     944:	09 f4       	brne	.+2      	; 0x948 <i2c_write+0x22>
     946:	80 e0       	ldi	r24, 0x00	; 0
	if(twst != TWI_MT_DATA_ACK) return 1;
	
	return 0;
}//i2c_write
     948:	08 95       	ret

0000094a <i2c_readAck>:

unsigned char i2c_readAck(void)
{
	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWEA);
     94a:	84 ec       	ldi	r24, 0xC4	; 196
     94c:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
	while(!(TWCR & (1<<TWINT)));
     950:	ec eb       	ldi	r30, 0xBC	; 188
     952:	f0 e0       	ldi	r31, 0x00	; 0
     954:	80 81       	ld	r24, Z
     956:	88 23       	and	r24, r24
     958:	ec f7       	brge	.-6      	; 0x954 <i2c_readAck+0xa>
	
	return TWDR;
     95a:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
}//i2c_readAck
     95e:	08 95       	ret

00000960 <i2c_readNak>:

unsigned char i2c_readNak(void)
{
	TWCR = (1<<TWINT) | (1<<TWEN);
     960:	84 e8       	ldi	r24, 0x84	; 132
     962:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
	while(!(TWCR & (1<<TWINT)));
     966:	ec eb       	ldi	r30, 0xBC	; 188
     968:	f0 e0       	ldi	r31, 0x00	; 0
     96a:	80 81       	ld	r24, Z
     96c:	88 23       	and	r24, r24
     96e:	ec f7       	brge	.-6      	; 0x96a <i2c_readNak+0xa>
	
	return TWDR;
     970:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
}//i2c_readNak
     974:	08 95       	ret

00000976 <UART_INIT>:
	UART_string_transmit(" = ");

	ltoa((val), debug_buffer, UART_BUFLEN);
	UART_string_transmit(debug_buffer);
	UART_string_transmit("\n");
}
     976:	e0 ec       	ldi	r30, 0xC0	; 192
     978:	f0 e0       	ldi	r31, 0x00	; 0
     97a:	80 81       	ld	r24, Z
     97c:	82 60       	ori	r24, 0x02	; 2
     97e:	80 83       	st	Z, r24
     980:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__DATA_REGION_ORIGIN__+0x65>
     984:	8f ec       	ldi	r24, 0xCF	; 207
     986:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__DATA_REGION_ORIGIN__+0x64>
     98a:	e2 ec       	ldi	r30, 0xC2	; 194
     98c:	f0 e0       	ldi	r31, 0x00	; 0
     98e:	80 81       	ld	r24, Z
     990:	86 60       	ori	r24, 0x06	; 6
     992:	80 83       	st	Z, r24
     994:	e1 ec       	ldi	r30, 0xC1	; 193
     996:	f0 e0       	ldi	r31, 0x00	; 0
     998:	80 81       	ld	r24, Z
     99a:	80 61       	ori	r24, 0x10	; 16
     99c:	80 83       	st	Z, r24
     99e:	80 81       	ld	r24, Z
     9a0:	88 60       	ori	r24, 0x08	; 8
     9a2:	80 83       	st	Z, r24
     9a4:	08 95       	ret

000009a6 <usartTxChar>:

int usartTxChar(char ch, FILE *fp) {  // for printf
	while (!(UCSR0A & (1 << UDRE0)));
     9a6:	e0 ec       	ldi	r30, 0xC0	; 192
     9a8:	f0 e0       	ldi	r31, 0x00	; 0
     9aa:	90 81       	ld	r25, Z
     9ac:	95 ff       	sbrs	r25, 5
     9ae:	fd cf       	rjmp	.-6      	; 0x9aa <usartTxChar+0x4>

	UDR0 = ch;
     9b0:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>

	return 0;
     9b4:	80 e0       	ldi	r24, 0x00	; 0
     9b6:	90 e0       	ldi	r25, 0x00	; 0
     9b8:	08 95       	ret

000009ba <__subsf3>:
     9ba:	50 58       	subi	r21, 0x80	; 128

000009bc <__addsf3>:
     9bc:	bb 27       	eor	r27, r27
     9be:	aa 27       	eor	r26, r26
     9c0:	0e 94 f5 04 	call	0x9ea	; 0x9ea <__addsf3x>
     9c4:	0c 94 a9 06 	jmp	0xd52	; 0xd52 <__fp_round>
     9c8:	0e 94 9b 06 	call	0xd36	; 0xd36 <__fp_pscA>
     9cc:	38 f0       	brcs	.+14     	; 0x9dc <__addsf3+0x20>
     9ce:	0e 94 a2 06 	call	0xd44	; 0xd44 <__fp_pscB>
     9d2:	20 f0       	brcs	.+8      	; 0x9dc <__addsf3+0x20>
     9d4:	39 f4       	brne	.+14     	; 0x9e4 <__addsf3+0x28>
     9d6:	9f 3f       	cpi	r25, 0xFF	; 255
     9d8:	19 f4       	brne	.+6      	; 0x9e0 <__addsf3+0x24>
     9da:	26 f4       	brtc	.+8      	; 0x9e4 <__addsf3+0x28>
     9dc:	0c 94 71 06 	jmp	0xce2	; 0xce2 <__fp_nan>
     9e0:	0e f4       	brtc	.+2      	; 0x9e4 <__addsf3+0x28>
     9e2:	e0 95       	com	r30
     9e4:	e7 fb       	bst	r30, 7
     9e6:	0c 94 6b 06 	jmp	0xcd6	; 0xcd6 <__fp_inf>

000009ea <__addsf3x>:
     9ea:	e9 2f       	mov	r30, r25
     9ec:	0e 94 ba 06 	call	0xd74	; 0xd74 <__fp_split3>
     9f0:	58 f3       	brcs	.-42     	; 0x9c8 <__addsf3+0xc>
     9f2:	ba 17       	cp	r27, r26
     9f4:	62 07       	cpc	r22, r18
     9f6:	73 07       	cpc	r23, r19
     9f8:	84 07       	cpc	r24, r20
     9fa:	95 07       	cpc	r25, r21
     9fc:	20 f0       	brcs	.+8      	; 0xa06 <__addsf3x+0x1c>
     9fe:	79 f4       	brne	.+30     	; 0xa1e <__addsf3x+0x34>
     a00:	a6 f5       	brtc	.+104    	; 0xa6a <__addsf3x+0x80>
     a02:	0c 94 dc 06 	jmp	0xdb8	; 0xdb8 <__fp_zero>
     a06:	0e f4       	brtc	.+2      	; 0xa0a <__addsf3x+0x20>
     a08:	e0 95       	com	r30
     a0a:	0b 2e       	mov	r0, r27
     a0c:	ba 2f       	mov	r27, r26
     a0e:	a0 2d       	mov	r26, r0
     a10:	0b 01       	movw	r0, r22
     a12:	b9 01       	movw	r22, r18
     a14:	90 01       	movw	r18, r0
     a16:	0c 01       	movw	r0, r24
     a18:	ca 01       	movw	r24, r20
     a1a:	a0 01       	movw	r20, r0
     a1c:	11 24       	eor	r1, r1
     a1e:	ff 27       	eor	r31, r31
     a20:	59 1b       	sub	r21, r25
     a22:	99 f0       	breq	.+38     	; 0xa4a <__addsf3x+0x60>
     a24:	59 3f       	cpi	r21, 0xF9	; 249
     a26:	50 f4       	brcc	.+20     	; 0xa3c <__addsf3x+0x52>
     a28:	50 3e       	cpi	r21, 0xE0	; 224
     a2a:	68 f1       	brcs	.+90     	; 0xa86 <__addsf3x+0x9c>
     a2c:	1a 16       	cp	r1, r26
     a2e:	f0 40       	sbci	r31, 0x00	; 0
     a30:	a2 2f       	mov	r26, r18
     a32:	23 2f       	mov	r18, r19
     a34:	34 2f       	mov	r19, r20
     a36:	44 27       	eor	r20, r20
     a38:	58 5f       	subi	r21, 0xF8	; 248
     a3a:	f3 cf       	rjmp	.-26     	; 0xa22 <__addsf3x+0x38>
     a3c:	46 95       	lsr	r20
     a3e:	37 95       	ror	r19
     a40:	27 95       	ror	r18
     a42:	a7 95       	ror	r26
     a44:	f0 40       	sbci	r31, 0x00	; 0
     a46:	53 95       	inc	r21
     a48:	c9 f7       	brne	.-14     	; 0xa3c <__addsf3x+0x52>
     a4a:	7e f4       	brtc	.+30     	; 0xa6a <__addsf3x+0x80>
     a4c:	1f 16       	cp	r1, r31
     a4e:	ba 0b       	sbc	r27, r26
     a50:	62 0b       	sbc	r22, r18
     a52:	73 0b       	sbc	r23, r19
     a54:	84 0b       	sbc	r24, r20
     a56:	ba f0       	brmi	.+46     	; 0xa86 <__addsf3x+0x9c>
     a58:	91 50       	subi	r25, 0x01	; 1
     a5a:	a1 f0       	breq	.+40     	; 0xa84 <__addsf3x+0x9a>
     a5c:	ff 0f       	add	r31, r31
     a5e:	bb 1f       	adc	r27, r27
     a60:	66 1f       	adc	r22, r22
     a62:	77 1f       	adc	r23, r23
     a64:	88 1f       	adc	r24, r24
     a66:	c2 f7       	brpl	.-16     	; 0xa58 <__addsf3x+0x6e>
     a68:	0e c0       	rjmp	.+28     	; 0xa86 <__addsf3x+0x9c>
     a6a:	ba 0f       	add	r27, r26
     a6c:	62 1f       	adc	r22, r18
     a6e:	73 1f       	adc	r23, r19
     a70:	84 1f       	adc	r24, r20
     a72:	48 f4       	brcc	.+18     	; 0xa86 <__addsf3x+0x9c>
     a74:	87 95       	ror	r24
     a76:	77 95       	ror	r23
     a78:	67 95       	ror	r22
     a7a:	b7 95       	ror	r27
     a7c:	f7 95       	ror	r31
     a7e:	9e 3f       	cpi	r25, 0xFE	; 254
     a80:	08 f0       	brcs	.+2      	; 0xa84 <__addsf3x+0x9a>
     a82:	b0 cf       	rjmp	.-160    	; 0x9e4 <__addsf3+0x28>
     a84:	93 95       	inc	r25
     a86:	88 0f       	add	r24, r24
     a88:	08 f0       	brcs	.+2      	; 0xa8c <__addsf3x+0xa2>
     a8a:	99 27       	eor	r25, r25
     a8c:	ee 0f       	add	r30, r30
     a8e:	97 95       	ror	r25
     a90:	87 95       	ror	r24
     a92:	08 95       	ret
     a94:	0e 94 9b 06 	call	0xd36	; 0xd36 <__fp_pscA>
     a98:	60 f0       	brcs	.+24     	; 0xab2 <__addsf3x+0xc8>
     a9a:	80 e8       	ldi	r24, 0x80	; 128
     a9c:	91 e0       	ldi	r25, 0x01	; 1
     a9e:	09 f4       	brne	.+2      	; 0xaa2 <__addsf3x+0xb8>
     aa0:	9e ef       	ldi	r25, 0xFE	; 254
     aa2:	0e 94 a2 06 	call	0xd44	; 0xd44 <__fp_pscB>
     aa6:	28 f0       	brcs	.+10     	; 0xab2 <__addsf3x+0xc8>
     aa8:	40 e8       	ldi	r20, 0x80	; 128
     aaa:	51 e0       	ldi	r21, 0x01	; 1
     aac:	71 f4       	brne	.+28     	; 0xaca <atan2+0x10>
     aae:	5e ef       	ldi	r21, 0xFE	; 254
     ab0:	0c c0       	rjmp	.+24     	; 0xaca <atan2+0x10>
     ab2:	0c 94 71 06 	jmp	0xce2	; 0xce2 <__fp_nan>
     ab6:	0c 94 dc 06 	jmp	0xdb8	; 0xdb8 <__fp_zero>

00000aba <atan2>:
     aba:	e9 2f       	mov	r30, r25
     abc:	e0 78       	andi	r30, 0x80	; 128
     abe:	0e 94 ba 06 	call	0xd74	; 0xd74 <__fp_split3>
     ac2:	40 f3       	brcs	.-48     	; 0xa94 <__addsf3x+0xaa>
     ac4:	09 2e       	mov	r0, r25
     ac6:	05 2a       	or	r0, r21
     ac8:	b1 f3       	breq	.-20     	; 0xab6 <__addsf3x+0xcc>
     aca:	26 17       	cp	r18, r22
     acc:	37 07       	cpc	r19, r23
     ace:	48 07       	cpc	r20, r24
     ad0:	59 07       	cpc	r21, r25
     ad2:	38 f0       	brcs	.+14     	; 0xae2 <atan2+0x28>
     ad4:	0e 2e       	mov	r0, r30
     ad6:	07 f8       	bld	r0, 7
     ad8:	e0 25       	eor	r30, r0
     ada:	69 f0       	breq	.+26     	; 0xaf6 <atan2+0x3c>
     adc:	e0 25       	eor	r30, r0
     ade:	e0 64       	ori	r30, 0x40	; 64
     ae0:	0a c0       	rjmp	.+20     	; 0xaf6 <atan2+0x3c>
     ae2:	ef 63       	ori	r30, 0x3F	; 63
     ae4:	07 f8       	bld	r0, 7
     ae6:	00 94       	com	r0
     ae8:	07 fa       	bst	r0, 7
     aea:	db 01       	movw	r26, r22
     aec:	b9 01       	movw	r22, r18
     aee:	9d 01       	movw	r18, r26
     af0:	dc 01       	movw	r26, r24
     af2:	ca 01       	movw	r24, r20
     af4:	ad 01       	movw	r20, r26
     af6:	ef 93       	push	r30
     af8:	0e 94 d3 05 	call	0xba6	; 0xba6 <__divsf3_pse>
     afc:	0e 94 a9 06 	call	0xd52	; 0xd52 <__fp_round>
     b00:	0e 94 8d 05 	call	0xb1a	; 0xb1a <atan>
     b04:	5f 91       	pop	r21
     b06:	55 23       	and	r21, r21
     b08:	39 f0       	breq	.+14     	; 0xb18 <atan2+0x5e>
     b0a:	2b ed       	ldi	r18, 0xDB	; 219
     b0c:	3f e0       	ldi	r19, 0x0F	; 15
     b0e:	49 e4       	ldi	r20, 0x49	; 73
     b10:	50 fd       	sbrc	r21, 0
     b12:	49 ec       	ldi	r20, 0xC9	; 201
     b14:	0c 94 de 04 	jmp	0x9bc	; 0x9bc <__addsf3>
     b18:	08 95       	ret

00000b1a <atan>:
     b1a:	df 93       	push	r29
     b1c:	dd 27       	eor	r29, r29
     b1e:	b9 2f       	mov	r27, r25
     b20:	bf 77       	andi	r27, 0x7F	; 127
     b22:	40 e8       	ldi	r20, 0x80	; 128
     b24:	5f e3       	ldi	r21, 0x3F	; 63
     b26:	16 16       	cp	r1, r22
     b28:	17 06       	cpc	r1, r23
     b2a:	48 07       	cpc	r20, r24
     b2c:	5b 07       	cpc	r21, r27
     b2e:	18 f4       	brcc	.+6      	; 0xb36 <atan+0x1c>
     b30:	d9 2f       	mov	r29, r25
     b32:	0e 94 e3 06 	call	0xdc6	; 0xdc6 <inverse>
     b36:	9f 93       	push	r25
     b38:	8f 93       	push	r24
     b3a:	7f 93       	push	r23
     b3c:	6f 93       	push	r22
     b3e:	0e 94 58 07 	call	0xeb0	; 0xeb0 <square>
     b42:	e8 e6       	ldi	r30, 0x68	; 104
     b44:	f0 e0       	ldi	r31, 0x00	; 0
     b46:	0e 94 74 06 	call	0xce8	; 0xce8 <__fp_powser>
     b4a:	0e 94 a9 06 	call	0xd52	; 0xd52 <__fp_round>
     b4e:	2f 91       	pop	r18
     b50:	3f 91       	pop	r19
     b52:	4f 91       	pop	r20
     b54:	5f 91       	pop	r21
     b56:	0e 94 fe 06 	call	0xdfc	; 0xdfc <__mulsf3x>
     b5a:	dd 23       	and	r29, r29
     b5c:	51 f0       	breq	.+20     	; 0xb72 <atan+0x58>
     b5e:	90 58       	subi	r25, 0x80	; 128
     b60:	a2 ea       	ldi	r26, 0xA2	; 162
     b62:	2a ed       	ldi	r18, 0xDA	; 218
     b64:	3f e0       	ldi	r19, 0x0F	; 15
     b66:	49 ec       	ldi	r20, 0xC9	; 201
     b68:	5f e3       	ldi	r21, 0x3F	; 63
     b6a:	d0 78       	andi	r29, 0x80	; 128
     b6c:	5d 27       	eor	r21, r29
     b6e:	0e 94 f5 04 	call	0x9ea	; 0x9ea <__addsf3x>
     b72:	df 91       	pop	r29
     b74:	0c 94 a9 06 	jmp	0xd52	; 0xd52 <__fp_round>

00000b78 <__divsf3>:
     b78:	0e 94 d0 05 	call	0xba0	; 0xba0 <__divsf3x>
     b7c:	0c 94 a9 06 	jmp	0xd52	; 0xd52 <__fp_round>
     b80:	0e 94 a2 06 	call	0xd44	; 0xd44 <__fp_pscB>
     b84:	58 f0       	brcs	.+22     	; 0xb9c <__divsf3+0x24>
     b86:	0e 94 9b 06 	call	0xd36	; 0xd36 <__fp_pscA>
     b8a:	40 f0       	brcs	.+16     	; 0xb9c <__divsf3+0x24>
     b8c:	29 f4       	brne	.+10     	; 0xb98 <__divsf3+0x20>
     b8e:	5f 3f       	cpi	r21, 0xFF	; 255
     b90:	29 f0       	breq	.+10     	; 0xb9c <__divsf3+0x24>
     b92:	0c 94 6b 06 	jmp	0xcd6	; 0xcd6 <__fp_inf>
     b96:	51 11       	cpse	r21, r1
     b98:	0c 94 dd 06 	jmp	0xdba	; 0xdba <__fp_szero>
     b9c:	0c 94 71 06 	jmp	0xce2	; 0xce2 <__fp_nan>

00000ba0 <__divsf3x>:
     ba0:	0e 94 ba 06 	call	0xd74	; 0xd74 <__fp_split3>
     ba4:	68 f3       	brcs	.-38     	; 0xb80 <__divsf3+0x8>

00000ba6 <__divsf3_pse>:
     ba6:	99 23       	and	r25, r25
     ba8:	b1 f3       	breq	.-20     	; 0xb96 <__divsf3+0x1e>
     baa:	55 23       	and	r21, r21
     bac:	91 f3       	breq	.-28     	; 0xb92 <__divsf3+0x1a>
     bae:	95 1b       	sub	r25, r21
     bb0:	55 0b       	sbc	r21, r21
     bb2:	bb 27       	eor	r27, r27
     bb4:	aa 27       	eor	r26, r26
     bb6:	62 17       	cp	r22, r18
     bb8:	73 07       	cpc	r23, r19
     bba:	84 07       	cpc	r24, r20
     bbc:	38 f0       	brcs	.+14     	; 0xbcc <__divsf3_pse+0x26>
     bbe:	9f 5f       	subi	r25, 0xFF	; 255
     bc0:	5f 4f       	sbci	r21, 0xFF	; 255
     bc2:	22 0f       	add	r18, r18
     bc4:	33 1f       	adc	r19, r19
     bc6:	44 1f       	adc	r20, r20
     bc8:	aa 1f       	adc	r26, r26
     bca:	a9 f3       	breq	.-22     	; 0xbb6 <__divsf3_pse+0x10>
     bcc:	35 d0       	rcall	.+106    	; 0xc38 <__divsf3_pse+0x92>
     bce:	0e 2e       	mov	r0, r30
     bd0:	3a f0       	brmi	.+14     	; 0xbe0 <__divsf3_pse+0x3a>
     bd2:	e0 e8       	ldi	r30, 0x80	; 128
     bd4:	32 d0       	rcall	.+100    	; 0xc3a <__divsf3_pse+0x94>
     bd6:	91 50       	subi	r25, 0x01	; 1
     bd8:	50 40       	sbci	r21, 0x00	; 0
     bda:	e6 95       	lsr	r30
     bdc:	00 1c       	adc	r0, r0
     bde:	ca f7       	brpl	.-14     	; 0xbd2 <__divsf3_pse+0x2c>
     be0:	2b d0       	rcall	.+86     	; 0xc38 <__divsf3_pse+0x92>
     be2:	fe 2f       	mov	r31, r30
     be4:	29 d0       	rcall	.+82     	; 0xc38 <__divsf3_pse+0x92>
     be6:	66 0f       	add	r22, r22
     be8:	77 1f       	adc	r23, r23
     bea:	88 1f       	adc	r24, r24
     bec:	bb 1f       	adc	r27, r27
     bee:	26 17       	cp	r18, r22
     bf0:	37 07       	cpc	r19, r23
     bf2:	48 07       	cpc	r20, r24
     bf4:	ab 07       	cpc	r26, r27
     bf6:	b0 e8       	ldi	r27, 0x80	; 128
     bf8:	09 f0       	breq	.+2      	; 0xbfc <__divsf3_pse+0x56>
     bfa:	bb 0b       	sbc	r27, r27
     bfc:	80 2d       	mov	r24, r0
     bfe:	bf 01       	movw	r22, r30
     c00:	ff 27       	eor	r31, r31
     c02:	93 58       	subi	r25, 0x83	; 131
     c04:	5f 4f       	sbci	r21, 0xFF	; 255
     c06:	3a f0       	brmi	.+14     	; 0xc16 <__divsf3_pse+0x70>
     c08:	9e 3f       	cpi	r25, 0xFE	; 254
     c0a:	51 05       	cpc	r21, r1
     c0c:	78 f0       	brcs	.+30     	; 0xc2c <__divsf3_pse+0x86>
     c0e:	0c 94 6b 06 	jmp	0xcd6	; 0xcd6 <__fp_inf>
     c12:	0c 94 dd 06 	jmp	0xdba	; 0xdba <__fp_szero>
     c16:	5f 3f       	cpi	r21, 0xFF	; 255
     c18:	e4 f3       	brlt	.-8      	; 0xc12 <__divsf3_pse+0x6c>
     c1a:	98 3e       	cpi	r25, 0xE8	; 232
     c1c:	d4 f3       	brlt	.-12     	; 0xc12 <__divsf3_pse+0x6c>
     c1e:	86 95       	lsr	r24
     c20:	77 95       	ror	r23
     c22:	67 95       	ror	r22
     c24:	b7 95       	ror	r27
     c26:	f7 95       	ror	r31
     c28:	9f 5f       	subi	r25, 0xFF	; 255
     c2a:	c9 f7       	brne	.-14     	; 0xc1e <__divsf3_pse+0x78>
     c2c:	88 0f       	add	r24, r24
     c2e:	91 1d       	adc	r25, r1
     c30:	96 95       	lsr	r25
     c32:	87 95       	ror	r24
     c34:	97 f9       	bld	r25, 7
     c36:	08 95       	ret
     c38:	e1 e0       	ldi	r30, 0x01	; 1
     c3a:	66 0f       	add	r22, r22
     c3c:	77 1f       	adc	r23, r23
     c3e:	88 1f       	adc	r24, r24
     c40:	bb 1f       	adc	r27, r27
     c42:	62 17       	cp	r22, r18
     c44:	73 07       	cpc	r23, r19
     c46:	84 07       	cpc	r24, r20
     c48:	ba 07       	cpc	r27, r26
     c4a:	20 f0       	brcs	.+8      	; 0xc54 <__divsf3_pse+0xae>
     c4c:	62 1b       	sub	r22, r18
     c4e:	73 0b       	sbc	r23, r19
     c50:	84 0b       	sbc	r24, r20
     c52:	ba 0b       	sbc	r27, r26
     c54:	ee 1f       	adc	r30, r30
     c56:	88 f7       	brcc	.-30     	; 0xc3a <__divsf3_pse+0x94>
     c58:	e0 95       	com	r30
     c5a:	08 95       	ret

00000c5c <__floatunsisf>:
     c5c:	e8 94       	clt
     c5e:	09 c0       	rjmp	.+18     	; 0xc72 <__floatsisf+0x12>

00000c60 <__floatsisf>:
     c60:	97 fb       	bst	r25, 7
     c62:	3e f4       	brtc	.+14     	; 0xc72 <__floatsisf+0x12>
     c64:	90 95       	com	r25
     c66:	80 95       	com	r24
     c68:	70 95       	com	r23
     c6a:	61 95       	neg	r22
     c6c:	7f 4f       	sbci	r23, 0xFF	; 255
     c6e:	8f 4f       	sbci	r24, 0xFF	; 255
     c70:	9f 4f       	sbci	r25, 0xFF	; 255
     c72:	99 23       	and	r25, r25
     c74:	a9 f0       	breq	.+42     	; 0xca0 <__floatsisf+0x40>
     c76:	f9 2f       	mov	r31, r25
     c78:	96 e9       	ldi	r25, 0x96	; 150
     c7a:	bb 27       	eor	r27, r27
     c7c:	93 95       	inc	r25
     c7e:	f6 95       	lsr	r31
     c80:	87 95       	ror	r24
     c82:	77 95       	ror	r23
     c84:	67 95       	ror	r22
     c86:	b7 95       	ror	r27
     c88:	f1 11       	cpse	r31, r1
     c8a:	f8 cf       	rjmp	.-16     	; 0xc7c <__floatsisf+0x1c>
     c8c:	fa f4       	brpl	.+62     	; 0xccc <__floatsisf+0x6c>
     c8e:	bb 0f       	add	r27, r27
     c90:	11 f4       	brne	.+4      	; 0xc96 <__floatsisf+0x36>
     c92:	60 ff       	sbrs	r22, 0
     c94:	1b c0       	rjmp	.+54     	; 0xccc <__floatsisf+0x6c>
     c96:	6f 5f       	subi	r22, 0xFF	; 255
     c98:	7f 4f       	sbci	r23, 0xFF	; 255
     c9a:	8f 4f       	sbci	r24, 0xFF	; 255
     c9c:	9f 4f       	sbci	r25, 0xFF	; 255
     c9e:	16 c0       	rjmp	.+44     	; 0xccc <__floatsisf+0x6c>
     ca0:	88 23       	and	r24, r24
     ca2:	11 f0       	breq	.+4      	; 0xca8 <__floatsisf+0x48>
     ca4:	96 e9       	ldi	r25, 0x96	; 150
     ca6:	11 c0       	rjmp	.+34     	; 0xcca <__floatsisf+0x6a>
     ca8:	77 23       	and	r23, r23
     caa:	21 f0       	breq	.+8      	; 0xcb4 <__floatsisf+0x54>
     cac:	9e e8       	ldi	r25, 0x8E	; 142
     cae:	87 2f       	mov	r24, r23
     cb0:	76 2f       	mov	r23, r22
     cb2:	05 c0       	rjmp	.+10     	; 0xcbe <__floatsisf+0x5e>
     cb4:	66 23       	and	r22, r22
     cb6:	71 f0       	breq	.+28     	; 0xcd4 <__floatsisf+0x74>
     cb8:	96 e8       	ldi	r25, 0x86	; 134
     cba:	86 2f       	mov	r24, r22
     cbc:	70 e0       	ldi	r23, 0x00	; 0
     cbe:	60 e0       	ldi	r22, 0x00	; 0
     cc0:	2a f0       	brmi	.+10     	; 0xccc <__floatsisf+0x6c>
     cc2:	9a 95       	dec	r25
     cc4:	66 0f       	add	r22, r22
     cc6:	77 1f       	adc	r23, r23
     cc8:	88 1f       	adc	r24, r24
     cca:	da f7       	brpl	.-10     	; 0xcc2 <__floatsisf+0x62>
     ccc:	88 0f       	add	r24, r24
     cce:	96 95       	lsr	r25
     cd0:	87 95       	ror	r24
     cd2:	97 f9       	bld	r25, 7
     cd4:	08 95       	ret

00000cd6 <__fp_inf>:
     cd6:	97 f9       	bld	r25, 7
     cd8:	9f 67       	ori	r25, 0x7F	; 127
     cda:	80 e8       	ldi	r24, 0x80	; 128
     cdc:	70 e0       	ldi	r23, 0x00	; 0
     cde:	60 e0       	ldi	r22, 0x00	; 0
     ce0:	08 95       	ret

00000ce2 <__fp_nan>:
     ce2:	9f ef       	ldi	r25, 0xFF	; 255
     ce4:	80 ec       	ldi	r24, 0xC0	; 192
     ce6:	08 95       	ret

00000ce8 <__fp_powser>:
     ce8:	df 93       	push	r29
     cea:	cf 93       	push	r28
     cec:	1f 93       	push	r17
     cee:	0f 93       	push	r16
     cf0:	ff 92       	push	r15
     cf2:	ef 92       	push	r14
     cf4:	df 92       	push	r13
     cf6:	7b 01       	movw	r14, r22
     cf8:	8c 01       	movw	r16, r24
     cfa:	68 94       	set
     cfc:	06 c0       	rjmp	.+12     	; 0xd0a <__fp_powser+0x22>
     cfe:	da 2e       	mov	r13, r26
     d00:	ef 01       	movw	r28, r30
     d02:	0e 94 fe 06 	call	0xdfc	; 0xdfc <__mulsf3x>
     d06:	fe 01       	movw	r30, r28
     d08:	e8 94       	clt
     d0a:	a5 91       	lpm	r26, Z+
     d0c:	25 91       	lpm	r18, Z+
     d0e:	35 91       	lpm	r19, Z+
     d10:	45 91       	lpm	r20, Z+
     d12:	55 91       	lpm	r21, Z+
     d14:	a6 f3       	brts	.-24     	; 0xcfe <__fp_powser+0x16>
     d16:	ef 01       	movw	r28, r30
     d18:	0e 94 f5 04 	call	0x9ea	; 0x9ea <__addsf3x>
     d1c:	fe 01       	movw	r30, r28
     d1e:	97 01       	movw	r18, r14
     d20:	a8 01       	movw	r20, r16
     d22:	da 94       	dec	r13
     d24:	69 f7       	brne	.-38     	; 0xd00 <__fp_powser+0x18>
     d26:	df 90       	pop	r13
     d28:	ef 90       	pop	r14
     d2a:	ff 90       	pop	r15
     d2c:	0f 91       	pop	r16
     d2e:	1f 91       	pop	r17
     d30:	cf 91       	pop	r28
     d32:	df 91       	pop	r29
     d34:	08 95       	ret

00000d36 <__fp_pscA>:
     d36:	00 24       	eor	r0, r0
     d38:	0a 94       	dec	r0
     d3a:	16 16       	cp	r1, r22
     d3c:	17 06       	cpc	r1, r23
     d3e:	18 06       	cpc	r1, r24
     d40:	09 06       	cpc	r0, r25
     d42:	08 95       	ret

00000d44 <__fp_pscB>:
     d44:	00 24       	eor	r0, r0
     d46:	0a 94       	dec	r0
     d48:	12 16       	cp	r1, r18
     d4a:	13 06       	cpc	r1, r19
     d4c:	14 06       	cpc	r1, r20
     d4e:	05 06       	cpc	r0, r21
     d50:	08 95       	ret

00000d52 <__fp_round>:
     d52:	09 2e       	mov	r0, r25
     d54:	03 94       	inc	r0
     d56:	00 0c       	add	r0, r0
     d58:	11 f4       	brne	.+4      	; 0xd5e <__fp_round+0xc>
     d5a:	88 23       	and	r24, r24
     d5c:	52 f0       	brmi	.+20     	; 0xd72 <__fp_round+0x20>
     d5e:	bb 0f       	add	r27, r27
     d60:	40 f4       	brcc	.+16     	; 0xd72 <__fp_round+0x20>
     d62:	bf 2b       	or	r27, r31
     d64:	11 f4       	brne	.+4      	; 0xd6a <__fp_round+0x18>
     d66:	60 ff       	sbrs	r22, 0
     d68:	04 c0       	rjmp	.+8      	; 0xd72 <__fp_round+0x20>
     d6a:	6f 5f       	subi	r22, 0xFF	; 255
     d6c:	7f 4f       	sbci	r23, 0xFF	; 255
     d6e:	8f 4f       	sbci	r24, 0xFF	; 255
     d70:	9f 4f       	sbci	r25, 0xFF	; 255
     d72:	08 95       	ret

00000d74 <__fp_split3>:
     d74:	57 fd       	sbrc	r21, 7
     d76:	90 58       	subi	r25, 0x80	; 128
     d78:	44 0f       	add	r20, r20
     d7a:	55 1f       	adc	r21, r21
     d7c:	59 f0       	breq	.+22     	; 0xd94 <__fp_splitA+0x10>
     d7e:	5f 3f       	cpi	r21, 0xFF	; 255
     d80:	71 f0       	breq	.+28     	; 0xd9e <__fp_splitA+0x1a>
     d82:	47 95       	ror	r20

00000d84 <__fp_splitA>:
     d84:	88 0f       	add	r24, r24
     d86:	97 fb       	bst	r25, 7
     d88:	99 1f       	adc	r25, r25
     d8a:	61 f0       	breq	.+24     	; 0xda4 <__fp_splitA+0x20>
     d8c:	9f 3f       	cpi	r25, 0xFF	; 255
     d8e:	79 f0       	breq	.+30     	; 0xdae <__fp_splitA+0x2a>
     d90:	87 95       	ror	r24
     d92:	08 95       	ret
     d94:	12 16       	cp	r1, r18
     d96:	13 06       	cpc	r1, r19
     d98:	14 06       	cpc	r1, r20
     d9a:	55 1f       	adc	r21, r21
     d9c:	f2 cf       	rjmp	.-28     	; 0xd82 <__fp_split3+0xe>
     d9e:	46 95       	lsr	r20
     da0:	f1 df       	rcall	.-30     	; 0xd84 <__fp_splitA>
     da2:	08 c0       	rjmp	.+16     	; 0xdb4 <__fp_splitA+0x30>
     da4:	16 16       	cp	r1, r22
     da6:	17 06       	cpc	r1, r23
     da8:	18 06       	cpc	r1, r24
     daa:	99 1f       	adc	r25, r25
     dac:	f1 cf       	rjmp	.-30     	; 0xd90 <__fp_splitA+0xc>
     dae:	86 95       	lsr	r24
     db0:	71 05       	cpc	r23, r1
     db2:	61 05       	cpc	r22, r1
     db4:	08 94       	sec
     db6:	08 95       	ret

00000db8 <__fp_zero>:
     db8:	e8 94       	clt

00000dba <__fp_szero>:
     dba:	bb 27       	eor	r27, r27
     dbc:	66 27       	eor	r22, r22
     dbe:	77 27       	eor	r23, r23
     dc0:	cb 01       	movw	r24, r22
     dc2:	97 f9       	bld	r25, 7
     dc4:	08 95       	ret

00000dc6 <inverse>:
     dc6:	9b 01       	movw	r18, r22
     dc8:	ac 01       	movw	r20, r24
     dca:	60 e0       	ldi	r22, 0x00	; 0
     dcc:	70 e0       	ldi	r23, 0x00	; 0
     dce:	80 e8       	ldi	r24, 0x80	; 128
     dd0:	9f e3       	ldi	r25, 0x3F	; 63
     dd2:	0c 94 bc 05 	jmp	0xb78	; 0xb78 <__divsf3>

00000dd6 <__mulsf3>:
     dd6:	0e 94 fe 06 	call	0xdfc	; 0xdfc <__mulsf3x>
     dda:	0c 94 a9 06 	jmp	0xd52	; 0xd52 <__fp_round>
     dde:	0e 94 9b 06 	call	0xd36	; 0xd36 <__fp_pscA>
     de2:	38 f0       	brcs	.+14     	; 0xdf2 <__mulsf3+0x1c>
     de4:	0e 94 a2 06 	call	0xd44	; 0xd44 <__fp_pscB>
     de8:	20 f0       	brcs	.+8      	; 0xdf2 <__mulsf3+0x1c>
     dea:	95 23       	and	r25, r21
     dec:	11 f0       	breq	.+4      	; 0xdf2 <__mulsf3+0x1c>
     dee:	0c 94 6b 06 	jmp	0xcd6	; 0xcd6 <__fp_inf>
     df2:	0c 94 71 06 	jmp	0xce2	; 0xce2 <__fp_nan>
     df6:	11 24       	eor	r1, r1
     df8:	0c 94 dd 06 	jmp	0xdba	; 0xdba <__fp_szero>

00000dfc <__mulsf3x>:
     dfc:	0e 94 ba 06 	call	0xd74	; 0xd74 <__fp_split3>
     e00:	70 f3       	brcs	.-36     	; 0xdde <__mulsf3+0x8>

00000e02 <__mulsf3_pse>:
     e02:	95 9f       	mul	r25, r21
     e04:	c1 f3       	breq	.-16     	; 0xdf6 <__mulsf3+0x20>
     e06:	95 0f       	add	r25, r21
     e08:	50 e0       	ldi	r21, 0x00	; 0
     e0a:	55 1f       	adc	r21, r21
     e0c:	62 9f       	mul	r22, r18
     e0e:	f0 01       	movw	r30, r0
     e10:	72 9f       	mul	r23, r18
     e12:	bb 27       	eor	r27, r27
     e14:	f0 0d       	add	r31, r0
     e16:	b1 1d       	adc	r27, r1
     e18:	63 9f       	mul	r22, r19
     e1a:	aa 27       	eor	r26, r26
     e1c:	f0 0d       	add	r31, r0
     e1e:	b1 1d       	adc	r27, r1
     e20:	aa 1f       	adc	r26, r26
     e22:	64 9f       	mul	r22, r20
     e24:	66 27       	eor	r22, r22
     e26:	b0 0d       	add	r27, r0
     e28:	a1 1d       	adc	r26, r1
     e2a:	66 1f       	adc	r22, r22
     e2c:	82 9f       	mul	r24, r18
     e2e:	22 27       	eor	r18, r18
     e30:	b0 0d       	add	r27, r0
     e32:	a1 1d       	adc	r26, r1
     e34:	62 1f       	adc	r22, r18
     e36:	73 9f       	mul	r23, r19
     e38:	b0 0d       	add	r27, r0
     e3a:	a1 1d       	adc	r26, r1
     e3c:	62 1f       	adc	r22, r18
     e3e:	83 9f       	mul	r24, r19
     e40:	a0 0d       	add	r26, r0
     e42:	61 1d       	adc	r22, r1
     e44:	22 1f       	adc	r18, r18
     e46:	74 9f       	mul	r23, r20
     e48:	33 27       	eor	r19, r19
     e4a:	a0 0d       	add	r26, r0
     e4c:	61 1d       	adc	r22, r1
     e4e:	23 1f       	adc	r18, r19
     e50:	84 9f       	mul	r24, r20
     e52:	60 0d       	add	r22, r0
     e54:	21 1d       	adc	r18, r1
     e56:	82 2f       	mov	r24, r18
     e58:	76 2f       	mov	r23, r22
     e5a:	6a 2f       	mov	r22, r26
     e5c:	11 24       	eor	r1, r1
     e5e:	9f 57       	subi	r25, 0x7F	; 127
     e60:	50 40       	sbci	r21, 0x00	; 0
     e62:	9a f0       	brmi	.+38     	; 0xe8a <__mulsf3_pse+0x88>
     e64:	f1 f0       	breq	.+60     	; 0xea2 <__mulsf3_pse+0xa0>
     e66:	88 23       	and	r24, r24
     e68:	4a f0       	brmi	.+18     	; 0xe7c <__mulsf3_pse+0x7a>
     e6a:	ee 0f       	add	r30, r30
     e6c:	ff 1f       	adc	r31, r31
     e6e:	bb 1f       	adc	r27, r27
     e70:	66 1f       	adc	r22, r22
     e72:	77 1f       	adc	r23, r23
     e74:	88 1f       	adc	r24, r24
     e76:	91 50       	subi	r25, 0x01	; 1
     e78:	50 40       	sbci	r21, 0x00	; 0
     e7a:	a9 f7       	brne	.-22     	; 0xe66 <__mulsf3_pse+0x64>
     e7c:	9e 3f       	cpi	r25, 0xFE	; 254
     e7e:	51 05       	cpc	r21, r1
     e80:	80 f0       	brcs	.+32     	; 0xea2 <__mulsf3_pse+0xa0>
     e82:	0c 94 6b 06 	jmp	0xcd6	; 0xcd6 <__fp_inf>
     e86:	0c 94 dd 06 	jmp	0xdba	; 0xdba <__fp_szero>
     e8a:	5f 3f       	cpi	r21, 0xFF	; 255
     e8c:	e4 f3       	brlt	.-8      	; 0xe86 <__mulsf3_pse+0x84>
     e8e:	98 3e       	cpi	r25, 0xE8	; 232
     e90:	d4 f3       	brlt	.-12     	; 0xe86 <__mulsf3_pse+0x84>
     e92:	86 95       	lsr	r24
     e94:	77 95       	ror	r23
     e96:	67 95       	ror	r22
     e98:	b7 95       	ror	r27
     e9a:	f7 95       	ror	r31
     e9c:	e7 95       	ror	r30
     e9e:	9f 5f       	subi	r25, 0xFF	; 255
     ea0:	c1 f7       	brne	.-16     	; 0xe92 <__mulsf3_pse+0x90>
     ea2:	fe 2b       	or	r31, r30
     ea4:	88 0f       	add	r24, r24
     ea6:	91 1d       	adc	r25, r1
     ea8:	96 95       	lsr	r25
     eaa:	87 95       	ror	r24
     eac:	97 f9       	bld	r25, 7
     eae:	08 95       	ret

00000eb0 <square>:
     eb0:	9b 01       	movw	r18, r22
     eb2:	ac 01       	movw	r20, r24
     eb4:	0c 94 eb 06 	jmp	0xdd6	; 0xdd6 <__mulsf3>

00000eb8 <vfprintf>:
     eb8:	a0 e1       	ldi	r26, 0x10	; 16
     eba:	b0 e0       	ldi	r27, 0x00	; 0
     ebc:	e2 e6       	ldi	r30, 0x62	; 98
     ebe:	f7 e0       	ldi	r31, 0x07	; 7
     ec0:	0c 94 d9 0a 	jmp	0x15b2	; 0x15b2 <__prologue_saves__>
     ec4:	7c 01       	movw	r14, r24
     ec6:	1b 01       	movw	r2, r22
     ec8:	6a 01       	movw	r12, r20
     eca:	fc 01       	movw	r30, r24
     ecc:	17 82       	std	Z+7, r1	; 0x07
     ece:	16 82       	std	Z+6, r1	; 0x06
     ed0:	83 81       	ldd	r24, Z+3	; 0x03
     ed2:	81 ff       	sbrs	r24, 1
     ed4:	44 c3       	rjmp	.+1672   	; 0x155e <vfprintf+0x6a6>
     ed6:	9e 01       	movw	r18, r28
     ed8:	2f 5f       	subi	r18, 0xFF	; 255
     eda:	3f 4f       	sbci	r19, 0xFF	; 255
     edc:	39 01       	movw	r6, r18
     ede:	f7 01       	movw	r30, r14
     ee0:	93 81       	ldd	r25, Z+3	; 0x03
     ee2:	f1 01       	movw	r30, r2
     ee4:	93 fd       	sbrc	r25, 3
     ee6:	85 91       	lpm	r24, Z+
     ee8:	93 ff       	sbrs	r25, 3
     eea:	81 91       	ld	r24, Z+
     eec:	1f 01       	movw	r2, r30
     eee:	88 23       	and	r24, r24
     ef0:	09 f4       	brne	.+2      	; 0xef4 <vfprintf+0x3c>
     ef2:	31 c3       	rjmp	.+1634   	; 0x1556 <vfprintf+0x69e>
     ef4:	85 32       	cpi	r24, 0x25	; 37
     ef6:	39 f4       	brne	.+14     	; 0xf06 <vfprintf+0x4e>
     ef8:	93 fd       	sbrc	r25, 3
     efa:	85 91       	lpm	r24, Z+
     efc:	93 ff       	sbrs	r25, 3
     efe:	81 91       	ld	r24, Z+
     f00:	1f 01       	movw	r2, r30
     f02:	85 32       	cpi	r24, 0x25	; 37
     f04:	39 f4       	brne	.+14     	; 0xf14 <vfprintf+0x5c>
     f06:	b7 01       	movw	r22, r14
     f08:	90 e0       	ldi	r25, 0x00	; 0
     f0a:	0e 94 49 0c 	call	0x1892	; 0x1892 <fputc>
     f0e:	56 01       	movw	r10, r12
     f10:	65 01       	movw	r12, r10
     f12:	e5 cf       	rjmp	.-54     	; 0xede <vfprintf+0x26>
     f14:	10 e0       	ldi	r17, 0x00	; 0
     f16:	51 2c       	mov	r5, r1
     f18:	91 2c       	mov	r9, r1
     f1a:	ff e1       	ldi	r31, 0x1F	; 31
     f1c:	f9 15       	cp	r31, r9
     f1e:	d8 f0       	brcs	.+54     	; 0xf56 <vfprintf+0x9e>
     f20:	8b 32       	cpi	r24, 0x2B	; 43
     f22:	79 f0       	breq	.+30     	; 0xf42 <vfprintf+0x8a>
     f24:	38 f4       	brcc	.+14     	; 0xf34 <vfprintf+0x7c>
     f26:	80 32       	cpi	r24, 0x20	; 32
     f28:	79 f0       	breq	.+30     	; 0xf48 <vfprintf+0x90>
     f2a:	83 32       	cpi	r24, 0x23	; 35
     f2c:	a1 f4       	brne	.+40     	; 0xf56 <vfprintf+0x9e>
     f2e:	f9 2d       	mov	r31, r9
     f30:	f0 61       	ori	r31, 0x10	; 16
     f32:	2e c0       	rjmp	.+92     	; 0xf90 <vfprintf+0xd8>
     f34:	8d 32       	cpi	r24, 0x2D	; 45
     f36:	61 f0       	breq	.+24     	; 0xf50 <vfprintf+0x98>
     f38:	80 33       	cpi	r24, 0x30	; 48
     f3a:	69 f4       	brne	.+26     	; 0xf56 <vfprintf+0x9e>
     f3c:	29 2d       	mov	r18, r9
     f3e:	21 60       	ori	r18, 0x01	; 1
     f40:	2d c0       	rjmp	.+90     	; 0xf9c <vfprintf+0xe4>
     f42:	39 2d       	mov	r19, r9
     f44:	32 60       	ori	r19, 0x02	; 2
     f46:	93 2e       	mov	r9, r19
     f48:	89 2d       	mov	r24, r9
     f4a:	84 60       	ori	r24, 0x04	; 4
     f4c:	98 2e       	mov	r9, r24
     f4e:	2a c0       	rjmp	.+84     	; 0xfa4 <vfprintf+0xec>
     f50:	e9 2d       	mov	r30, r9
     f52:	e8 60       	ori	r30, 0x08	; 8
     f54:	15 c0       	rjmp	.+42     	; 0xf80 <vfprintf+0xc8>
     f56:	97 fc       	sbrc	r9, 7
     f58:	2d c0       	rjmp	.+90     	; 0xfb4 <vfprintf+0xfc>
     f5a:	20 ed       	ldi	r18, 0xD0	; 208
     f5c:	28 0f       	add	r18, r24
     f5e:	2a 30       	cpi	r18, 0x0A	; 10
     f60:	88 f4       	brcc	.+34     	; 0xf84 <vfprintf+0xcc>
     f62:	96 fe       	sbrs	r9, 6
     f64:	06 c0       	rjmp	.+12     	; 0xf72 <vfprintf+0xba>
     f66:	3a e0       	ldi	r19, 0x0A	; 10
     f68:	13 9f       	mul	r17, r19
     f6a:	20 0d       	add	r18, r0
     f6c:	11 24       	eor	r1, r1
     f6e:	12 2f       	mov	r17, r18
     f70:	19 c0       	rjmp	.+50     	; 0xfa4 <vfprintf+0xec>
     f72:	8a e0       	ldi	r24, 0x0A	; 10
     f74:	58 9e       	mul	r5, r24
     f76:	20 0d       	add	r18, r0
     f78:	11 24       	eor	r1, r1
     f7a:	52 2e       	mov	r5, r18
     f7c:	e9 2d       	mov	r30, r9
     f7e:	e0 62       	ori	r30, 0x20	; 32
     f80:	9e 2e       	mov	r9, r30
     f82:	10 c0       	rjmp	.+32     	; 0xfa4 <vfprintf+0xec>
     f84:	8e 32       	cpi	r24, 0x2E	; 46
     f86:	31 f4       	brne	.+12     	; 0xf94 <vfprintf+0xdc>
     f88:	96 fc       	sbrc	r9, 6
     f8a:	e5 c2       	rjmp	.+1482   	; 0x1556 <vfprintf+0x69e>
     f8c:	f9 2d       	mov	r31, r9
     f8e:	f0 64       	ori	r31, 0x40	; 64
     f90:	9f 2e       	mov	r9, r31
     f92:	08 c0       	rjmp	.+16     	; 0xfa4 <vfprintf+0xec>
     f94:	8c 36       	cpi	r24, 0x6C	; 108
     f96:	21 f4       	brne	.+8      	; 0xfa0 <vfprintf+0xe8>
     f98:	29 2d       	mov	r18, r9
     f9a:	20 68       	ori	r18, 0x80	; 128
     f9c:	92 2e       	mov	r9, r18
     f9e:	02 c0       	rjmp	.+4      	; 0xfa4 <vfprintf+0xec>
     fa0:	88 36       	cpi	r24, 0x68	; 104
     fa2:	41 f4       	brne	.+16     	; 0xfb4 <vfprintf+0xfc>
     fa4:	f1 01       	movw	r30, r2
     fa6:	93 fd       	sbrc	r25, 3
     fa8:	85 91       	lpm	r24, Z+
     faa:	93 ff       	sbrs	r25, 3
     fac:	81 91       	ld	r24, Z+
     fae:	1f 01       	movw	r2, r30
     fb0:	81 11       	cpse	r24, r1
     fb2:	b3 cf       	rjmp	.-154    	; 0xf1a <vfprintf+0x62>
     fb4:	9b eb       	ldi	r25, 0xBB	; 187
     fb6:	98 0f       	add	r25, r24
     fb8:	93 30       	cpi	r25, 0x03	; 3
     fba:	20 f4       	brcc	.+8      	; 0xfc4 <vfprintf+0x10c>
     fbc:	99 2d       	mov	r25, r9
     fbe:	90 61       	ori	r25, 0x10	; 16
     fc0:	80 5e       	subi	r24, 0xE0	; 224
     fc2:	07 c0       	rjmp	.+14     	; 0xfd2 <vfprintf+0x11a>
     fc4:	9b e9       	ldi	r25, 0x9B	; 155
     fc6:	98 0f       	add	r25, r24
     fc8:	93 30       	cpi	r25, 0x03	; 3
     fca:	08 f0       	brcs	.+2      	; 0xfce <vfprintf+0x116>
     fcc:	66 c1       	rjmp	.+716    	; 0x129a <vfprintf+0x3e2>
     fce:	99 2d       	mov	r25, r9
     fd0:	9f 7e       	andi	r25, 0xEF	; 239
     fd2:	96 ff       	sbrs	r25, 6
     fd4:	16 e0       	ldi	r17, 0x06	; 6
     fd6:	9f 73       	andi	r25, 0x3F	; 63
     fd8:	99 2e       	mov	r9, r25
     fda:	85 36       	cpi	r24, 0x65	; 101
     fdc:	19 f4       	brne	.+6      	; 0xfe4 <vfprintf+0x12c>
     fde:	90 64       	ori	r25, 0x40	; 64
     fe0:	99 2e       	mov	r9, r25
     fe2:	08 c0       	rjmp	.+16     	; 0xff4 <vfprintf+0x13c>
     fe4:	86 36       	cpi	r24, 0x66	; 102
     fe6:	21 f4       	brne	.+8      	; 0xff0 <vfprintf+0x138>
     fe8:	39 2f       	mov	r19, r25
     fea:	30 68       	ori	r19, 0x80	; 128
     fec:	93 2e       	mov	r9, r19
     fee:	02 c0       	rjmp	.+4      	; 0xff4 <vfprintf+0x13c>
     ff0:	11 11       	cpse	r17, r1
     ff2:	11 50       	subi	r17, 0x01	; 1
     ff4:	97 fe       	sbrs	r9, 7
     ff6:	07 c0       	rjmp	.+14     	; 0x1006 <vfprintf+0x14e>
     ff8:	1c 33       	cpi	r17, 0x3C	; 60
     ffa:	50 f4       	brcc	.+20     	; 0x1010 <vfprintf+0x158>
     ffc:	44 24       	eor	r4, r4
     ffe:	43 94       	inc	r4
    1000:	41 0e       	add	r4, r17
    1002:	27 e0       	ldi	r18, 0x07	; 7
    1004:	0b c0       	rjmp	.+22     	; 0x101c <vfprintf+0x164>
    1006:	18 30       	cpi	r17, 0x08	; 8
    1008:	38 f0       	brcs	.+14     	; 0x1018 <vfprintf+0x160>
    100a:	27 e0       	ldi	r18, 0x07	; 7
    100c:	17 e0       	ldi	r17, 0x07	; 7
    100e:	05 c0       	rjmp	.+10     	; 0x101a <vfprintf+0x162>
    1010:	27 e0       	ldi	r18, 0x07	; 7
    1012:	9c e3       	ldi	r25, 0x3C	; 60
    1014:	49 2e       	mov	r4, r25
    1016:	02 c0       	rjmp	.+4      	; 0x101c <vfprintf+0x164>
    1018:	21 2f       	mov	r18, r17
    101a:	41 2c       	mov	r4, r1
    101c:	56 01       	movw	r10, r12
    101e:	84 e0       	ldi	r24, 0x04	; 4
    1020:	a8 0e       	add	r10, r24
    1022:	b1 1c       	adc	r11, r1
    1024:	f6 01       	movw	r30, r12
    1026:	60 81       	ld	r22, Z
    1028:	71 81       	ldd	r23, Z+1	; 0x01
    102a:	82 81       	ldd	r24, Z+2	; 0x02
    102c:	93 81       	ldd	r25, Z+3	; 0x03
    102e:	04 2d       	mov	r16, r4
    1030:	a3 01       	movw	r20, r6
    1032:	0e 94 10 0b 	call	0x1620	; 0x1620 <__ftoa_engine>
    1036:	6c 01       	movw	r12, r24
    1038:	f9 81       	ldd	r31, Y+1	; 0x01
    103a:	fc 87       	std	Y+12, r31	; 0x0c
    103c:	f0 ff       	sbrs	r31, 0
    103e:	02 c0       	rjmp	.+4      	; 0x1044 <vfprintf+0x18c>
    1040:	f3 ff       	sbrs	r31, 3
    1042:	06 c0       	rjmp	.+12     	; 0x1050 <vfprintf+0x198>
    1044:	91 fc       	sbrc	r9, 1
    1046:	06 c0       	rjmp	.+12     	; 0x1054 <vfprintf+0x19c>
    1048:	92 fe       	sbrs	r9, 2
    104a:	06 c0       	rjmp	.+12     	; 0x1058 <vfprintf+0x1a0>
    104c:	00 e2       	ldi	r16, 0x20	; 32
    104e:	05 c0       	rjmp	.+10     	; 0x105a <vfprintf+0x1a2>
    1050:	0d e2       	ldi	r16, 0x2D	; 45
    1052:	03 c0       	rjmp	.+6      	; 0x105a <vfprintf+0x1a2>
    1054:	0b e2       	ldi	r16, 0x2B	; 43
    1056:	01 c0       	rjmp	.+2      	; 0x105a <vfprintf+0x1a2>
    1058:	00 e0       	ldi	r16, 0x00	; 0
    105a:	8c 85       	ldd	r24, Y+12	; 0x0c
    105c:	8c 70       	andi	r24, 0x0C	; 12
    105e:	19 f0       	breq	.+6      	; 0x1066 <vfprintf+0x1ae>
    1060:	01 11       	cpse	r16, r1
    1062:	5a c2       	rjmp	.+1204   	; 0x1518 <vfprintf+0x660>
    1064:	9b c2       	rjmp	.+1334   	; 0x159c <vfprintf+0x6e4>
    1066:	97 fe       	sbrs	r9, 7
    1068:	10 c0       	rjmp	.+32     	; 0x108a <vfprintf+0x1d2>
    106a:	4c 0c       	add	r4, r12
    106c:	fc 85       	ldd	r31, Y+12	; 0x0c
    106e:	f4 ff       	sbrs	r31, 4
    1070:	04 c0       	rjmp	.+8      	; 0x107a <vfprintf+0x1c2>
    1072:	8a 81       	ldd	r24, Y+2	; 0x02
    1074:	81 33       	cpi	r24, 0x31	; 49
    1076:	09 f4       	brne	.+2      	; 0x107a <vfprintf+0x1c2>
    1078:	4a 94       	dec	r4
    107a:	14 14       	cp	r1, r4
    107c:	74 f5       	brge	.+92     	; 0x10da <vfprintf+0x222>
    107e:	28 e0       	ldi	r18, 0x08	; 8
    1080:	24 15       	cp	r18, r4
    1082:	78 f5       	brcc	.+94     	; 0x10e2 <vfprintf+0x22a>
    1084:	88 e0       	ldi	r24, 0x08	; 8
    1086:	48 2e       	mov	r4, r24
    1088:	2c c0       	rjmp	.+88     	; 0x10e2 <vfprintf+0x22a>
    108a:	96 fc       	sbrc	r9, 6
    108c:	2a c0       	rjmp	.+84     	; 0x10e2 <vfprintf+0x22a>
    108e:	81 2f       	mov	r24, r17
    1090:	90 e0       	ldi	r25, 0x00	; 0
    1092:	8c 15       	cp	r24, r12
    1094:	9d 05       	cpc	r25, r13
    1096:	9c f0       	brlt	.+38     	; 0x10be <vfprintf+0x206>
    1098:	3c ef       	ldi	r19, 0xFC	; 252
    109a:	c3 16       	cp	r12, r19
    109c:	3f ef       	ldi	r19, 0xFF	; 255
    109e:	d3 06       	cpc	r13, r19
    10a0:	74 f0       	brlt	.+28     	; 0x10be <vfprintf+0x206>
    10a2:	89 2d       	mov	r24, r9
    10a4:	80 68       	ori	r24, 0x80	; 128
    10a6:	98 2e       	mov	r9, r24
    10a8:	0a c0       	rjmp	.+20     	; 0x10be <vfprintf+0x206>
    10aa:	e2 e0       	ldi	r30, 0x02	; 2
    10ac:	f0 e0       	ldi	r31, 0x00	; 0
    10ae:	ec 0f       	add	r30, r28
    10b0:	fd 1f       	adc	r31, r29
    10b2:	e1 0f       	add	r30, r17
    10b4:	f1 1d       	adc	r31, r1
    10b6:	80 81       	ld	r24, Z
    10b8:	80 33       	cpi	r24, 0x30	; 48
    10ba:	19 f4       	brne	.+6      	; 0x10c2 <vfprintf+0x20a>
    10bc:	11 50       	subi	r17, 0x01	; 1
    10be:	11 11       	cpse	r17, r1
    10c0:	f4 cf       	rjmp	.-24     	; 0x10aa <vfprintf+0x1f2>
    10c2:	97 fe       	sbrs	r9, 7
    10c4:	0e c0       	rjmp	.+28     	; 0x10e2 <vfprintf+0x22a>
    10c6:	44 24       	eor	r4, r4
    10c8:	43 94       	inc	r4
    10ca:	41 0e       	add	r4, r17
    10cc:	81 2f       	mov	r24, r17
    10ce:	90 e0       	ldi	r25, 0x00	; 0
    10d0:	c8 16       	cp	r12, r24
    10d2:	d9 06       	cpc	r13, r25
    10d4:	2c f4       	brge	.+10     	; 0x10e0 <vfprintf+0x228>
    10d6:	1c 19       	sub	r17, r12
    10d8:	04 c0       	rjmp	.+8      	; 0x10e2 <vfprintf+0x22a>
    10da:	44 24       	eor	r4, r4
    10dc:	43 94       	inc	r4
    10de:	01 c0       	rjmp	.+2      	; 0x10e2 <vfprintf+0x22a>
    10e0:	10 e0       	ldi	r17, 0x00	; 0
    10e2:	97 fe       	sbrs	r9, 7
    10e4:	06 c0       	rjmp	.+12     	; 0x10f2 <vfprintf+0x23a>
    10e6:	1c 14       	cp	r1, r12
    10e8:	1d 04       	cpc	r1, r13
    10ea:	34 f4       	brge	.+12     	; 0x10f8 <vfprintf+0x240>
    10ec:	c6 01       	movw	r24, r12
    10ee:	01 96       	adiw	r24, 0x01	; 1
    10f0:	05 c0       	rjmp	.+10     	; 0x10fc <vfprintf+0x244>
    10f2:	85 e0       	ldi	r24, 0x05	; 5
    10f4:	90 e0       	ldi	r25, 0x00	; 0
    10f6:	02 c0       	rjmp	.+4      	; 0x10fc <vfprintf+0x244>
    10f8:	81 e0       	ldi	r24, 0x01	; 1
    10fa:	90 e0       	ldi	r25, 0x00	; 0
    10fc:	01 11       	cpse	r16, r1
    10fe:	01 96       	adiw	r24, 0x01	; 1
    1100:	11 23       	and	r17, r17
    1102:	31 f0       	breq	.+12     	; 0x1110 <vfprintf+0x258>
    1104:	21 2f       	mov	r18, r17
    1106:	30 e0       	ldi	r19, 0x00	; 0
    1108:	2f 5f       	subi	r18, 0xFF	; 255
    110a:	3f 4f       	sbci	r19, 0xFF	; 255
    110c:	82 0f       	add	r24, r18
    110e:	93 1f       	adc	r25, r19
    1110:	25 2d       	mov	r18, r5
    1112:	30 e0       	ldi	r19, 0x00	; 0
    1114:	82 17       	cp	r24, r18
    1116:	93 07       	cpc	r25, r19
    1118:	14 f4       	brge	.+4      	; 0x111e <vfprintf+0x266>
    111a:	58 1a       	sub	r5, r24
    111c:	01 c0       	rjmp	.+2      	; 0x1120 <vfprintf+0x268>
    111e:	51 2c       	mov	r5, r1
    1120:	89 2d       	mov	r24, r9
    1122:	89 70       	andi	r24, 0x09	; 9
    1124:	49 f4       	brne	.+18     	; 0x1138 <vfprintf+0x280>
    1126:	55 20       	and	r5, r5
    1128:	39 f0       	breq	.+14     	; 0x1138 <vfprintf+0x280>
    112a:	b7 01       	movw	r22, r14
    112c:	80 e2       	ldi	r24, 0x20	; 32
    112e:	90 e0       	ldi	r25, 0x00	; 0
    1130:	0e 94 49 0c 	call	0x1892	; 0x1892 <fputc>
    1134:	5a 94       	dec	r5
    1136:	f7 cf       	rjmp	.-18     	; 0x1126 <vfprintf+0x26e>
    1138:	00 23       	and	r16, r16
    113a:	29 f0       	breq	.+10     	; 0x1146 <vfprintf+0x28e>
    113c:	b7 01       	movw	r22, r14
    113e:	80 2f       	mov	r24, r16
    1140:	90 e0       	ldi	r25, 0x00	; 0
    1142:	0e 94 49 0c 	call	0x1892	; 0x1892 <fputc>
    1146:	93 fc       	sbrc	r9, 3
    1148:	09 c0       	rjmp	.+18     	; 0x115c <vfprintf+0x2a4>
    114a:	55 20       	and	r5, r5
    114c:	39 f0       	breq	.+14     	; 0x115c <vfprintf+0x2a4>
    114e:	b7 01       	movw	r22, r14
    1150:	80 e3       	ldi	r24, 0x30	; 48
    1152:	90 e0       	ldi	r25, 0x00	; 0
    1154:	0e 94 49 0c 	call	0x1892	; 0x1892 <fputc>
    1158:	5a 94       	dec	r5
    115a:	f7 cf       	rjmp	.-18     	; 0x114a <vfprintf+0x292>
    115c:	97 fe       	sbrs	r9, 7
    115e:	4c c0       	rjmp	.+152    	; 0x11f8 <vfprintf+0x340>
    1160:	46 01       	movw	r8, r12
    1162:	d7 fe       	sbrs	r13, 7
    1164:	02 c0       	rjmp	.+4      	; 0x116a <vfprintf+0x2b2>
    1166:	81 2c       	mov	r8, r1
    1168:	91 2c       	mov	r9, r1
    116a:	c6 01       	movw	r24, r12
    116c:	88 19       	sub	r24, r8
    116e:	99 09       	sbc	r25, r9
    1170:	f3 01       	movw	r30, r6
    1172:	e8 0f       	add	r30, r24
    1174:	f9 1f       	adc	r31, r25
    1176:	fe 87       	std	Y+14, r31	; 0x0e
    1178:	ed 87       	std	Y+13, r30	; 0x0d
    117a:	96 01       	movw	r18, r12
    117c:	24 19       	sub	r18, r4
    117e:	31 09       	sbc	r19, r1
    1180:	38 8b       	std	Y+16, r19	; 0x10
    1182:	2f 87       	std	Y+15, r18	; 0x0f
    1184:	01 2f       	mov	r16, r17
    1186:	10 e0       	ldi	r17, 0x00	; 0
    1188:	11 95       	neg	r17
    118a:	01 95       	neg	r16
    118c:	11 09       	sbc	r17, r1
    118e:	3f ef       	ldi	r19, 0xFF	; 255
    1190:	83 16       	cp	r8, r19
    1192:	93 06       	cpc	r9, r19
    1194:	29 f4       	brne	.+10     	; 0x11a0 <vfprintf+0x2e8>
    1196:	b7 01       	movw	r22, r14
    1198:	8e e2       	ldi	r24, 0x2E	; 46
    119a:	90 e0       	ldi	r25, 0x00	; 0
    119c:	0e 94 49 0c 	call	0x1892	; 0x1892 <fputc>
    11a0:	c8 14       	cp	r12, r8
    11a2:	d9 04       	cpc	r13, r9
    11a4:	4c f0       	brlt	.+18     	; 0x11b8 <vfprintf+0x300>
    11a6:	8f 85       	ldd	r24, Y+15	; 0x0f
    11a8:	98 89       	ldd	r25, Y+16	; 0x10
    11aa:	88 15       	cp	r24, r8
    11ac:	99 05       	cpc	r25, r9
    11ae:	24 f4       	brge	.+8      	; 0x11b8 <vfprintf+0x300>
    11b0:	ed 85       	ldd	r30, Y+13	; 0x0d
    11b2:	fe 85       	ldd	r31, Y+14	; 0x0e
    11b4:	81 81       	ldd	r24, Z+1	; 0x01
    11b6:	01 c0       	rjmp	.+2      	; 0x11ba <vfprintf+0x302>
    11b8:	80 e3       	ldi	r24, 0x30	; 48
    11ba:	f1 e0       	ldi	r31, 0x01	; 1
    11bc:	8f 1a       	sub	r8, r31
    11be:	91 08       	sbc	r9, r1
    11c0:	2d 85       	ldd	r18, Y+13	; 0x0d
    11c2:	3e 85       	ldd	r19, Y+14	; 0x0e
    11c4:	2f 5f       	subi	r18, 0xFF	; 255
    11c6:	3f 4f       	sbci	r19, 0xFF	; 255
    11c8:	3e 87       	std	Y+14, r19	; 0x0e
    11ca:	2d 87       	std	Y+13, r18	; 0x0d
    11cc:	80 16       	cp	r8, r16
    11ce:	91 06       	cpc	r9, r17
    11d0:	2c f0       	brlt	.+10     	; 0x11dc <vfprintf+0x324>
    11d2:	b7 01       	movw	r22, r14
    11d4:	90 e0       	ldi	r25, 0x00	; 0
    11d6:	0e 94 49 0c 	call	0x1892	; 0x1892 <fputc>
    11da:	d9 cf       	rjmp	.-78     	; 0x118e <vfprintf+0x2d6>
    11dc:	c8 14       	cp	r12, r8
    11de:	d9 04       	cpc	r13, r9
    11e0:	41 f4       	brne	.+16     	; 0x11f2 <vfprintf+0x33a>
    11e2:	9a 81       	ldd	r25, Y+2	; 0x02
    11e4:	96 33       	cpi	r25, 0x36	; 54
    11e6:	20 f4       	brcc	.+8      	; 0x11f0 <vfprintf+0x338>
    11e8:	95 33       	cpi	r25, 0x35	; 53
    11ea:	19 f4       	brne	.+6      	; 0x11f2 <vfprintf+0x33a>
    11ec:	3c 85       	ldd	r19, Y+12	; 0x0c
    11ee:	34 ff       	sbrs	r19, 4
    11f0:	81 e3       	ldi	r24, 0x31	; 49
    11f2:	b7 01       	movw	r22, r14
    11f4:	90 e0       	ldi	r25, 0x00	; 0
    11f6:	4e c0       	rjmp	.+156    	; 0x1294 <vfprintf+0x3dc>
    11f8:	8a 81       	ldd	r24, Y+2	; 0x02
    11fa:	81 33       	cpi	r24, 0x31	; 49
    11fc:	19 f0       	breq	.+6      	; 0x1204 <vfprintf+0x34c>
    11fe:	9c 85       	ldd	r25, Y+12	; 0x0c
    1200:	9f 7e       	andi	r25, 0xEF	; 239
    1202:	9c 87       	std	Y+12, r25	; 0x0c
    1204:	b7 01       	movw	r22, r14
    1206:	90 e0       	ldi	r25, 0x00	; 0
    1208:	0e 94 49 0c 	call	0x1892	; 0x1892 <fputc>
    120c:	11 11       	cpse	r17, r1
    120e:	05 c0       	rjmp	.+10     	; 0x121a <vfprintf+0x362>
    1210:	94 fc       	sbrc	r9, 4
    1212:	18 c0       	rjmp	.+48     	; 0x1244 <vfprintf+0x38c>
    1214:	85 e6       	ldi	r24, 0x65	; 101
    1216:	90 e0       	ldi	r25, 0x00	; 0
    1218:	17 c0       	rjmp	.+46     	; 0x1248 <vfprintf+0x390>
    121a:	b7 01       	movw	r22, r14
    121c:	8e e2       	ldi	r24, 0x2E	; 46
    121e:	90 e0       	ldi	r25, 0x00	; 0
    1220:	0e 94 49 0c 	call	0x1892	; 0x1892 <fputc>
    1224:	1e 5f       	subi	r17, 0xFE	; 254
    1226:	82 e0       	ldi	r24, 0x02	; 2
    1228:	01 e0       	ldi	r16, 0x01	; 1
    122a:	08 0f       	add	r16, r24
    122c:	f3 01       	movw	r30, r6
    122e:	e8 0f       	add	r30, r24
    1230:	f1 1d       	adc	r31, r1
    1232:	80 81       	ld	r24, Z
    1234:	b7 01       	movw	r22, r14
    1236:	90 e0       	ldi	r25, 0x00	; 0
    1238:	0e 94 49 0c 	call	0x1892	; 0x1892 <fputc>
    123c:	80 2f       	mov	r24, r16
    123e:	01 13       	cpse	r16, r17
    1240:	f3 cf       	rjmp	.-26     	; 0x1228 <vfprintf+0x370>
    1242:	e6 cf       	rjmp	.-52     	; 0x1210 <vfprintf+0x358>
    1244:	85 e4       	ldi	r24, 0x45	; 69
    1246:	90 e0       	ldi	r25, 0x00	; 0
    1248:	b7 01       	movw	r22, r14
    124a:	0e 94 49 0c 	call	0x1892	; 0x1892 <fputc>
    124e:	d7 fc       	sbrc	r13, 7
    1250:	06 c0       	rjmp	.+12     	; 0x125e <vfprintf+0x3a6>
    1252:	c1 14       	cp	r12, r1
    1254:	d1 04       	cpc	r13, r1
    1256:	41 f4       	brne	.+16     	; 0x1268 <vfprintf+0x3b0>
    1258:	ec 85       	ldd	r30, Y+12	; 0x0c
    125a:	e4 ff       	sbrs	r30, 4
    125c:	05 c0       	rjmp	.+10     	; 0x1268 <vfprintf+0x3b0>
    125e:	d1 94       	neg	r13
    1260:	c1 94       	neg	r12
    1262:	d1 08       	sbc	r13, r1
    1264:	8d e2       	ldi	r24, 0x2D	; 45
    1266:	01 c0       	rjmp	.+2      	; 0x126a <vfprintf+0x3b2>
    1268:	8b e2       	ldi	r24, 0x2B	; 43
    126a:	b7 01       	movw	r22, r14
    126c:	90 e0       	ldi	r25, 0x00	; 0
    126e:	0e 94 49 0c 	call	0x1892	; 0x1892 <fputc>
    1272:	80 e3       	ldi	r24, 0x30	; 48
    1274:	2a e0       	ldi	r18, 0x0A	; 10
    1276:	c2 16       	cp	r12, r18
    1278:	d1 04       	cpc	r13, r1
    127a:	2c f0       	brlt	.+10     	; 0x1286 <vfprintf+0x3ce>
    127c:	8f 5f       	subi	r24, 0xFF	; 255
    127e:	fa e0       	ldi	r31, 0x0A	; 10
    1280:	cf 1a       	sub	r12, r31
    1282:	d1 08       	sbc	r13, r1
    1284:	f7 cf       	rjmp	.-18     	; 0x1274 <vfprintf+0x3bc>
    1286:	b7 01       	movw	r22, r14
    1288:	90 e0       	ldi	r25, 0x00	; 0
    128a:	0e 94 49 0c 	call	0x1892	; 0x1892 <fputc>
    128e:	b7 01       	movw	r22, r14
    1290:	c6 01       	movw	r24, r12
    1292:	c0 96       	adiw	r24, 0x30	; 48
    1294:	0e 94 49 0c 	call	0x1892	; 0x1892 <fputc>
    1298:	54 c1       	rjmp	.+680    	; 0x1542 <vfprintf+0x68a>
    129a:	83 36       	cpi	r24, 0x63	; 99
    129c:	31 f0       	breq	.+12     	; 0x12aa <vfprintf+0x3f2>
    129e:	83 37       	cpi	r24, 0x73	; 115
    12a0:	79 f0       	breq	.+30     	; 0x12c0 <vfprintf+0x408>
    12a2:	83 35       	cpi	r24, 0x53	; 83
    12a4:	09 f0       	breq	.+2      	; 0x12a8 <vfprintf+0x3f0>
    12a6:	56 c0       	rjmp	.+172    	; 0x1354 <vfprintf+0x49c>
    12a8:	20 c0       	rjmp	.+64     	; 0x12ea <vfprintf+0x432>
    12aa:	56 01       	movw	r10, r12
    12ac:	32 e0       	ldi	r19, 0x02	; 2
    12ae:	a3 0e       	add	r10, r19
    12b0:	b1 1c       	adc	r11, r1
    12b2:	f6 01       	movw	r30, r12
    12b4:	80 81       	ld	r24, Z
    12b6:	89 83       	std	Y+1, r24	; 0x01
    12b8:	01 e0       	ldi	r16, 0x01	; 1
    12ba:	10 e0       	ldi	r17, 0x00	; 0
    12bc:	63 01       	movw	r12, r6
    12be:	12 c0       	rjmp	.+36     	; 0x12e4 <vfprintf+0x42c>
    12c0:	56 01       	movw	r10, r12
    12c2:	f2 e0       	ldi	r31, 0x02	; 2
    12c4:	af 0e       	add	r10, r31
    12c6:	b1 1c       	adc	r11, r1
    12c8:	f6 01       	movw	r30, r12
    12ca:	c0 80       	ld	r12, Z
    12cc:	d1 80       	ldd	r13, Z+1	; 0x01
    12ce:	96 fe       	sbrs	r9, 6
    12d0:	03 c0       	rjmp	.+6      	; 0x12d8 <vfprintf+0x420>
    12d2:	61 2f       	mov	r22, r17
    12d4:	70 e0       	ldi	r23, 0x00	; 0
    12d6:	02 c0       	rjmp	.+4      	; 0x12dc <vfprintf+0x424>
    12d8:	6f ef       	ldi	r22, 0xFF	; 255
    12da:	7f ef       	ldi	r23, 0xFF	; 255
    12dc:	c6 01       	movw	r24, r12
    12de:	0e 94 f3 0b 	call	0x17e6	; 0x17e6 <strnlen>
    12e2:	8c 01       	movw	r16, r24
    12e4:	f9 2d       	mov	r31, r9
    12e6:	ff 77       	andi	r31, 0x7F	; 127
    12e8:	14 c0       	rjmp	.+40     	; 0x1312 <vfprintf+0x45a>
    12ea:	56 01       	movw	r10, r12
    12ec:	22 e0       	ldi	r18, 0x02	; 2
    12ee:	a2 0e       	add	r10, r18
    12f0:	b1 1c       	adc	r11, r1
    12f2:	f6 01       	movw	r30, r12
    12f4:	c0 80       	ld	r12, Z
    12f6:	d1 80       	ldd	r13, Z+1	; 0x01
    12f8:	96 fe       	sbrs	r9, 6
    12fa:	03 c0       	rjmp	.+6      	; 0x1302 <vfprintf+0x44a>
    12fc:	61 2f       	mov	r22, r17
    12fe:	70 e0       	ldi	r23, 0x00	; 0
    1300:	02 c0       	rjmp	.+4      	; 0x1306 <vfprintf+0x44e>
    1302:	6f ef       	ldi	r22, 0xFF	; 255
    1304:	7f ef       	ldi	r23, 0xFF	; 255
    1306:	c6 01       	movw	r24, r12
    1308:	0e 94 e8 0b 	call	0x17d0	; 0x17d0 <strnlen_P>
    130c:	8c 01       	movw	r16, r24
    130e:	f9 2d       	mov	r31, r9
    1310:	f0 68       	ori	r31, 0x80	; 128
    1312:	9f 2e       	mov	r9, r31
    1314:	f3 fd       	sbrc	r31, 3
    1316:	1a c0       	rjmp	.+52     	; 0x134c <vfprintf+0x494>
    1318:	85 2d       	mov	r24, r5
    131a:	90 e0       	ldi	r25, 0x00	; 0
    131c:	08 17       	cp	r16, r24
    131e:	19 07       	cpc	r17, r25
    1320:	a8 f4       	brcc	.+42     	; 0x134c <vfprintf+0x494>
    1322:	b7 01       	movw	r22, r14
    1324:	80 e2       	ldi	r24, 0x20	; 32
    1326:	90 e0       	ldi	r25, 0x00	; 0
    1328:	0e 94 49 0c 	call	0x1892	; 0x1892 <fputc>
    132c:	5a 94       	dec	r5
    132e:	f4 cf       	rjmp	.-24     	; 0x1318 <vfprintf+0x460>
    1330:	f6 01       	movw	r30, r12
    1332:	97 fc       	sbrc	r9, 7
    1334:	85 91       	lpm	r24, Z+
    1336:	97 fe       	sbrs	r9, 7
    1338:	81 91       	ld	r24, Z+
    133a:	6f 01       	movw	r12, r30
    133c:	b7 01       	movw	r22, r14
    133e:	90 e0       	ldi	r25, 0x00	; 0
    1340:	0e 94 49 0c 	call	0x1892	; 0x1892 <fputc>
    1344:	51 10       	cpse	r5, r1
    1346:	5a 94       	dec	r5
    1348:	01 50       	subi	r16, 0x01	; 1
    134a:	11 09       	sbc	r17, r1
    134c:	01 15       	cp	r16, r1
    134e:	11 05       	cpc	r17, r1
    1350:	79 f7       	brne	.-34     	; 0x1330 <vfprintf+0x478>
    1352:	f7 c0       	rjmp	.+494    	; 0x1542 <vfprintf+0x68a>
    1354:	84 36       	cpi	r24, 0x64	; 100
    1356:	11 f0       	breq	.+4      	; 0x135c <vfprintf+0x4a4>
    1358:	89 36       	cpi	r24, 0x69	; 105
    135a:	61 f5       	brne	.+88     	; 0x13b4 <vfprintf+0x4fc>
    135c:	56 01       	movw	r10, r12
    135e:	97 fe       	sbrs	r9, 7
    1360:	09 c0       	rjmp	.+18     	; 0x1374 <vfprintf+0x4bc>
    1362:	24 e0       	ldi	r18, 0x04	; 4
    1364:	a2 0e       	add	r10, r18
    1366:	b1 1c       	adc	r11, r1
    1368:	f6 01       	movw	r30, r12
    136a:	60 81       	ld	r22, Z
    136c:	71 81       	ldd	r23, Z+1	; 0x01
    136e:	82 81       	ldd	r24, Z+2	; 0x02
    1370:	93 81       	ldd	r25, Z+3	; 0x03
    1372:	0a c0       	rjmp	.+20     	; 0x1388 <vfprintf+0x4d0>
    1374:	f2 e0       	ldi	r31, 0x02	; 2
    1376:	af 0e       	add	r10, r31
    1378:	b1 1c       	adc	r11, r1
    137a:	f6 01       	movw	r30, r12
    137c:	60 81       	ld	r22, Z
    137e:	71 81       	ldd	r23, Z+1	; 0x01
    1380:	07 2e       	mov	r0, r23
    1382:	00 0c       	add	r0, r0
    1384:	88 0b       	sbc	r24, r24
    1386:	99 0b       	sbc	r25, r25
    1388:	f9 2d       	mov	r31, r9
    138a:	ff 76       	andi	r31, 0x6F	; 111
    138c:	9f 2e       	mov	r9, r31
    138e:	97 ff       	sbrs	r25, 7
    1390:	09 c0       	rjmp	.+18     	; 0x13a4 <vfprintf+0x4ec>
    1392:	90 95       	com	r25
    1394:	80 95       	com	r24
    1396:	70 95       	com	r23
    1398:	61 95       	neg	r22
    139a:	7f 4f       	sbci	r23, 0xFF	; 255
    139c:	8f 4f       	sbci	r24, 0xFF	; 255
    139e:	9f 4f       	sbci	r25, 0xFF	; 255
    13a0:	f0 68       	ori	r31, 0x80	; 128
    13a2:	9f 2e       	mov	r9, r31
    13a4:	2a e0       	ldi	r18, 0x0A	; 10
    13a6:	30 e0       	ldi	r19, 0x00	; 0
    13a8:	a3 01       	movw	r20, r6
    13aa:	0e 94 cb 0c 	call	0x1996	; 0x1996 <__ultoa_invert>
    13ae:	c8 2e       	mov	r12, r24
    13b0:	c6 18       	sub	r12, r6
    13b2:	3f c0       	rjmp	.+126    	; 0x1432 <vfprintf+0x57a>
    13b4:	09 2d       	mov	r16, r9
    13b6:	85 37       	cpi	r24, 0x75	; 117
    13b8:	21 f4       	brne	.+8      	; 0x13c2 <vfprintf+0x50a>
    13ba:	0f 7e       	andi	r16, 0xEF	; 239
    13bc:	2a e0       	ldi	r18, 0x0A	; 10
    13be:	30 e0       	ldi	r19, 0x00	; 0
    13c0:	1d c0       	rjmp	.+58     	; 0x13fc <vfprintf+0x544>
    13c2:	09 7f       	andi	r16, 0xF9	; 249
    13c4:	8f 36       	cpi	r24, 0x6F	; 111
    13c6:	91 f0       	breq	.+36     	; 0x13ec <vfprintf+0x534>
    13c8:	18 f4       	brcc	.+6      	; 0x13d0 <vfprintf+0x518>
    13ca:	88 35       	cpi	r24, 0x58	; 88
    13cc:	59 f0       	breq	.+22     	; 0x13e4 <vfprintf+0x52c>
    13ce:	c3 c0       	rjmp	.+390    	; 0x1556 <vfprintf+0x69e>
    13d0:	80 37       	cpi	r24, 0x70	; 112
    13d2:	19 f0       	breq	.+6      	; 0x13da <vfprintf+0x522>
    13d4:	88 37       	cpi	r24, 0x78	; 120
    13d6:	11 f0       	breq	.+4      	; 0x13dc <vfprintf+0x524>
    13d8:	be c0       	rjmp	.+380    	; 0x1556 <vfprintf+0x69e>
    13da:	00 61       	ori	r16, 0x10	; 16
    13dc:	04 ff       	sbrs	r16, 4
    13de:	09 c0       	rjmp	.+18     	; 0x13f2 <vfprintf+0x53a>
    13e0:	04 60       	ori	r16, 0x04	; 4
    13e2:	07 c0       	rjmp	.+14     	; 0x13f2 <vfprintf+0x53a>
    13e4:	94 fe       	sbrs	r9, 4
    13e6:	08 c0       	rjmp	.+16     	; 0x13f8 <vfprintf+0x540>
    13e8:	06 60       	ori	r16, 0x06	; 6
    13ea:	06 c0       	rjmp	.+12     	; 0x13f8 <vfprintf+0x540>
    13ec:	28 e0       	ldi	r18, 0x08	; 8
    13ee:	30 e0       	ldi	r19, 0x00	; 0
    13f0:	05 c0       	rjmp	.+10     	; 0x13fc <vfprintf+0x544>
    13f2:	20 e1       	ldi	r18, 0x10	; 16
    13f4:	30 e0       	ldi	r19, 0x00	; 0
    13f6:	02 c0       	rjmp	.+4      	; 0x13fc <vfprintf+0x544>
    13f8:	20 e1       	ldi	r18, 0x10	; 16
    13fa:	32 e0       	ldi	r19, 0x02	; 2
    13fc:	56 01       	movw	r10, r12
    13fe:	07 ff       	sbrs	r16, 7
    1400:	09 c0       	rjmp	.+18     	; 0x1414 <vfprintf+0x55c>
    1402:	84 e0       	ldi	r24, 0x04	; 4
    1404:	a8 0e       	add	r10, r24
    1406:	b1 1c       	adc	r11, r1
    1408:	f6 01       	movw	r30, r12
    140a:	60 81       	ld	r22, Z
    140c:	71 81       	ldd	r23, Z+1	; 0x01
    140e:	82 81       	ldd	r24, Z+2	; 0x02
    1410:	93 81       	ldd	r25, Z+3	; 0x03
    1412:	08 c0       	rjmp	.+16     	; 0x1424 <vfprintf+0x56c>
    1414:	f2 e0       	ldi	r31, 0x02	; 2
    1416:	af 0e       	add	r10, r31
    1418:	b1 1c       	adc	r11, r1
    141a:	f6 01       	movw	r30, r12
    141c:	60 81       	ld	r22, Z
    141e:	71 81       	ldd	r23, Z+1	; 0x01
    1420:	80 e0       	ldi	r24, 0x00	; 0
    1422:	90 e0       	ldi	r25, 0x00	; 0
    1424:	a3 01       	movw	r20, r6
    1426:	0e 94 cb 0c 	call	0x1996	; 0x1996 <__ultoa_invert>
    142a:	c8 2e       	mov	r12, r24
    142c:	c6 18       	sub	r12, r6
    142e:	0f 77       	andi	r16, 0x7F	; 127
    1430:	90 2e       	mov	r9, r16
    1432:	96 fe       	sbrs	r9, 6
    1434:	0b c0       	rjmp	.+22     	; 0x144c <vfprintf+0x594>
    1436:	09 2d       	mov	r16, r9
    1438:	0e 7f       	andi	r16, 0xFE	; 254
    143a:	c1 16       	cp	r12, r17
    143c:	50 f4       	brcc	.+20     	; 0x1452 <vfprintf+0x59a>
    143e:	94 fe       	sbrs	r9, 4
    1440:	0a c0       	rjmp	.+20     	; 0x1456 <vfprintf+0x59e>
    1442:	92 fc       	sbrc	r9, 2
    1444:	08 c0       	rjmp	.+16     	; 0x1456 <vfprintf+0x59e>
    1446:	09 2d       	mov	r16, r9
    1448:	0e 7e       	andi	r16, 0xEE	; 238
    144a:	05 c0       	rjmp	.+10     	; 0x1456 <vfprintf+0x59e>
    144c:	dc 2c       	mov	r13, r12
    144e:	09 2d       	mov	r16, r9
    1450:	03 c0       	rjmp	.+6      	; 0x1458 <vfprintf+0x5a0>
    1452:	dc 2c       	mov	r13, r12
    1454:	01 c0       	rjmp	.+2      	; 0x1458 <vfprintf+0x5a0>
    1456:	d1 2e       	mov	r13, r17
    1458:	04 ff       	sbrs	r16, 4
    145a:	0d c0       	rjmp	.+26     	; 0x1476 <vfprintf+0x5be>
    145c:	fe 01       	movw	r30, r28
    145e:	ec 0d       	add	r30, r12
    1460:	f1 1d       	adc	r31, r1
    1462:	80 81       	ld	r24, Z
    1464:	80 33       	cpi	r24, 0x30	; 48
    1466:	11 f4       	brne	.+4      	; 0x146c <vfprintf+0x5b4>
    1468:	09 7e       	andi	r16, 0xE9	; 233
    146a:	09 c0       	rjmp	.+18     	; 0x147e <vfprintf+0x5c6>
    146c:	02 ff       	sbrs	r16, 2
    146e:	06 c0       	rjmp	.+12     	; 0x147c <vfprintf+0x5c4>
    1470:	d3 94       	inc	r13
    1472:	d3 94       	inc	r13
    1474:	04 c0       	rjmp	.+8      	; 0x147e <vfprintf+0x5c6>
    1476:	80 2f       	mov	r24, r16
    1478:	86 78       	andi	r24, 0x86	; 134
    147a:	09 f0       	breq	.+2      	; 0x147e <vfprintf+0x5c6>
    147c:	d3 94       	inc	r13
    147e:	03 fd       	sbrc	r16, 3
    1480:	11 c0       	rjmp	.+34     	; 0x14a4 <vfprintf+0x5ec>
    1482:	00 ff       	sbrs	r16, 0
    1484:	06 c0       	rjmp	.+12     	; 0x1492 <vfprintf+0x5da>
    1486:	1c 2d       	mov	r17, r12
    1488:	d5 14       	cp	r13, r5
    148a:	80 f4       	brcc	.+32     	; 0x14ac <vfprintf+0x5f4>
    148c:	15 0d       	add	r17, r5
    148e:	1d 19       	sub	r17, r13
    1490:	0d c0       	rjmp	.+26     	; 0x14ac <vfprintf+0x5f4>
    1492:	d5 14       	cp	r13, r5
    1494:	58 f4       	brcc	.+22     	; 0x14ac <vfprintf+0x5f4>
    1496:	b7 01       	movw	r22, r14
    1498:	80 e2       	ldi	r24, 0x20	; 32
    149a:	90 e0       	ldi	r25, 0x00	; 0
    149c:	0e 94 49 0c 	call	0x1892	; 0x1892 <fputc>
    14a0:	d3 94       	inc	r13
    14a2:	f7 cf       	rjmp	.-18     	; 0x1492 <vfprintf+0x5da>
    14a4:	d5 14       	cp	r13, r5
    14a6:	10 f4       	brcc	.+4      	; 0x14ac <vfprintf+0x5f4>
    14a8:	5d 18       	sub	r5, r13
    14aa:	01 c0       	rjmp	.+2      	; 0x14ae <vfprintf+0x5f6>
    14ac:	51 2c       	mov	r5, r1
    14ae:	04 ff       	sbrs	r16, 4
    14b0:	10 c0       	rjmp	.+32     	; 0x14d2 <vfprintf+0x61a>
    14b2:	b7 01       	movw	r22, r14
    14b4:	80 e3       	ldi	r24, 0x30	; 48
    14b6:	90 e0       	ldi	r25, 0x00	; 0
    14b8:	0e 94 49 0c 	call	0x1892	; 0x1892 <fputc>
    14bc:	02 ff       	sbrs	r16, 2
    14be:	17 c0       	rjmp	.+46     	; 0x14ee <vfprintf+0x636>
    14c0:	01 fd       	sbrc	r16, 1
    14c2:	03 c0       	rjmp	.+6      	; 0x14ca <vfprintf+0x612>
    14c4:	88 e7       	ldi	r24, 0x78	; 120
    14c6:	90 e0       	ldi	r25, 0x00	; 0
    14c8:	02 c0       	rjmp	.+4      	; 0x14ce <vfprintf+0x616>
    14ca:	88 e5       	ldi	r24, 0x58	; 88
    14cc:	90 e0       	ldi	r25, 0x00	; 0
    14ce:	b7 01       	movw	r22, r14
    14d0:	0c c0       	rjmp	.+24     	; 0x14ea <vfprintf+0x632>
    14d2:	80 2f       	mov	r24, r16
    14d4:	86 78       	andi	r24, 0x86	; 134
    14d6:	59 f0       	breq	.+22     	; 0x14ee <vfprintf+0x636>
    14d8:	01 ff       	sbrs	r16, 1
    14da:	02 c0       	rjmp	.+4      	; 0x14e0 <vfprintf+0x628>
    14dc:	8b e2       	ldi	r24, 0x2B	; 43
    14de:	01 c0       	rjmp	.+2      	; 0x14e2 <vfprintf+0x62a>
    14e0:	80 e2       	ldi	r24, 0x20	; 32
    14e2:	07 fd       	sbrc	r16, 7
    14e4:	8d e2       	ldi	r24, 0x2D	; 45
    14e6:	b7 01       	movw	r22, r14
    14e8:	90 e0       	ldi	r25, 0x00	; 0
    14ea:	0e 94 49 0c 	call	0x1892	; 0x1892 <fputc>
    14ee:	c1 16       	cp	r12, r17
    14f0:	38 f4       	brcc	.+14     	; 0x1500 <vfprintf+0x648>
    14f2:	b7 01       	movw	r22, r14
    14f4:	80 e3       	ldi	r24, 0x30	; 48
    14f6:	90 e0       	ldi	r25, 0x00	; 0
    14f8:	0e 94 49 0c 	call	0x1892	; 0x1892 <fputc>
    14fc:	11 50       	subi	r17, 0x01	; 1
    14fe:	f7 cf       	rjmp	.-18     	; 0x14ee <vfprintf+0x636>
    1500:	ca 94       	dec	r12
    1502:	f3 01       	movw	r30, r6
    1504:	ec 0d       	add	r30, r12
    1506:	f1 1d       	adc	r31, r1
    1508:	80 81       	ld	r24, Z
    150a:	b7 01       	movw	r22, r14
    150c:	90 e0       	ldi	r25, 0x00	; 0
    150e:	0e 94 49 0c 	call	0x1892	; 0x1892 <fputc>
    1512:	c1 10       	cpse	r12, r1
    1514:	f5 cf       	rjmp	.-22     	; 0x1500 <vfprintf+0x648>
    1516:	15 c0       	rjmp	.+42     	; 0x1542 <vfprintf+0x68a>
    1518:	f4 e0       	ldi	r31, 0x04	; 4
    151a:	f5 15       	cp	r31, r5
    151c:	60 f5       	brcc	.+88     	; 0x1576 <vfprintf+0x6be>
    151e:	84 e0       	ldi	r24, 0x04	; 4
    1520:	58 1a       	sub	r5, r24
    1522:	93 fe       	sbrs	r9, 3
    1524:	1f c0       	rjmp	.+62     	; 0x1564 <vfprintf+0x6ac>
    1526:	01 11       	cpse	r16, r1
    1528:	27 c0       	rjmp	.+78     	; 0x1578 <vfprintf+0x6c0>
    152a:	2c 85       	ldd	r18, Y+12	; 0x0c
    152c:	23 ff       	sbrs	r18, 3
    152e:	2a c0       	rjmp	.+84     	; 0x1584 <vfprintf+0x6cc>
    1530:	06 e9       	ldi	r16, 0x96	; 150
    1532:	10 e0       	ldi	r17, 0x00	; 0
    1534:	39 2d       	mov	r19, r9
    1536:	30 71       	andi	r19, 0x10	; 16
    1538:	93 2e       	mov	r9, r19
    153a:	f8 01       	movw	r30, r16
    153c:	84 91       	lpm	r24, Z
    153e:	81 11       	cpse	r24, r1
    1540:	24 c0       	rjmp	.+72     	; 0x158a <vfprintf+0x6d2>
    1542:	55 20       	and	r5, r5
    1544:	09 f4       	brne	.+2      	; 0x1548 <vfprintf+0x690>
    1546:	e4 cc       	rjmp	.-1592   	; 0xf10 <vfprintf+0x58>
    1548:	b7 01       	movw	r22, r14
    154a:	80 e2       	ldi	r24, 0x20	; 32
    154c:	90 e0       	ldi	r25, 0x00	; 0
    154e:	0e 94 49 0c 	call	0x1892	; 0x1892 <fputc>
    1552:	5a 94       	dec	r5
    1554:	f6 cf       	rjmp	.-20     	; 0x1542 <vfprintf+0x68a>
    1556:	f7 01       	movw	r30, r14
    1558:	86 81       	ldd	r24, Z+6	; 0x06
    155a:	97 81       	ldd	r25, Z+7	; 0x07
    155c:	26 c0       	rjmp	.+76     	; 0x15aa <vfprintf+0x6f2>
    155e:	8f ef       	ldi	r24, 0xFF	; 255
    1560:	9f ef       	ldi	r25, 0xFF	; 255
    1562:	23 c0       	rjmp	.+70     	; 0x15aa <vfprintf+0x6f2>
    1564:	b7 01       	movw	r22, r14
    1566:	80 e2       	ldi	r24, 0x20	; 32
    1568:	90 e0       	ldi	r25, 0x00	; 0
    156a:	0e 94 49 0c 	call	0x1892	; 0x1892 <fputc>
    156e:	5a 94       	dec	r5
    1570:	51 10       	cpse	r5, r1
    1572:	f8 cf       	rjmp	.-16     	; 0x1564 <vfprintf+0x6ac>
    1574:	d8 cf       	rjmp	.-80     	; 0x1526 <vfprintf+0x66e>
    1576:	51 2c       	mov	r5, r1
    1578:	b7 01       	movw	r22, r14
    157a:	80 2f       	mov	r24, r16
    157c:	90 e0       	ldi	r25, 0x00	; 0
    157e:	0e 94 49 0c 	call	0x1892	; 0x1892 <fputc>
    1582:	d3 cf       	rjmp	.-90     	; 0x152a <vfprintf+0x672>
    1584:	0a e9       	ldi	r16, 0x9A	; 154
    1586:	10 e0       	ldi	r17, 0x00	; 0
    1588:	d5 cf       	rjmp	.-86     	; 0x1534 <vfprintf+0x67c>
    158a:	91 10       	cpse	r9, r1
    158c:	80 52       	subi	r24, 0x20	; 32
    158e:	b7 01       	movw	r22, r14
    1590:	90 e0       	ldi	r25, 0x00	; 0
    1592:	0e 94 49 0c 	call	0x1892	; 0x1892 <fputc>
    1596:	0f 5f       	subi	r16, 0xFF	; 255
    1598:	1f 4f       	sbci	r17, 0xFF	; 255
    159a:	cf cf       	rjmp	.-98     	; 0x153a <vfprintf+0x682>
    159c:	23 e0       	ldi	r18, 0x03	; 3
    159e:	25 15       	cp	r18, r5
    15a0:	10 f4       	brcc	.+4      	; 0x15a6 <vfprintf+0x6ee>
    15a2:	83 e0       	ldi	r24, 0x03	; 3
    15a4:	bd cf       	rjmp	.-134    	; 0x1520 <vfprintf+0x668>
    15a6:	51 2c       	mov	r5, r1
    15a8:	c0 cf       	rjmp	.-128    	; 0x152a <vfprintf+0x672>
    15aa:	60 96       	adiw	r28, 0x10	; 16
    15ac:	e2 e1       	ldi	r30, 0x12	; 18
    15ae:	0c 94 f5 0a 	jmp	0x15ea	; 0x15ea <__epilogue_restores__>

000015b2 <__prologue_saves__>:
    15b2:	2f 92       	push	r2
    15b4:	3f 92       	push	r3
    15b6:	4f 92       	push	r4
    15b8:	5f 92       	push	r5
    15ba:	6f 92       	push	r6
    15bc:	7f 92       	push	r7
    15be:	8f 92       	push	r8
    15c0:	9f 92       	push	r9
    15c2:	af 92       	push	r10
    15c4:	bf 92       	push	r11
    15c6:	cf 92       	push	r12
    15c8:	df 92       	push	r13
    15ca:	ef 92       	push	r14
    15cc:	ff 92       	push	r15
    15ce:	0f 93       	push	r16
    15d0:	1f 93       	push	r17
    15d2:	cf 93       	push	r28
    15d4:	df 93       	push	r29
    15d6:	cd b7       	in	r28, 0x3d	; 61
    15d8:	de b7       	in	r29, 0x3e	; 62
    15da:	ca 1b       	sub	r28, r26
    15dc:	db 0b       	sbc	r29, r27
    15de:	0f b6       	in	r0, 0x3f	; 63
    15e0:	f8 94       	cli
    15e2:	de bf       	out	0x3e, r29	; 62
    15e4:	0f be       	out	0x3f, r0	; 63
    15e6:	cd bf       	out	0x3d, r28	; 61
    15e8:	09 94       	ijmp

000015ea <__epilogue_restores__>:
    15ea:	2a 88       	ldd	r2, Y+18	; 0x12
    15ec:	39 88       	ldd	r3, Y+17	; 0x11
    15ee:	48 88       	ldd	r4, Y+16	; 0x10
    15f0:	5f 84       	ldd	r5, Y+15	; 0x0f
    15f2:	6e 84       	ldd	r6, Y+14	; 0x0e
    15f4:	7d 84       	ldd	r7, Y+13	; 0x0d
    15f6:	8c 84       	ldd	r8, Y+12	; 0x0c
    15f8:	9b 84       	ldd	r9, Y+11	; 0x0b
    15fa:	aa 84       	ldd	r10, Y+10	; 0x0a
    15fc:	b9 84       	ldd	r11, Y+9	; 0x09
    15fe:	c8 84       	ldd	r12, Y+8	; 0x08
    1600:	df 80       	ldd	r13, Y+7	; 0x07
    1602:	ee 80       	ldd	r14, Y+6	; 0x06
    1604:	fd 80       	ldd	r15, Y+5	; 0x05
    1606:	0c 81       	ldd	r16, Y+4	; 0x04
    1608:	1b 81       	ldd	r17, Y+3	; 0x03
    160a:	aa 81       	ldd	r26, Y+2	; 0x02
    160c:	b9 81       	ldd	r27, Y+1	; 0x01
    160e:	ce 0f       	add	r28, r30
    1610:	d1 1d       	adc	r29, r1
    1612:	0f b6       	in	r0, 0x3f	; 63
    1614:	f8 94       	cli
    1616:	de bf       	out	0x3e, r29	; 62
    1618:	0f be       	out	0x3f, r0	; 63
    161a:	cd bf       	out	0x3d, r28	; 61
    161c:	ed 01       	movw	r28, r26
    161e:	08 95       	ret

00001620 <__ftoa_engine>:
    1620:	28 30       	cpi	r18, 0x08	; 8
    1622:	08 f0       	brcs	.+2      	; 0x1626 <__ftoa_engine+0x6>
    1624:	27 e0       	ldi	r18, 0x07	; 7
    1626:	33 27       	eor	r19, r19
    1628:	da 01       	movw	r26, r20
    162a:	99 0f       	add	r25, r25
    162c:	31 1d       	adc	r19, r1
    162e:	87 fd       	sbrc	r24, 7
    1630:	91 60       	ori	r25, 0x01	; 1
    1632:	00 96       	adiw	r24, 0x00	; 0
    1634:	61 05       	cpc	r22, r1
    1636:	71 05       	cpc	r23, r1
    1638:	39 f4       	brne	.+14     	; 0x1648 <__ftoa_engine+0x28>
    163a:	32 60       	ori	r19, 0x02	; 2
    163c:	2e 5f       	subi	r18, 0xFE	; 254
    163e:	3d 93       	st	X+, r19
    1640:	30 e3       	ldi	r19, 0x30	; 48
    1642:	2a 95       	dec	r18
    1644:	e1 f7       	brne	.-8      	; 0x163e <__ftoa_engine+0x1e>
    1646:	08 95       	ret
    1648:	9f 3f       	cpi	r25, 0xFF	; 255
    164a:	30 f0       	brcs	.+12     	; 0x1658 <__ftoa_engine+0x38>
    164c:	80 38       	cpi	r24, 0x80	; 128
    164e:	71 05       	cpc	r23, r1
    1650:	61 05       	cpc	r22, r1
    1652:	09 f0       	breq	.+2      	; 0x1656 <__ftoa_engine+0x36>
    1654:	3c 5f       	subi	r19, 0xFC	; 252
    1656:	3c 5f       	subi	r19, 0xFC	; 252
    1658:	3d 93       	st	X+, r19
    165a:	91 30       	cpi	r25, 0x01	; 1
    165c:	08 f0       	brcs	.+2      	; 0x1660 <__ftoa_engine+0x40>
    165e:	80 68       	ori	r24, 0x80	; 128
    1660:	91 1d       	adc	r25, r1
    1662:	df 93       	push	r29
    1664:	cf 93       	push	r28
    1666:	1f 93       	push	r17
    1668:	0f 93       	push	r16
    166a:	ff 92       	push	r15
    166c:	ef 92       	push	r14
    166e:	19 2f       	mov	r17, r25
    1670:	98 7f       	andi	r25, 0xF8	; 248
    1672:	96 95       	lsr	r25
    1674:	e9 2f       	mov	r30, r25
    1676:	96 95       	lsr	r25
    1678:	96 95       	lsr	r25
    167a:	e9 0f       	add	r30, r25
    167c:	ff 27       	eor	r31, r31
    167e:	e8 50       	subi	r30, 0x08	; 8
    1680:	ff 4f       	sbci	r31, 0xFF	; 255
    1682:	99 27       	eor	r25, r25
    1684:	33 27       	eor	r19, r19
    1686:	ee 24       	eor	r14, r14
    1688:	ff 24       	eor	r15, r15
    168a:	a7 01       	movw	r20, r14
    168c:	e7 01       	movw	r28, r14
    168e:	05 90       	lpm	r0, Z+
    1690:	08 94       	sec
    1692:	07 94       	ror	r0
    1694:	28 f4       	brcc	.+10     	; 0x16a0 <__ftoa_engine+0x80>
    1696:	36 0f       	add	r19, r22
    1698:	e7 1e       	adc	r14, r23
    169a:	f8 1e       	adc	r15, r24
    169c:	49 1f       	adc	r20, r25
    169e:	51 1d       	adc	r21, r1
    16a0:	66 0f       	add	r22, r22
    16a2:	77 1f       	adc	r23, r23
    16a4:	88 1f       	adc	r24, r24
    16a6:	99 1f       	adc	r25, r25
    16a8:	06 94       	lsr	r0
    16aa:	a1 f7       	brne	.-24     	; 0x1694 <__ftoa_engine+0x74>
    16ac:	05 90       	lpm	r0, Z+
    16ae:	07 94       	ror	r0
    16b0:	28 f4       	brcc	.+10     	; 0x16bc <__ftoa_engine+0x9c>
    16b2:	e7 0e       	add	r14, r23
    16b4:	f8 1e       	adc	r15, r24
    16b6:	49 1f       	adc	r20, r25
    16b8:	56 1f       	adc	r21, r22
    16ba:	c1 1d       	adc	r28, r1
    16bc:	77 0f       	add	r23, r23
    16be:	88 1f       	adc	r24, r24
    16c0:	99 1f       	adc	r25, r25
    16c2:	66 1f       	adc	r22, r22
    16c4:	06 94       	lsr	r0
    16c6:	a1 f7       	brne	.-24     	; 0x16b0 <__ftoa_engine+0x90>
    16c8:	05 90       	lpm	r0, Z+
    16ca:	07 94       	ror	r0
    16cc:	28 f4       	brcc	.+10     	; 0x16d8 <__ftoa_engine+0xb8>
    16ce:	f8 0e       	add	r15, r24
    16d0:	49 1f       	adc	r20, r25
    16d2:	56 1f       	adc	r21, r22
    16d4:	c7 1f       	adc	r28, r23
    16d6:	d1 1d       	adc	r29, r1
    16d8:	88 0f       	add	r24, r24
    16da:	99 1f       	adc	r25, r25
    16dc:	66 1f       	adc	r22, r22
    16de:	77 1f       	adc	r23, r23
    16e0:	06 94       	lsr	r0
    16e2:	a1 f7       	brne	.-24     	; 0x16cc <__ftoa_engine+0xac>
    16e4:	05 90       	lpm	r0, Z+
    16e6:	07 94       	ror	r0
    16e8:	20 f4       	brcc	.+8      	; 0x16f2 <__ftoa_engine+0xd2>
    16ea:	49 0f       	add	r20, r25
    16ec:	56 1f       	adc	r21, r22
    16ee:	c7 1f       	adc	r28, r23
    16f0:	d8 1f       	adc	r29, r24
    16f2:	99 0f       	add	r25, r25
    16f4:	66 1f       	adc	r22, r22
    16f6:	77 1f       	adc	r23, r23
    16f8:	88 1f       	adc	r24, r24
    16fa:	06 94       	lsr	r0
    16fc:	a9 f7       	brne	.-22     	; 0x16e8 <__ftoa_engine+0xc8>
    16fe:	84 91       	lpm	r24, Z
    1700:	10 95       	com	r17
    1702:	17 70       	andi	r17, 0x07	; 7
    1704:	41 f0       	breq	.+16     	; 0x1716 <__ftoa_engine+0xf6>
    1706:	d6 95       	lsr	r29
    1708:	c7 95       	ror	r28
    170a:	57 95       	ror	r21
    170c:	47 95       	ror	r20
    170e:	f7 94       	ror	r15
    1710:	e7 94       	ror	r14
    1712:	1a 95       	dec	r17
    1714:	c1 f7       	brne	.-16     	; 0x1706 <__ftoa_engine+0xe6>
    1716:	ee e9       	ldi	r30, 0x9E	; 158
    1718:	f0 e0       	ldi	r31, 0x00	; 0
    171a:	68 94       	set
    171c:	15 90       	lpm	r1, Z+
    171e:	15 91       	lpm	r17, Z+
    1720:	35 91       	lpm	r19, Z+
    1722:	65 91       	lpm	r22, Z+
    1724:	95 91       	lpm	r25, Z+
    1726:	05 90       	lpm	r0, Z+
    1728:	7f e2       	ldi	r23, 0x2F	; 47
    172a:	73 95       	inc	r23
    172c:	e1 18       	sub	r14, r1
    172e:	f1 0a       	sbc	r15, r17
    1730:	43 0b       	sbc	r20, r19
    1732:	56 0b       	sbc	r21, r22
    1734:	c9 0b       	sbc	r28, r25
    1736:	d0 09       	sbc	r29, r0
    1738:	c0 f7       	brcc	.-16     	; 0x172a <__ftoa_engine+0x10a>
    173a:	e1 0c       	add	r14, r1
    173c:	f1 1e       	adc	r15, r17
    173e:	43 1f       	adc	r20, r19
    1740:	56 1f       	adc	r21, r22
    1742:	c9 1f       	adc	r28, r25
    1744:	d0 1d       	adc	r29, r0
    1746:	7e f4       	brtc	.+30     	; 0x1766 <__ftoa_engine+0x146>
    1748:	70 33       	cpi	r23, 0x30	; 48
    174a:	11 f4       	brne	.+4      	; 0x1750 <__ftoa_engine+0x130>
    174c:	8a 95       	dec	r24
    174e:	e6 cf       	rjmp	.-52     	; 0x171c <__ftoa_engine+0xfc>
    1750:	e8 94       	clt
    1752:	01 50       	subi	r16, 0x01	; 1
    1754:	30 f0       	brcs	.+12     	; 0x1762 <__ftoa_engine+0x142>
    1756:	08 0f       	add	r16, r24
    1758:	0a f4       	brpl	.+2      	; 0x175c <__ftoa_engine+0x13c>
    175a:	00 27       	eor	r16, r16
    175c:	02 17       	cp	r16, r18
    175e:	08 f4       	brcc	.+2      	; 0x1762 <__ftoa_engine+0x142>
    1760:	20 2f       	mov	r18, r16
    1762:	23 95       	inc	r18
    1764:	02 2f       	mov	r16, r18
    1766:	7a 33       	cpi	r23, 0x3A	; 58
    1768:	28 f0       	brcs	.+10     	; 0x1774 <__ftoa_engine+0x154>
    176a:	79 e3       	ldi	r23, 0x39	; 57
    176c:	7d 93       	st	X+, r23
    176e:	2a 95       	dec	r18
    1770:	e9 f7       	brne	.-6      	; 0x176c <__ftoa_engine+0x14c>
    1772:	10 c0       	rjmp	.+32     	; 0x1794 <__ftoa_engine+0x174>
    1774:	7d 93       	st	X+, r23
    1776:	2a 95       	dec	r18
    1778:	89 f6       	brne	.-94     	; 0x171c <__ftoa_engine+0xfc>
    177a:	06 94       	lsr	r0
    177c:	97 95       	ror	r25
    177e:	67 95       	ror	r22
    1780:	37 95       	ror	r19
    1782:	17 95       	ror	r17
    1784:	17 94       	ror	r1
    1786:	e1 18       	sub	r14, r1
    1788:	f1 0a       	sbc	r15, r17
    178a:	43 0b       	sbc	r20, r19
    178c:	56 0b       	sbc	r21, r22
    178e:	c9 0b       	sbc	r28, r25
    1790:	d0 09       	sbc	r29, r0
    1792:	98 f0       	brcs	.+38     	; 0x17ba <__ftoa_engine+0x19a>
    1794:	23 95       	inc	r18
    1796:	7e 91       	ld	r23, -X
    1798:	73 95       	inc	r23
    179a:	7a 33       	cpi	r23, 0x3A	; 58
    179c:	08 f0       	brcs	.+2      	; 0x17a0 <__ftoa_engine+0x180>
    179e:	70 e3       	ldi	r23, 0x30	; 48
    17a0:	7c 93       	st	X, r23
    17a2:	20 13       	cpse	r18, r16
    17a4:	b8 f7       	brcc	.-18     	; 0x1794 <__ftoa_engine+0x174>
    17a6:	7e 91       	ld	r23, -X
    17a8:	70 61       	ori	r23, 0x10	; 16
    17aa:	7d 93       	st	X+, r23
    17ac:	30 f0       	brcs	.+12     	; 0x17ba <__ftoa_engine+0x19a>
    17ae:	83 95       	inc	r24
    17b0:	71 e3       	ldi	r23, 0x31	; 49
    17b2:	7d 93       	st	X+, r23
    17b4:	70 e3       	ldi	r23, 0x30	; 48
    17b6:	2a 95       	dec	r18
    17b8:	e1 f7       	brne	.-8      	; 0x17b2 <__ftoa_engine+0x192>
    17ba:	11 24       	eor	r1, r1
    17bc:	ef 90       	pop	r14
    17be:	ff 90       	pop	r15
    17c0:	0f 91       	pop	r16
    17c2:	1f 91       	pop	r17
    17c4:	cf 91       	pop	r28
    17c6:	df 91       	pop	r29
    17c8:	99 27       	eor	r25, r25
    17ca:	87 fd       	sbrc	r24, 7
    17cc:	90 95       	com	r25
    17ce:	08 95       	ret

000017d0 <strnlen_P>:
    17d0:	fc 01       	movw	r30, r24
    17d2:	05 90       	lpm	r0, Z+
    17d4:	61 50       	subi	r22, 0x01	; 1
    17d6:	70 40       	sbci	r23, 0x00	; 0
    17d8:	01 10       	cpse	r0, r1
    17da:	d8 f7       	brcc	.-10     	; 0x17d2 <strnlen_P+0x2>
    17dc:	80 95       	com	r24
    17de:	90 95       	com	r25
    17e0:	8e 0f       	add	r24, r30
    17e2:	9f 1f       	adc	r25, r31
    17e4:	08 95       	ret

000017e6 <strnlen>:
    17e6:	fc 01       	movw	r30, r24
    17e8:	61 50       	subi	r22, 0x01	; 1
    17ea:	70 40       	sbci	r23, 0x00	; 0
    17ec:	01 90       	ld	r0, Z+
    17ee:	01 10       	cpse	r0, r1
    17f0:	d8 f7       	brcc	.-10     	; 0x17e8 <strnlen+0x2>
    17f2:	80 95       	com	r24
    17f4:	90 95       	com	r25
    17f6:	8e 0f       	add	r24, r30
    17f8:	9f 1f       	adc	r25, r31
    17fa:	08 95       	ret

000017fc <fdevopen>:
    17fc:	0f 93       	push	r16
    17fe:	1f 93       	push	r17
    1800:	cf 93       	push	r28
    1802:	df 93       	push	r29
    1804:	00 97       	sbiw	r24, 0x00	; 0
    1806:	31 f4       	brne	.+12     	; 0x1814 <fdevopen+0x18>
    1808:	61 15       	cp	r22, r1
    180a:	71 05       	cpc	r23, r1
    180c:	19 f4       	brne	.+6      	; 0x1814 <fdevopen+0x18>
    180e:	80 e0       	ldi	r24, 0x00	; 0
    1810:	90 e0       	ldi	r25, 0x00	; 0
    1812:	3a c0       	rjmp	.+116    	; 0x1888 <fdevopen+0x8c>
    1814:	8b 01       	movw	r16, r22
    1816:	ec 01       	movw	r28, r24
    1818:	6e e0       	ldi	r22, 0x0E	; 14
    181a:	70 e0       	ldi	r23, 0x00	; 0
    181c:	81 e0       	ldi	r24, 0x01	; 1
    181e:	90 e0       	ldi	r25, 0x00	; 0
    1820:	0e 94 29 0d 	call	0x1a52	; 0x1a52 <calloc>
    1824:	fc 01       	movw	r30, r24
    1826:	89 2b       	or	r24, r25
    1828:	91 f3       	breq	.-28     	; 0x180e <fdevopen+0x12>
    182a:	80 e8       	ldi	r24, 0x80	; 128
    182c:	83 83       	std	Z+3, r24	; 0x03
    182e:	01 15       	cp	r16, r1
    1830:	11 05       	cpc	r17, r1
    1832:	71 f0       	breq	.+28     	; 0x1850 <fdevopen+0x54>
    1834:	13 87       	std	Z+11, r17	; 0x0b
    1836:	02 87       	std	Z+10, r16	; 0x0a
    1838:	81 e8       	ldi	r24, 0x81	; 129
    183a:	83 83       	std	Z+3, r24	; 0x03
    183c:	80 91 42 02 	lds	r24, 0x0242	; 0x800242 <__iob>
    1840:	90 91 43 02 	lds	r25, 0x0243	; 0x800243 <__iob+0x1>
    1844:	89 2b       	or	r24, r25
    1846:	21 f4       	brne	.+8      	; 0x1850 <fdevopen+0x54>
    1848:	f0 93 43 02 	sts	0x0243, r31	; 0x800243 <__iob+0x1>
    184c:	e0 93 42 02 	sts	0x0242, r30	; 0x800242 <__iob>
    1850:	20 97       	sbiw	r28, 0x00	; 0
    1852:	c9 f0       	breq	.+50     	; 0x1886 <fdevopen+0x8a>
    1854:	d1 87       	std	Z+9, r29	; 0x09
    1856:	c0 87       	std	Z+8, r28	; 0x08
    1858:	83 81       	ldd	r24, Z+3	; 0x03
    185a:	82 60       	ori	r24, 0x02	; 2
    185c:	83 83       	std	Z+3, r24	; 0x03
    185e:	80 91 44 02 	lds	r24, 0x0244	; 0x800244 <__iob+0x2>
    1862:	90 91 45 02 	lds	r25, 0x0245	; 0x800245 <__iob+0x3>
    1866:	89 2b       	or	r24, r25
    1868:	71 f4       	brne	.+28     	; 0x1886 <fdevopen+0x8a>
    186a:	f0 93 45 02 	sts	0x0245, r31	; 0x800245 <__iob+0x3>
    186e:	e0 93 44 02 	sts	0x0244, r30	; 0x800244 <__iob+0x2>
    1872:	80 91 46 02 	lds	r24, 0x0246	; 0x800246 <__iob+0x4>
    1876:	90 91 47 02 	lds	r25, 0x0247	; 0x800247 <__iob+0x5>
    187a:	89 2b       	or	r24, r25
    187c:	21 f4       	brne	.+8      	; 0x1886 <fdevopen+0x8a>
    187e:	f0 93 47 02 	sts	0x0247, r31	; 0x800247 <__iob+0x5>
    1882:	e0 93 46 02 	sts	0x0246, r30	; 0x800246 <__iob+0x4>
    1886:	cf 01       	movw	r24, r30
    1888:	df 91       	pop	r29
    188a:	cf 91       	pop	r28
    188c:	1f 91       	pop	r17
    188e:	0f 91       	pop	r16
    1890:	08 95       	ret

00001892 <fputc>:
    1892:	0f 93       	push	r16
    1894:	1f 93       	push	r17
    1896:	cf 93       	push	r28
    1898:	df 93       	push	r29
    189a:	fb 01       	movw	r30, r22
    189c:	23 81       	ldd	r18, Z+3	; 0x03
    189e:	21 fd       	sbrc	r18, 1
    18a0:	03 c0       	rjmp	.+6      	; 0x18a8 <fputc+0x16>
    18a2:	8f ef       	ldi	r24, 0xFF	; 255
    18a4:	9f ef       	ldi	r25, 0xFF	; 255
    18a6:	2c c0       	rjmp	.+88     	; 0x1900 <fputc+0x6e>
    18a8:	22 ff       	sbrs	r18, 2
    18aa:	16 c0       	rjmp	.+44     	; 0x18d8 <fputc+0x46>
    18ac:	46 81       	ldd	r20, Z+6	; 0x06
    18ae:	57 81       	ldd	r21, Z+7	; 0x07
    18b0:	24 81       	ldd	r18, Z+4	; 0x04
    18b2:	35 81       	ldd	r19, Z+5	; 0x05
    18b4:	42 17       	cp	r20, r18
    18b6:	53 07       	cpc	r21, r19
    18b8:	44 f4       	brge	.+16     	; 0x18ca <fputc+0x38>
    18ba:	a0 81       	ld	r26, Z
    18bc:	b1 81       	ldd	r27, Z+1	; 0x01
    18be:	9d 01       	movw	r18, r26
    18c0:	2f 5f       	subi	r18, 0xFF	; 255
    18c2:	3f 4f       	sbci	r19, 0xFF	; 255
    18c4:	31 83       	std	Z+1, r19	; 0x01
    18c6:	20 83       	st	Z, r18
    18c8:	8c 93       	st	X, r24
    18ca:	26 81       	ldd	r18, Z+6	; 0x06
    18cc:	37 81       	ldd	r19, Z+7	; 0x07
    18ce:	2f 5f       	subi	r18, 0xFF	; 255
    18d0:	3f 4f       	sbci	r19, 0xFF	; 255
    18d2:	37 83       	std	Z+7, r19	; 0x07
    18d4:	26 83       	std	Z+6, r18	; 0x06
    18d6:	14 c0       	rjmp	.+40     	; 0x1900 <fputc+0x6e>
    18d8:	8b 01       	movw	r16, r22
    18da:	ec 01       	movw	r28, r24
    18dc:	fb 01       	movw	r30, r22
    18de:	00 84       	ldd	r0, Z+8	; 0x08
    18e0:	f1 85       	ldd	r31, Z+9	; 0x09
    18e2:	e0 2d       	mov	r30, r0
    18e4:	09 95       	icall
    18e6:	89 2b       	or	r24, r25
    18e8:	e1 f6       	brne	.-72     	; 0x18a2 <fputc+0x10>
    18ea:	d8 01       	movw	r26, r16
    18ec:	16 96       	adiw	r26, 0x06	; 6
    18ee:	8d 91       	ld	r24, X+
    18f0:	9c 91       	ld	r25, X
    18f2:	17 97       	sbiw	r26, 0x07	; 7
    18f4:	01 96       	adiw	r24, 0x01	; 1
    18f6:	17 96       	adiw	r26, 0x07	; 7
    18f8:	9c 93       	st	X, r25
    18fa:	8e 93       	st	-X, r24
    18fc:	16 97       	sbiw	r26, 0x06	; 6
    18fe:	ce 01       	movw	r24, r28
    1900:	df 91       	pop	r29
    1902:	cf 91       	pop	r28
    1904:	1f 91       	pop	r17
    1906:	0f 91       	pop	r16
    1908:	08 95       	ret

0000190a <printf>:
    190a:	a0 e0       	ldi	r26, 0x00	; 0
    190c:	b0 e0       	ldi	r27, 0x00	; 0
    190e:	eb e8       	ldi	r30, 0x8B	; 139
    1910:	fc e0       	ldi	r31, 0x0C	; 12
    1912:	0c 94 e9 0a 	jmp	0x15d2	; 0x15d2 <__prologue_saves__+0x20>
    1916:	ae 01       	movw	r20, r28
    1918:	4b 5f       	subi	r20, 0xFB	; 251
    191a:	5f 4f       	sbci	r21, 0xFF	; 255
    191c:	fa 01       	movw	r30, r20
    191e:	61 91       	ld	r22, Z+
    1920:	71 91       	ld	r23, Z+
    1922:	af 01       	movw	r20, r30
    1924:	80 91 44 02 	lds	r24, 0x0244	; 0x800244 <__iob+0x2>
    1928:	90 91 45 02 	lds	r25, 0x0245	; 0x800245 <__iob+0x3>
    192c:	0e 94 5c 07 	call	0xeb8	; 0xeb8 <vfprintf>
    1930:	e2 e0       	ldi	r30, 0x02	; 2
    1932:	0c 94 05 0b 	jmp	0x160a	; 0x160a <__epilogue_restores__+0x20>

00001936 <puts>:
    1936:	0f 93       	push	r16
    1938:	1f 93       	push	r17
    193a:	cf 93       	push	r28
    193c:	df 93       	push	r29
    193e:	e0 91 44 02 	lds	r30, 0x0244	; 0x800244 <__iob+0x2>
    1942:	f0 91 45 02 	lds	r31, 0x0245	; 0x800245 <__iob+0x3>
    1946:	23 81       	ldd	r18, Z+3	; 0x03
    1948:	21 ff       	sbrs	r18, 1
    194a:	1b c0       	rjmp	.+54     	; 0x1982 <puts+0x4c>
    194c:	8c 01       	movw	r16, r24
    194e:	d0 e0       	ldi	r29, 0x00	; 0
    1950:	c0 e0       	ldi	r28, 0x00	; 0
    1952:	f8 01       	movw	r30, r16
    1954:	81 91       	ld	r24, Z+
    1956:	8f 01       	movw	r16, r30
    1958:	60 91 44 02 	lds	r22, 0x0244	; 0x800244 <__iob+0x2>
    195c:	70 91 45 02 	lds	r23, 0x0245	; 0x800245 <__iob+0x3>
    1960:	db 01       	movw	r26, r22
    1962:	18 96       	adiw	r26, 0x08	; 8
    1964:	ed 91       	ld	r30, X+
    1966:	fc 91       	ld	r31, X
    1968:	19 97       	sbiw	r26, 0x09	; 9
    196a:	88 23       	and	r24, r24
    196c:	31 f0       	breq	.+12     	; 0x197a <puts+0x44>
    196e:	09 95       	icall
    1970:	89 2b       	or	r24, r25
    1972:	79 f3       	breq	.-34     	; 0x1952 <puts+0x1c>
    1974:	df ef       	ldi	r29, 0xFF	; 255
    1976:	cf ef       	ldi	r28, 0xFF	; 255
    1978:	ec cf       	rjmp	.-40     	; 0x1952 <puts+0x1c>
    197a:	8a e0       	ldi	r24, 0x0A	; 10
    197c:	09 95       	icall
    197e:	89 2b       	or	r24, r25
    1980:	19 f0       	breq	.+6      	; 0x1988 <puts+0x52>
    1982:	8f ef       	ldi	r24, 0xFF	; 255
    1984:	9f ef       	ldi	r25, 0xFF	; 255
    1986:	02 c0       	rjmp	.+4      	; 0x198c <puts+0x56>
    1988:	8d 2f       	mov	r24, r29
    198a:	9c 2f       	mov	r25, r28
    198c:	df 91       	pop	r29
    198e:	cf 91       	pop	r28
    1990:	1f 91       	pop	r17
    1992:	0f 91       	pop	r16
    1994:	08 95       	ret

00001996 <__ultoa_invert>:
    1996:	fa 01       	movw	r30, r20
    1998:	aa 27       	eor	r26, r26
    199a:	28 30       	cpi	r18, 0x08	; 8
    199c:	51 f1       	breq	.+84     	; 0x19f2 <__ultoa_invert+0x5c>
    199e:	20 31       	cpi	r18, 0x10	; 16
    19a0:	81 f1       	breq	.+96     	; 0x1a02 <__ultoa_invert+0x6c>
    19a2:	e8 94       	clt
    19a4:	6f 93       	push	r22
    19a6:	6e 7f       	andi	r22, 0xFE	; 254
    19a8:	6e 5f       	subi	r22, 0xFE	; 254
    19aa:	7f 4f       	sbci	r23, 0xFF	; 255
    19ac:	8f 4f       	sbci	r24, 0xFF	; 255
    19ae:	9f 4f       	sbci	r25, 0xFF	; 255
    19b0:	af 4f       	sbci	r26, 0xFF	; 255
    19b2:	b1 e0       	ldi	r27, 0x01	; 1
    19b4:	3e d0       	rcall	.+124    	; 0x1a32 <__ultoa_invert+0x9c>
    19b6:	b4 e0       	ldi	r27, 0x04	; 4
    19b8:	3c d0       	rcall	.+120    	; 0x1a32 <__ultoa_invert+0x9c>
    19ba:	67 0f       	add	r22, r23
    19bc:	78 1f       	adc	r23, r24
    19be:	89 1f       	adc	r24, r25
    19c0:	9a 1f       	adc	r25, r26
    19c2:	a1 1d       	adc	r26, r1
    19c4:	68 0f       	add	r22, r24
    19c6:	79 1f       	adc	r23, r25
    19c8:	8a 1f       	adc	r24, r26
    19ca:	91 1d       	adc	r25, r1
    19cc:	a1 1d       	adc	r26, r1
    19ce:	6a 0f       	add	r22, r26
    19d0:	71 1d       	adc	r23, r1
    19d2:	81 1d       	adc	r24, r1
    19d4:	91 1d       	adc	r25, r1
    19d6:	a1 1d       	adc	r26, r1
    19d8:	20 d0       	rcall	.+64     	; 0x1a1a <__ultoa_invert+0x84>
    19da:	09 f4       	brne	.+2      	; 0x19de <__ultoa_invert+0x48>
    19dc:	68 94       	set
    19de:	3f 91       	pop	r19
    19e0:	2a e0       	ldi	r18, 0x0A	; 10
    19e2:	26 9f       	mul	r18, r22
    19e4:	11 24       	eor	r1, r1
    19e6:	30 19       	sub	r19, r0
    19e8:	30 5d       	subi	r19, 0xD0	; 208
    19ea:	31 93       	st	Z+, r19
    19ec:	de f6       	brtc	.-74     	; 0x19a4 <__ultoa_invert+0xe>
    19ee:	cf 01       	movw	r24, r30
    19f0:	08 95       	ret
    19f2:	46 2f       	mov	r20, r22
    19f4:	47 70       	andi	r20, 0x07	; 7
    19f6:	40 5d       	subi	r20, 0xD0	; 208
    19f8:	41 93       	st	Z+, r20
    19fa:	b3 e0       	ldi	r27, 0x03	; 3
    19fc:	0f d0       	rcall	.+30     	; 0x1a1c <__ultoa_invert+0x86>
    19fe:	c9 f7       	brne	.-14     	; 0x19f2 <__ultoa_invert+0x5c>
    1a00:	f6 cf       	rjmp	.-20     	; 0x19ee <__ultoa_invert+0x58>
    1a02:	46 2f       	mov	r20, r22
    1a04:	4f 70       	andi	r20, 0x0F	; 15
    1a06:	40 5d       	subi	r20, 0xD0	; 208
    1a08:	4a 33       	cpi	r20, 0x3A	; 58
    1a0a:	18 f0       	brcs	.+6      	; 0x1a12 <__ultoa_invert+0x7c>
    1a0c:	49 5d       	subi	r20, 0xD9	; 217
    1a0e:	31 fd       	sbrc	r19, 1
    1a10:	40 52       	subi	r20, 0x20	; 32
    1a12:	41 93       	st	Z+, r20
    1a14:	02 d0       	rcall	.+4      	; 0x1a1a <__ultoa_invert+0x84>
    1a16:	a9 f7       	brne	.-22     	; 0x1a02 <__ultoa_invert+0x6c>
    1a18:	ea cf       	rjmp	.-44     	; 0x19ee <__ultoa_invert+0x58>
    1a1a:	b4 e0       	ldi	r27, 0x04	; 4
    1a1c:	a6 95       	lsr	r26
    1a1e:	97 95       	ror	r25
    1a20:	87 95       	ror	r24
    1a22:	77 95       	ror	r23
    1a24:	67 95       	ror	r22
    1a26:	ba 95       	dec	r27
    1a28:	c9 f7       	brne	.-14     	; 0x1a1c <__ultoa_invert+0x86>
    1a2a:	00 97       	sbiw	r24, 0x00	; 0
    1a2c:	61 05       	cpc	r22, r1
    1a2e:	71 05       	cpc	r23, r1
    1a30:	08 95       	ret
    1a32:	9b 01       	movw	r18, r22
    1a34:	ac 01       	movw	r20, r24
    1a36:	0a 2e       	mov	r0, r26
    1a38:	06 94       	lsr	r0
    1a3a:	57 95       	ror	r21
    1a3c:	47 95       	ror	r20
    1a3e:	37 95       	ror	r19
    1a40:	27 95       	ror	r18
    1a42:	ba 95       	dec	r27
    1a44:	c9 f7       	brne	.-14     	; 0x1a38 <__ultoa_invert+0xa2>
    1a46:	62 0f       	add	r22, r18
    1a48:	73 1f       	adc	r23, r19
    1a4a:	84 1f       	adc	r24, r20
    1a4c:	95 1f       	adc	r25, r21
    1a4e:	a0 1d       	adc	r26, r0
    1a50:	08 95       	ret

00001a52 <calloc>:
    1a52:	0f 93       	push	r16
    1a54:	1f 93       	push	r17
    1a56:	cf 93       	push	r28
    1a58:	df 93       	push	r29
    1a5a:	86 9f       	mul	r24, r22
    1a5c:	80 01       	movw	r16, r0
    1a5e:	87 9f       	mul	r24, r23
    1a60:	10 0d       	add	r17, r0
    1a62:	96 9f       	mul	r25, r22
    1a64:	10 0d       	add	r17, r0
    1a66:	11 24       	eor	r1, r1
    1a68:	c8 01       	movw	r24, r16
    1a6a:	0e 94 45 0d 	call	0x1a8a	; 0x1a8a <malloc>
    1a6e:	ec 01       	movw	r28, r24
    1a70:	00 97       	sbiw	r24, 0x00	; 0
    1a72:	29 f0       	breq	.+10     	; 0x1a7e <calloc+0x2c>
    1a74:	a8 01       	movw	r20, r16
    1a76:	60 e0       	ldi	r22, 0x00	; 0
    1a78:	70 e0       	ldi	r23, 0x00	; 0
    1a7a:	0e 94 66 0e 	call	0x1ccc	; 0x1ccc <memset>
    1a7e:	ce 01       	movw	r24, r28
    1a80:	df 91       	pop	r29
    1a82:	cf 91       	pop	r28
    1a84:	1f 91       	pop	r17
    1a86:	0f 91       	pop	r16
    1a88:	08 95       	ret

00001a8a <malloc>:
    1a8a:	0f 93       	push	r16
    1a8c:	1f 93       	push	r17
    1a8e:	cf 93       	push	r28
    1a90:	df 93       	push	r29
    1a92:	82 30       	cpi	r24, 0x02	; 2
    1a94:	91 05       	cpc	r25, r1
    1a96:	10 f4       	brcc	.+4      	; 0x1a9c <malloc+0x12>
    1a98:	82 e0       	ldi	r24, 0x02	; 2
    1a9a:	90 e0       	ldi	r25, 0x00	; 0
    1a9c:	e0 91 4a 02 	lds	r30, 0x024A	; 0x80024a <__flp>
    1aa0:	f0 91 4b 02 	lds	r31, 0x024B	; 0x80024b <__flp+0x1>
    1aa4:	20 e0       	ldi	r18, 0x00	; 0
    1aa6:	30 e0       	ldi	r19, 0x00	; 0
    1aa8:	a0 e0       	ldi	r26, 0x00	; 0
    1aaa:	b0 e0       	ldi	r27, 0x00	; 0
    1aac:	30 97       	sbiw	r30, 0x00	; 0
    1aae:	19 f1       	breq	.+70     	; 0x1af6 <malloc+0x6c>
    1ab0:	40 81       	ld	r20, Z
    1ab2:	51 81       	ldd	r21, Z+1	; 0x01
    1ab4:	02 81       	ldd	r16, Z+2	; 0x02
    1ab6:	13 81       	ldd	r17, Z+3	; 0x03
    1ab8:	48 17       	cp	r20, r24
    1aba:	59 07       	cpc	r21, r25
    1abc:	c8 f0       	brcs	.+50     	; 0x1af0 <malloc+0x66>
    1abe:	84 17       	cp	r24, r20
    1ac0:	95 07       	cpc	r25, r21
    1ac2:	69 f4       	brne	.+26     	; 0x1ade <malloc+0x54>
    1ac4:	10 97       	sbiw	r26, 0x00	; 0
    1ac6:	31 f0       	breq	.+12     	; 0x1ad4 <malloc+0x4a>
    1ac8:	12 96       	adiw	r26, 0x02	; 2
    1aca:	0c 93       	st	X, r16
    1acc:	12 97       	sbiw	r26, 0x02	; 2
    1ace:	13 96       	adiw	r26, 0x03	; 3
    1ad0:	1c 93       	st	X, r17
    1ad2:	27 c0       	rjmp	.+78     	; 0x1b22 <malloc+0x98>
    1ad4:	00 93 4a 02 	sts	0x024A, r16	; 0x80024a <__flp>
    1ad8:	10 93 4b 02 	sts	0x024B, r17	; 0x80024b <__flp+0x1>
    1adc:	22 c0       	rjmp	.+68     	; 0x1b22 <malloc+0x98>
    1ade:	21 15       	cp	r18, r1
    1ae0:	31 05       	cpc	r19, r1
    1ae2:	19 f0       	breq	.+6      	; 0x1aea <malloc+0x60>
    1ae4:	42 17       	cp	r20, r18
    1ae6:	53 07       	cpc	r21, r19
    1ae8:	18 f4       	brcc	.+6      	; 0x1af0 <malloc+0x66>
    1aea:	9a 01       	movw	r18, r20
    1aec:	bd 01       	movw	r22, r26
    1aee:	ef 01       	movw	r28, r30
    1af0:	df 01       	movw	r26, r30
    1af2:	f8 01       	movw	r30, r16
    1af4:	db cf       	rjmp	.-74     	; 0x1aac <malloc+0x22>
    1af6:	21 15       	cp	r18, r1
    1af8:	31 05       	cpc	r19, r1
    1afa:	f9 f0       	breq	.+62     	; 0x1b3a <malloc+0xb0>
    1afc:	28 1b       	sub	r18, r24
    1afe:	39 0b       	sbc	r19, r25
    1b00:	24 30       	cpi	r18, 0x04	; 4
    1b02:	31 05       	cpc	r19, r1
    1b04:	80 f4       	brcc	.+32     	; 0x1b26 <malloc+0x9c>
    1b06:	8a 81       	ldd	r24, Y+2	; 0x02
    1b08:	9b 81       	ldd	r25, Y+3	; 0x03
    1b0a:	61 15       	cp	r22, r1
    1b0c:	71 05       	cpc	r23, r1
    1b0e:	21 f0       	breq	.+8      	; 0x1b18 <malloc+0x8e>
    1b10:	fb 01       	movw	r30, r22
    1b12:	93 83       	std	Z+3, r25	; 0x03
    1b14:	82 83       	std	Z+2, r24	; 0x02
    1b16:	04 c0       	rjmp	.+8      	; 0x1b20 <malloc+0x96>
    1b18:	90 93 4b 02 	sts	0x024B, r25	; 0x80024b <__flp+0x1>
    1b1c:	80 93 4a 02 	sts	0x024A, r24	; 0x80024a <__flp>
    1b20:	fe 01       	movw	r30, r28
    1b22:	32 96       	adiw	r30, 0x02	; 2
    1b24:	44 c0       	rjmp	.+136    	; 0x1bae <malloc+0x124>
    1b26:	fe 01       	movw	r30, r28
    1b28:	e2 0f       	add	r30, r18
    1b2a:	f3 1f       	adc	r31, r19
    1b2c:	81 93       	st	Z+, r24
    1b2e:	91 93       	st	Z+, r25
    1b30:	22 50       	subi	r18, 0x02	; 2
    1b32:	31 09       	sbc	r19, r1
    1b34:	39 83       	std	Y+1, r19	; 0x01
    1b36:	28 83       	st	Y, r18
    1b38:	3a c0       	rjmp	.+116    	; 0x1bae <malloc+0x124>
    1b3a:	20 91 48 02 	lds	r18, 0x0248	; 0x800248 <__brkval>
    1b3e:	30 91 49 02 	lds	r19, 0x0249	; 0x800249 <__brkval+0x1>
    1b42:	23 2b       	or	r18, r19
    1b44:	41 f4       	brne	.+16     	; 0x1b56 <malloc+0xcc>
    1b46:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
    1b4a:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
    1b4e:	30 93 49 02 	sts	0x0249, r19	; 0x800249 <__brkval+0x1>
    1b52:	20 93 48 02 	sts	0x0248, r18	; 0x800248 <__brkval>
    1b56:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
    1b5a:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
    1b5e:	21 15       	cp	r18, r1
    1b60:	31 05       	cpc	r19, r1
    1b62:	41 f4       	brne	.+16     	; 0x1b74 <malloc+0xea>
    1b64:	2d b7       	in	r18, 0x3d	; 61
    1b66:	3e b7       	in	r19, 0x3e	; 62
    1b68:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
    1b6c:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
    1b70:	24 1b       	sub	r18, r20
    1b72:	35 0b       	sbc	r19, r21
    1b74:	e0 91 48 02 	lds	r30, 0x0248	; 0x800248 <__brkval>
    1b78:	f0 91 49 02 	lds	r31, 0x0249	; 0x800249 <__brkval+0x1>
    1b7c:	e2 17       	cp	r30, r18
    1b7e:	f3 07       	cpc	r31, r19
    1b80:	a0 f4       	brcc	.+40     	; 0x1baa <malloc+0x120>
    1b82:	2e 1b       	sub	r18, r30
    1b84:	3f 0b       	sbc	r19, r31
    1b86:	28 17       	cp	r18, r24
    1b88:	39 07       	cpc	r19, r25
    1b8a:	78 f0       	brcs	.+30     	; 0x1baa <malloc+0x120>
    1b8c:	ac 01       	movw	r20, r24
    1b8e:	4e 5f       	subi	r20, 0xFE	; 254
    1b90:	5f 4f       	sbci	r21, 0xFF	; 255
    1b92:	24 17       	cp	r18, r20
    1b94:	35 07       	cpc	r19, r21
    1b96:	48 f0       	brcs	.+18     	; 0x1baa <malloc+0x120>
    1b98:	4e 0f       	add	r20, r30
    1b9a:	5f 1f       	adc	r21, r31
    1b9c:	50 93 49 02 	sts	0x0249, r21	; 0x800249 <__brkval+0x1>
    1ba0:	40 93 48 02 	sts	0x0248, r20	; 0x800248 <__brkval>
    1ba4:	81 93       	st	Z+, r24
    1ba6:	91 93       	st	Z+, r25
    1ba8:	02 c0       	rjmp	.+4      	; 0x1bae <malloc+0x124>
    1baa:	e0 e0       	ldi	r30, 0x00	; 0
    1bac:	f0 e0       	ldi	r31, 0x00	; 0
    1bae:	cf 01       	movw	r24, r30
    1bb0:	df 91       	pop	r29
    1bb2:	cf 91       	pop	r28
    1bb4:	1f 91       	pop	r17
    1bb6:	0f 91       	pop	r16
    1bb8:	08 95       	ret

00001bba <free>:
    1bba:	cf 93       	push	r28
    1bbc:	df 93       	push	r29
    1bbe:	00 97       	sbiw	r24, 0x00	; 0
    1bc0:	09 f4       	brne	.+2      	; 0x1bc4 <free+0xa>
    1bc2:	81 c0       	rjmp	.+258    	; 0x1cc6 <free+0x10c>
    1bc4:	fc 01       	movw	r30, r24
    1bc6:	32 97       	sbiw	r30, 0x02	; 2
    1bc8:	13 82       	std	Z+3, r1	; 0x03
    1bca:	12 82       	std	Z+2, r1	; 0x02
    1bcc:	a0 91 4a 02 	lds	r26, 0x024A	; 0x80024a <__flp>
    1bd0:	b0 91 4b 02 	lds	r27, 0x024B	; 0x80024b <__flp+0x1>
    1bd4:	10 97       	sbiw	r26, 0x00	; 0
    1bd6:	81 f4       	brne	.+32     	; 0x1bf8 <free+0x3e>
    1bd8:	20 81       	ld	r18, Z
    1bda:	31 81       	ldd	r19, Z+1	; 0x01
    1bdc:	82 0f       	add	r24, r18
    1bde:	93 1f       	adc	r25, r19
    1be0:	20 91 48 02 	lds	r18, 0x0248	; 0x800248 <__brkval>
    1be4:	30 91 49 02 	lds	r19, 0x0249	; 0x800249 <__brkval+0x1>
    1be8:	28 17       	cp	r18, r24
    1bea:	39 07       	cpc	r19, r25
    1bec:	51 f5       	brne	.+84     	; 0x1c42 <free+0x88>
    1bee:	f0 93 49 02 	sts	0x0249, r31	; 0x800249 <__brkval+0x1>
    1bf2:	e0 93 48 02 	sts	0x0248, r30	; 0x800248 <__brkval>
    1bf6:	67 c0       	rjmp	.+206    	; 0x1cc6 <free+0x10c>
    1bf8:	ed 01       	movw	r28, r26
    1bfa:	20 e0       	ldi	r18, 0x00	; 0
    1bfc:	30 e0       	ldi	r19, 0x00	; 0
    1bfe:	ce 17       	cp	r28, r30
    1c00:	df 07       	cpc	r29, r31
    1c02:	40 f4       	brcc	.+16     	; 0x1c14 <free+0x5a>
    1c04:	4a 81       	ldd	r20, Y+2	; 0x02
    1c06:	5b 81       	ldd	r21, Y+3	; 0x03
    1c08:	9e 01       	movw	r18, r28
    1c0a:	41 15       	cp	r20, r1
    1c0c:	51 05       	cpc	r21, r1
    1c0e:	f1 f0       	breq	.+60     	; 0x1c4c <free+0x92>
    1c10:	ea 01       	movw	r28, r20
    1c12:	f5 cf       	rjmp	.-22     	; 0x1bfe <free+0x44>
    1c14:	d3 83       	std	Z+3, r29	; 0x03
    1c16:	c2 83       	std	Z+2, r28	; 0x02
    1c18:	40 81       	ld	r20, Z
    1c1a:	51 81       	ldd	r21, Z+1	; 0x01
    1c1c:	84 0f       	add	r24, r20
    1c1e:	95 1f       	adc	r25, r21
    1c20:	c8 17       	cp	r28, r24
    1c22:	d9 07       	cpc	r29, r25
    1c24:	59 f4       	brne	.+22     	; 0x1c3c <free+0x82>
    1c26:	88 81       	ld	r24, Y
    1c28:	99 81       	ldd	r25, Y+1	; 0x01
    1c2a:	84 0f       	add	r24, r20
    1c2c:	95 1f       	adc	r25, r21
    1c2e:	02 96       	adiw	r24, 0x02	; 2
    1c30:	91 83       	std	Z+1, r25	; 0x01
    1c32:	80 83       	st	Z, r24
    1c34:	8a 81       	ldd	r24, Y+2	; 0x02
    1c36:	9b 81       	ldd	r25, Y+3	; 0x03
    1c38:	93 83       	std	Z+3, r25	; 0x03
    1c3a:	82 83       	std	Z+2, r24	; 0x02
    1c3c:	21 15       	cp	r18, r1
    1c3e:	31 05       	cpc	r19, r1
    1c40:	29 f4       	brne	.+10     	; 0x1c4c <free+0x92>
    1c42:	f0 93 4b 02 	sts	0x024B, r31	; 0x80024b <__flp+0x1>
    1c46:	e0 93 4a 02 	sts	0x024A, r30	; 0x80024a <__flp>
    1c4a:	3d c0       	rjmp	.+122    	; 0x1cc6 <free+0x10c>
    1c4c:	e9 01       	movw	r28, r18
    1c4e:	fb 83       	std	Y+3, r31	; 0x03
    1c50:	ea 83       	std	Y+2, r30	; 0x02
    1c52:	49 91       	ld	r20, Y+
    1c54:	59 91       	ld	r21, Y+
    1c56:	c4 0f       	add	r28, r20
    1c58:	d5 1f       	adc	r29, r21
    1c5a:	ec 17       	cp	r30, r28
    1c5c:	fd 07       	cpc	r31, r29
    1c5e:	61 f4       	brne	.+24     	; 0x1c78 <free+0xbe>
    1c60:	80 81       	ld	r24, Z
    1c62:	91 81       	ldd	r25, Z+1	; 0x01
    1c64:	84 0f       	add	r24, r20
    1c66:	95 1f       	adc	r25, r21
    1c68:	02 96       	adiw	r24, 0x02	; 2
    1c6a:	e9 01       	movw	r28, r18
    1c6c:	99 83       	std	Y+1, r25	; 0x01
    1c6e:	88 83       	st	Y, r24
    1c70:	82 81       	ldd	r24, Z+2	; 0x02
    1c72:	93 81       	ldd	r25, Z+3	; 0x03
    1c74:	9b 83       	std	Y+3, r25	; 0x03
    1c76:	8a 83       	std	Y+2, r24	; 0x02
    1c78:	e0 e0       	ldi	r30, 0x00	; 0
    1c7a:	f0 e0       	ldi	r31, 0x00	; 0
    1c7c:	12 96       	adiw	r26, 0x02	; 2
    1c7e:	8d 91       	ld	r24, X+
    1c80:	9c 91       	ld	r25, X
    1c82:	13 97       	sbiw	r26, 0x03	; 3
    1c84:	00 97       	sbiw	r24, 0x00	; 0
    1c86:	19 f0       	breq	.+6      	; 0x1c8e <free+0xd4>
    1c88:	fd 01       	movw	r30, r26
    1c8a:	dc 01       	movw	r26, r24
    1c8c:	f7 cf       	rjmp	.-18     	; 0x1c7c <free+0xc2>
    1c8e:	8d 91       	ld	r24, X+
    1c90:	9c 91       	ld	r25, X
    1c92:	11 97       	sbiw	r26, 0x01	; 1
    1c94:	9d 01       	movw	r18, r26
    1c96:	2e 5f       	subi	r18, 0xFE	; 254
    1c98:	3f 4f       	sbci	r19, 0xFF	; 255
    1c9a:	82 0f       	add	r24, r18
    1c9c:	93 1f       	adc	r25, r19
    1c9e:	20 91 48 02 	lds	r18, 0x0248	; 0x800248 <__brkval>
    1ca2:	30 91 49 02 	lds	r19, 0x0249	; 0x800249 <__brkval+0x1>
    1ca6:	28 17       	cp	r18, r24
    1ca8:	39 07       	cpc	r19, r25
    1caa:	69 f4       	brne	.+26     	; 0x1cc6 <free+0x10c>
    1cac:	30 97       	sbiw	r30, 0x00	; 0
    1cae:	29 f4       	brne	.+10     	; 0x1cba <free+0x100>
    1cb0:	10 92 4b 02 	sts	0x024B, r1	; 0x80024b <__flp+0x1>
    1cb4:	10 92 4a 02 	sts	0x024A, r1	; 0x80024a <__flp>
    1cb8:	02 c0       	rjmp	.+4      	; 0x1cbe <free+0x104>
    1cba:	13 82       	std	Z+3, r1	; 0x03
    1cbc:	12 82       	std	Z+2, r1	; 0x02
    1cbe:	b0 93 49 02 	sts	0x0249, r27	; 0x800249 <__brkval+0x1>
    1cc2:	a0 93 48 02 	sts	0x0248, r26	; 0x800248 <__brkval>
    1cc6:	df 91       	pop	r29
    1cc8:	cf 91       	pop	r28
    1cca:	08 95       	ret

00001ccc <memset>:
    1ccc:	dc 01       	movw	r26, r24
    1cce:	01 c0       	rjmp	.+2      	; 0x1cd2 <memset+0x6>
    1cd0:	6d 93       	st	X+, r22
    1cd2:	41 50       	subi	r20, 0x01	; 1
    1cd4:	50 40       	sbci	r21, 0x00	; 0
    1cd6:	e0 f7       	brcc	.-8      	; 0x1cd0 <memset+0x4>
    1cd8:	08 95       	ret

00001cda <_exit>:
    1cda:	f8 94       	cli

00001cdc <__stop_program>:
    1cdc:	ff cf       	rjmp	.-2      	; 0x1cdc <__stop_program>
